<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yinhe.ProcessingCenter</name>
    </assembly>
    <members>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelper">
            <summary>
             SQL数据连接处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of SqlParameters tho be added to command</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">array of SqlParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the SqlCommand to be prepared</param>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an array of SqlParamters</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.IPathAnalyse">
            <summary>
            路径解析接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepCode(System.String)">
            <summary>
            部门标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepParentName(System.String)">
            <summary>
            获取父级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepLevel(System.String)">
            <summary>
            获取部门级别
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepListFilter(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            部门过滤
            </summary>
            <param name="depList"></param>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserCode(System.String)">
            <summary>
            获取用户标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserListFilter(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADUser)">
            <summary>
            用户过滤
            </summary>
            <param name="userList">用户列表</param>
            <param name="user">欲添加的用户</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SurveyLib.SubjectCategory">
            <summary>
            题目分类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SurveyLib.SubjectCategory.catId">
            <summary>
            分类ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SurveyLib.SubjectCategory.name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SurveyLib.SubjectCategory.remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FormStatus">
            <summary>
            枚举相关
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MvcFilters.CommonSearch">
            <summary>
            通用搜索处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String,System.String)">
            <summary>
            优先级最高
            </summary>
            <param name="table"></param>
            <param name="query"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            第二优先级
            </summary>
            <param name="table"></param>
            <param name="query"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String)">
            <summary>
             第三优先级
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,MongoDB.Driver.MongoCursor{MongoDB.Bson.BsonDocument})">
            <summary>
            对列表进行分页搜索
            </summary>
            <param name="bsonDocQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32,System.Int32@,MongoDB.Driver.MongoCursor{MongoDB.Bson.BsonDocument})">
            <summary>
            对列表进行过滤搜索
            </summary>
            <param name="bsonDocQuery">集合</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,System.String,System.String,System.String)">
            <summary>
            单值查询
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageCount">当前总页数</param>
            <param name="tableName">表名</param>
            <param name="key">字段</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,System.String,System.String)">
            <summary>
            单值查询 
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageCount">当前总页数</param>
            <param name="tableName">表名</param>
            <param name="key">字段</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@)">
            <summary>
            查询字符串,该方法必须先构造非默认构造函数，即必须至少传入表名
            public CommonSearch(string table, IMongoQuery  query)或者
            public CommonSearch(string table, IMongoQuery  query)
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.String,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearchForFile(System.Int32,System.Int32@,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount"></param>
            <param name="keyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.GetBsonDocument">
            <summary>
            获取当前可以返回的数据列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.GetPageCount(System.Int64,System.Int64)">
            <summary>
            获取分页数
            </summary>
            <param name="pageSize"></param>
            <param name="recordCount"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Extensions.ImageExtension.CreateThumbnail(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            生产图片的缩略图
            </summary>
            <param name="originalImagePath">图片的源路径</param>
            <param name="thumbnailPath">缩略图路径</param>
            <param name="desiredWidth">缩略图宽度</param>
            <param name="desiredHight">缩略图高度</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Extensions.ImageExtension.GetThumbnailSize(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            获取缩略图的的宽和高
            </summary>
            <param name="originalWidth">原始图片的宽度</param>
            <param name="originalHeight">原始图片的高度</param>
            <param name="desiredWidth">制定图片的宽度</param>
            <param name="desiredHeight">制定图片的高度</param>
            <param name="newWidth">最终获取的图片宽度</param>
            <param name="newHeight">最终获取的图片高度</param>
        </member>
        <member name="T:System.Web.Mvc.Html.AuthExtensions">
            <summary>
            权限验证
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.UserTypeEnum">
            <summary>
            用户类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.UserTypeEnum.SystemUser">
            <summary>
             系统用户
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.UserTypeEnum.DebugUser">
            <summary>
            调试用户，系统内置
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.TreeView">
            <summary>
            树状视图处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.ToString">
            <summary>
            输出树html
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.GetChildTree(Yinhe.ProcessingCenter.Common.Tree)">
            <summary>
            获取某一节点的子节点
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.IsLeaf(System.String)">
            <summary>
            判断是否为叶子节点（没有子节点）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.GetRootTreeList">
            <summary>
            获取根节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.TreeView.TreeList">
            <summary>
            树的所有节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.TreeView.RootTreeList">
            <summary>
            根结点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.StandarLibEnum">
            <summary>
            标准成果库枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.UNITLIB">
            <summary>
            户型库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DECORATIONLIB">
            <summary>
            室内精装修
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.FACADELIB">
            <summary>
            立面库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DEMAREALIB">
            <summary>
            示范区库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.LANDSCAPELIB">
            <summary>
            景观库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.CRAFTSLIB">
            <summary>
            标准工艺工法库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.PARTSLIB">
            <summary>
            公共部位库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DEVICELIB">
            <summary>
            设备与技术库 
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingChart">
            <summary>
            报表实例处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingDisplay">
            <summary>
            报表展示处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceSelectColumn">
            <summary>
            替换选择列
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceGroupByColumn">
            <summary>
            替换选择列groupBy
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceWhereColumn">
            <summary>
            替换选择列过滤条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.DicRowKey">
            <summary>
            没有选择列的统计结果Key
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.reportData">
            <summary>
            报表数据类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.reportingSeries">
            <summary>
            报表数据集合类型ReportingSerie 包含ReportingData
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.dicPrm">
            <summary>
            报表参数
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.dicReport">
            <summary>
            报表数据结果
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.GetFieldMap(System.String)">
            <summary>
            获取字段的映射
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.CheckValidateSql">
            <summary>
            检查是否为有效的Sql
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingDisplay.Message">
            <summary>
            报表处理结果信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.IReportingDisplay">
            <summary>
             报表展示接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.IReportingDisplay.RenderHtml(System.Web.UI.Page)">
            <summary>
            输出html代码
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.IReportingDisplay.RenderChartPointHtml(System.Web.UI.Page)">
            <summary>
            输出html代码
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.IReportingDisplay.GenerateChartImage(System.String)">
            <summary>
            生成图表图片
            </summary>
            <param name="chartImageDir">存放图片的物理文件夹路径</param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultChartAreaName">
            <summary>
            默认的ChartArea
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultSerieName">
            <summary>
            默认的Serie
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultLegendName">
            <summary>
            默认Legend
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingData},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名数据源</param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingSerie},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名数据源</param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.LoadDefaultStyle">
            <summary>
            初始化默认样式
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.InitChart">
            <summary>
            初始化图表控件的部分参数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.ChartDataBind">
            <summary>
            图表数据绑定
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.ChartPointDataBind">
            <summary>
            散点图表数据绑定
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.CheckConvertNumeric(System.Data.DataTable,System.Int32,System.Double@)">
            <summary>
            判断是否要转数值
            </summary>
            <param name="tblReport"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.CreateYAxis(System.Web.UI.DataVisualization.Charting.Chart,System.Web.UI.DataVisualization.Charting.ChartArea,System.Web.UI.DataVisualization.Charting.Series,System.Single,System.Single)">
            <summary>
            Creates Y axis for the specified series.
            </summary>
            <param name="chart">Chart control.</param>
            <param name="area">Original chart area.</param>
            <param name="series">Series.</param>
            <param name="axisOffset">New Y axis offset in relative coordinates.</param>
            <param name="labelsSize">Extar space for new Y axis labels in relative coordinates.</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.CheckValidata">
            <summary>
            检测是否有效的报表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.RenderHtml(System.Web.UI.Page)">
            <summary>
            输出报表
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.RenderChartPointHtml(System.Web.UI.Page)">
            <summary>
            输出散点报表
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.GenerateChartImage(System.String)">
            <summary>
            生成图表图片
            </summary>
            <param name="chartImageDir">存放图片的物理文件夹路径</param>
            <returns>范围文件名</returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingChart.ValidataReporting">
            <summary>
            检测报表是否有效
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.StartTimer">
            <summary>
            开启计时器
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.StopTimer">
            <summary>
            停止计时器
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.AddElapsedEvent(Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.RunMethod)">
            <summary>
            添加计时器执行方法
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.RemoveElapsedEvent(Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.RunMethod)">
            <summary>
            移除计时器执行方法
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.ChangeDate(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            更改索引日期（若全空，则取消日期限制）
            </summary>
            <param name="y">年</param>
            <param name="m">月</param>
            <param name="d">日</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.ChangeTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            更改索引时间（若全空，则取消时间限制）
            </summary>
            <param name="h">小时</param>
            <param name="m">分钟</param>
            <param name="s">秒</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.RegularlyUpdateIndex(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            定时更新索引（注意时间要和计时器时间有交集）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.IsRunning">
            <summary>
            计时器是否正在运行
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.BusinessLogic.UpdateTimerBll.Interval">
            <summary>
            建索引完成和下一次触发事件的时间间隔
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.IfRule">
            <summary>
            判断规则,继承基础操作规则
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.OperateRule">
            <summary>
            操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Vars">
            <summary>
            级联内顶级变量
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Foreachs">
            <summary>
            级联内顶级循环
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Ifs">
            <summary>
            级联内顶级判断
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Storages">
            <summary>
            级联内顶级操作
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.SetOperateRule(System.Xml.Linq.XElement)">
            <summary>
            获取顶级操作对象,即获取级联操作父类属性
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.GetStorageDatas(Yinhe.ProcessingCenter.MongoOperation,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取顶级存储语句
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.IfRule.Condition">
            <summary>
            判断条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.IfRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.IfRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.IfRule.SetIfRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的判断规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.messageService">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.#ctor">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginName(System.String,System.String[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameAsync(System.String,System.String[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameAsync(System.String,System.String[],System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserId(System.String,System.Int64[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdAsync(System.String,System.Int64[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdAsync(System.String,System.Int64[],System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameCompleted">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdCompleted">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.ServiceResponse">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorMessage">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorNumber">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorNumberSpecified">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.result">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.resultSpecified">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.GetTokenChart(System.Int32)">
            <summary>
            生成令牌
            </summary>
            <param name="len"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.guid">
            <summary>
             guid码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.LandProperty">
            <summary>
            用地性质
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.LandSeries">
            <summary>
            适合产品系列
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.transferAreaM2">
            <summary>
             出让面积(㎡)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.transferAreaMu">
            <summary>
             出让面积(亩)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.transferTime">
            <summary>
             出让时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.transferTerm">
            <summary>
             出让年限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.volumeRate">
            <summary>
             容积率
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.buildingArea">
            <summary>
             计容建面(㎡)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.totalBuildingArea">
            <summary>
             总建面积
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.landTypeId">
            <summary>
             土地类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.otherImportant">
            <summary>
             其他重要规定
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.startingPrice">
            <summary>
               起拍价(万)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.floorPrice">
            <summary>
             起拍楼面价(元/㎡)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.securityDeposit">
            <summary>
             保证金(万)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.soldPrice">
            <summary>
             成交价(万)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.soldFloorPrice">
            <summary>
              成交楼面价(元/m2)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.announcementEndDate">
            <summary>
             公告截止日期
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.orginalPrice">
            <summary>
             土地原价款(万)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.orginalFloorPrice">
            <summary>
              土地原楼面价(元/㎡)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.totalPurchasePrice">
            <summary>
              收购总价(万)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.totalPurchaseFloorPrice">
            <summary>
              收购楼面价(元/m2)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.purchaseDate">
            <summary>
            收购日期
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.landPriceSchedule">
            <summary>
            合作价款支付进度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.breachContract">
            <summary>
            违约责任
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.remark">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.overallEvaluation">
            <summary>
            土地总体评价
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.name">
            <summary>
            土地块名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.id">
            <summary>
            地块Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.cityId">
            <summary>
            地块所属城市
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.plateId">
            <summary>
            地块所在板块
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.location">
            <summary>
            地块所在片区
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.projRes">
            <summary>
            项目来源
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.locationId">
            <summary>
            地块所在区位
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.projList">
            <summary>
            关联项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.legalCompany">
            <summary>
             我司参拍法人公司
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.auctionPrice">
            <summary>
             我司参拍价(万元)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.greeningRate">
            <summary>
             绿化率
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.LandEntiry.getLandDate">
            <summary>
            拿地时间
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.RelProject">
            <summary>
            关联项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.RelProject.projId">
            <summary>
            项目Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.RelProject.name">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.RelProject.landId">
            <summary>
            关联地块
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndName.id">
            <summary>
            指标Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndName.name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndName.remark">
            <summary>
            指标Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndNameDate.id">
            <summary>
            指标Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndNameDate.name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndNameDate.remark">
            <summary>
            指标Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndName1.id">
            <summary>
            指标Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.LandLibTransformXml.ItemIdAndName1.name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.IGetDataList">
            <summary>
            同步数据获取接口
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileOperationHelper">
            <summary>
            文件处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.FindFileListByStructId(System.Int32)">
            <summary>
            获得目录下的文件列表
            </summary>
            <param name="structId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadSingleFile(Yinhe.ProcessingCenter.Document.FileUploadObject)">
            <summary>
            上传单文件
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFiles(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            上传多文件
            </summary>
            <param name="objList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadNewVersion(Yinhe.ProcessingCenter.Document.FileUploadVersionObject)">
            <summary>
            上传新版本
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SaveSingleFile(Yinhe.ProcessingCenter.Document.FileUploadObject)">
            <summary>
            文件保存方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFilesTree(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            上传多文件
            </summary>
            <param name="objList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.FolderTreeInsert(Yinhe.ProcessingCenter.Document.TreeNode,Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            将树形结构插入数据库 并对主键赋值  
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.FolderTreeInsertNew(Yinhe.ProcessingCenter.Document.TreeNode,Yinhe.ProcessingCenter.Document.TreeNode,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            将树形结构插入数据库 并对主键赋值  (待优化成批量保存方法)2016-09-03-xjs
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <param name="insertFolderList"></param>
            <param name="tableName"></param>
            <param name="keyValue"></param>
            <param name="propvalueDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFilesPackage(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            文件包上传
            </summary>
            <param name="objList">文件列表</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileId(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileIdList(System.Collections.Generic.List{MongoDB.Bson.BsonValue})">
            <summary>
            根据文档Id列表批量删除文档
            </summary>
            <param name="fileIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByRelId(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByRelIdList(System.Collections.Generic.List{MongoDB.Bson.BsonValue})">
            <summary>
            根据关联Id列表批量删除
            </summary>
            <param name="fileRelIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileVerId(System.Int32)">
            <summary>
            删除文件文件版本
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileVerIdList(System.Collections.Generic.List{MongoDB.Bson.BsonValue})">
            <summary>
            根据关联Id列表批量删除
            </summary>
            <param name="fileRelIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFile(System.String,System.String,System.String)">
            <summary>
            文件删除
            </summary>
            <param name="tableName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFile(System.String,System.String,System.String,System.String)">
            <summary>
            文件删除
            </summary>
            <param name="tableName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <param name="fileObjId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFolder(System.Int32)">
            <summary>
            删除该文件夹下的所有子节点及其文件
            </summary>
            <param name="structId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SetCoverImageNew(System.String,System.String,System.String,System.String)">
            <summary>
            未实时保存时设置封面图
            </summary>
            <param name="fileObjId"></param>
            <param name="tableName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SetFileDescription(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            文档描述
            </summary>
            <param name="propDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UpdateFileDescription(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            更新文件描述
            </summary>
            <param name="fileId"></param>
            <param name="propDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.ResultConver(System.Collections.Generic.List{Yinhe.ProcessingCenter.InvokeResult{Yinhe.ProcessingCenter.Document.FileUploadSaveResult}})">
            <summary>
            对象转换 将文件上传结果对象转成字符串 
            参数格式 param 前置参数@关联表id fileRetId-文件id fileId-版本id fileVerId 
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.GetImgPath(System.String)">
            <summary>
            获取默认缩略图路径
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.UploadType">
            <summary>
            文件上传类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.File">
            <summary>
            普通文件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.Package">
            <summary>
            文件包
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.Folder">
            <summary>
            文件夹
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileParam">
            <summary>
            系统文件参数对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.docId">
            <summary>
            文档ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.lastVersion">
            <summary>
            文档最新版本
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.path">
            <summary>
            文档本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.strParam">
            <summary>
            文档参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.ext">
            <summary>
            文档扩展名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.ProfId">
            <summary>
            文档归属专业
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.PhareId">
            <summary>
            文档归属阶段
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.FileCatId">
            <summary>
            文档所属类别
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileParam.StrHash">
            <summary>
            文档唯一标示符
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadObject">
            <summary>
            文件上传对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileTypeId">
            <summary>
            所属类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileObjId">
            <summary>
            所属对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.tableName">
            <summary>
            关联表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.keyName">
            <summary>
            关联表主键名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.keyValue">
            <summary>
            关联表主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.uploadType">
            <summary>
            是否文件夹
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.isPreDefine">
            <summary>
            是否预定义文档
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.isCover">
            <summary>
            是否封面图
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.propvalueDic">
            <summary>
            文档属性字典
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.rootDir">
            <summary>
            根目录
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.structId">
            <summary>
            所属目录
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.subMapParam">
            <summary>
            文件子图参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.guid2d">
            <summary>
            二维码字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_profId">
            <summary>
            文档关联表专业属性值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_stageId">
            <summary>
            文档关联表阶段属性值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_fileCatId">
            <summary>
             文档关联表类别属性值
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadSaveResult">
            <summary>
            文件保存结果
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.param">
            <summary>
            前置参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileRelId">
            <summary>
            关联表ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileId">
            <summary>
            文件id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileVerId">
            <summary>
            文件版本
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.ext">
            <summary>
             扩展名
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadVersionObject">
            <summary>
            版本上传对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.fileId">
            <summary>
            主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.propvalueDic">
            <summary>
            文档属性字典
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectRightAttribute">
            <summary>
            验证分项权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ProjectRightAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>
            分项权限过滤器
            </summary>
            <param name="roleType">权限类型</param>
            <param name="dataKey">数据对象key</param>
            <param name="codes">权限代码</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysRightAttribute">
            <summary>
            验证系统权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SysRightAttribute.#ctor(System.String[])">
            <summary>
            验证系统权限
            </summary>
            <param name="codes">权限码</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CalculateHelper">
            <summary>
            计算处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetCalculateResult(System.String)">
            <summary>
            获取计算值
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.InsertBlank(System.String)">
            <summary>
            为表达式插入空格
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.ConvertToRPN(System.String)">
            <summary>
            转化为逆波兰表达式
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetResult(System.String)">
            <summary>
            根据逆波兰表达式获取结构
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetValue(System.Double,System.Double,System.Char)">
            <summary>
            简单四则运算
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="_operator"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.CalculateHelper.OperatorLevel">
            <summary>
            运算符优先级
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ForeachRule">
            <summary>
            循环规则,继承基础操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Name">
            <summary>
            循环对象的引用名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Object">
            <summary>
            循环的对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ForeachRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ForeachRule.SetForeachRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的循环规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ColumnRule">
            <summary>
            字段规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Name">
            <summary>
            字段间的唯一标示
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Type">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.IsPrimary">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.IsIdentity">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.SourceTable">
            <summary>
            外键源表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.SourceColumn">
            <summary>
            外键源字段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Value">
            <summary>
            值,字段有的默认值或设置值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ColumnRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ColumnRule.SetColumnRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应字段实体
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.IAuthorityRuleAnalyse">
            <summary>
            权限规则解析
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IAuthorityRuleAnalyse.GetRuleExpression(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            关联接口关系
            </summary>
            <param name="relationAnaly"></param>
            <param name="userInfo"></param>
            <param name="userRule"></param>
            <param name="dataRule"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.ADSynchronization">
            <summary>
            AD域登录同步处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADSynchronization.SearchDepartment(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            搜索部门AD
            </summary>
            <param name="path"></param>
            <param name="objFilter"></param>
            <param name="dicPropertes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADSynchronization.SearchUser(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            搜索用户
            </summary>
            <param name="path"></param>
            <param name="objFilter"></param>
            <param name="dicPropertes"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.Domain">
            <summary>
            AD域名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.UserName">
            <summary>
            登陆AD域的用户名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADDepartment">
            <summary>
            部门实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADUser">
            <summary>
            AD同步用户实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADPosition">
            <summary>
            AD同步岗位实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADPositionUserRel">
            <summary>
            AD同步岗位用户关联实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileCommonOperation">
            <summary>
            文件通用处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetThumbImg(System.Int32,System.String)">
            <summary>
             获取缩略图
            </summary>
            <param name="doc"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetThumbImg(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取缩略图
            </summary>
            <param name="doc"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.StringReplace(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            字符串替换
            </summary>
            <param name="fileId">文件ID</param>
            <param name="sourSring">原字符串</param>
            <param name="replaceString">替换字符串</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientOnlineRead(System.Int32)">
            <summary>
            在线查看方法
            </summary>
            <param name="fileId">文档ID</param>
            <returns>返回在线查看脚本代码</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientOnlineRead(MongoDB.Bson.BsonDocument)">
            <summary>
            在线查看方法
            </summary>
            <param name="doc">文档对象</param>
            <returns>返回在线查看脚本代码</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientDownLoad(System.Int32)">
            <summary>
            下载方法
            </summary>
            <param name="fileId">文档ID</param>
            <returns>返回下载脚本代码</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientDownLoad(MongoDB.Bson.BsonDocument)">
            <summary>
            下载方法
            </summary>
            <param name="doc">文档对象</param>
            <returns>返回下载脚本代码</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetFileContent(System.String)">
            <summary>
            获取指定文件流
            </summary>
            <param name="guid">文件唯一标示符</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.TransferFileIn(Yinhe.ProcessingCenter.Document.FileUploadObject)">
            <summary>
            后台外部系统传输文件到设计系统
            </summary>
            <param name="fileobject">带传输的文档对象信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.StringReplace(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tobeReplace"></param>
            <param name="sourSring"></param>
            <param name="replaceString"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.SetDataOpration(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            替换类的数据库连接
            </summary>
            <param name="dataOp"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingFactory">
            <summary>
            报表工厂映射类
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetBaseBQXC(System.String[],System.String[])">
            <summary>
            获得新城的基本搜索条件
            </summary>
            <param name="moduleIds">模块</param>
            <param name="typeIds">模块类型</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetSecSearchXC(System.String)">
            <summary>
            新城二次搜索过滤器
            </summary>
            <param name="key2">第二次搜索的关键词</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetQueryByArray(System.String,System.String[])">
            <summary>
            通过字符串值匹配字段
            </summary>
            <param name="field">字段名</param>
            <param name="values">字符串值</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetSearchListXC(System.String,System.String,System.Int32,System.String[],System.String[],System.Double@,System.Int32@,System.Int32@)">
            <summary>
            新城-获得搜索结果
            </summary>
            <param name="key"></param>
            <param name="pageNum"></param>
            <param name="moduleIds"></param>
            <param name="showTypeIds"></param>
            <param name="STime"></param>
            <param name="STotal"></param>
            <param name="PTotal"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetAllModules">
            <summary>
            获得搜索引擎的模块
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.Search(System.String,System.Int32,Lucene.Net.Search.BooleanQuery,Lucene.Net.Search.Filter,System.Double@,System.Int32@,System.Int32@)">
            <summary>
            搜索
            </summary>
            <param name="key">关键字</param>
            <param name="pageNum">页码</param>
            <param name="baseBQ">基本条件</param>
            <param name="STime">耗时</param>
            <param name="STotal">搜索结果总条数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.SearchByIndexId(System.String,System.Int32,System.Double@,System.Int32@)">
            <summary>
            通过索引objId查找文档
            </summary>
            <param name="indexId">索引objId</param>
            <param name="pageNum">当前页</param>
            <param name="STime">搜索所用时间</param>
            <param name="STotal">搜索结果文档数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetLinkUrl(Lucene.Net.Documents.Document,System.String,System.String)">
            <summary>
            获取连接地址
            </summary>
            <param name="doc">参数值取自的文档</param>
            <param name="linkUrl">地址</param>
            <param name="linkParams">参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.TopDocs(System.Int32,System.Int32,Lucene.Net.Search.TopDocs)">
            <summary>
            获取匹配的结果
            </summary>
            <param name="start">从第几条开始显示</param>
            <param name="limit">限制显示多少条</param>
            <param name="docs">搜索结果的文档</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetKeyWordsSplitBySpace(System.String,Lucene.Net.Analysis.PanGu.PanGuTokenizer)">
            <summary>
            将关键词进行分词
            </summary>
            <param name="keywords">关键词</param>
            <param name="ktTokenizer">分词器</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.SaveSearchLog(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            保存用户搜索日志
            </summary>
            <param name="logDic">日志字典</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetSimilarResultBySearch(System.String,System.Int32,System.Int32)">
            <summary>
            通过搜索日志获取相关搜索列表（过期）
            </summary>
            <param name="keyword">搜索关键字</param>
            <param name="showNum">显示条数</param>
            <param name="threshold">阈值：超出次数才列入</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetSimilarResult(System.String,System.Int32)">
            <summary>
            通过关联日志获取相关搜索列表
            </summary>
            <param name="keyword">搜索关键字</param>
            <param name="showNum">显示条数</param>
            <param name="threshold">阈值：超出次数才列入</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetHotSearch(System.Int32)">
            <summary>
            获取最热搜索
            </summary>
            <param name="showNum">显示数目</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetHotLatelySearch(System.Int32,System.Int32)">
            <summary>
            获取近期最热搜索
            </summary>
            <param name="showNum">显示数目</param>
            <param name="dayAgo">近期是指多少天前</param>
            <param name="threshold">次数阈值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.GetSmartTips(System.String,System.String,System.Int32)">
            <summary>
            智能提示
            </summary>
            <param name="startStr">开始字符串</param>
            <param name="showNum">显示条数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SearcherBll.DelPersonalSearchLog(System.String,System.String)">
            <summary>
            删除个人搜索历史
            </summary>
            <param name="keyword">要删除记录的关键字</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Principal">
            <summary>
            用户凭证处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Principal.IsInRole(System.String)">
            <summary>
                                Determines whether the current principal belongs to the specified role.
            </summary>
            <returns>
            true if the current principal is a member of the specified role; otherwise, false.
            </returns>
            <param name="role">
                                The name of the role for which to check membership. 
                            </param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Principal.Identity">
            <summary>
                                Gets the identity of the current principal.
            </summary>
            <returns>
                                The <see cref="T:System.Security.Principal.IIdentity" /> object associated with the current principal.
            </returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MongoOperation">
            <summary>
            Mongos数据连接操作
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.#ctor">
            <summary>
            默认构造函数,读取配置项中的数据库
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.#ctor(System.String)">
            <summary>
            构造函数,串入数据库连接串,进行数据库连接
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.ConnectionDataBase(System.String)">
            <summary>
            连接数据库
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.UseDataBase(System.String)">
            <summary>
            切换使用的数据库
            </summary>
            <param name="dbName">切换的数据库名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetServer">
            <summary>
            获取当前服务器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetDataBase">
            <summary>
            获取当前数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetCollection(System.String)">
            <summary>
            获取所需集合
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindOne(System.String)">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindOne(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindOneById(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            根据_id查找一条记录
            </summary>
            <param name="collName"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindAll(System.String)">
            <summary>
            查找集合中所有记录
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindAll(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Find(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.FieldsDocument)">
            <summary>
            根据搜索条件查找多条记录的自定字段
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Find(System.String,MongoDB.Driver.IMongoQuery,System.String[])">
            <summary>
            根据搜索条件查找多条记录的自定字段
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.EvalNativeQuery(System.String)">
            <summary>
            执行原生查询
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindCount(System.String)">
            <summary>
            返回查询表的总个数
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindCount(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            返回查询表的总个数
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Find(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.SortByDocument,System.Int32,System.Int32)">
            <summary>
            根据搜索条件查找
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            插入单条数据
            </summary>
            <param name="collName"></param>
            <param name="saveDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            批量插入数据
            </summary>
            <param name="collName"></param>
            <param name="saveDocList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新记录
            </summary>
            <param name="collName"></param>
            <param name="searchDoc">可为空,为空为插入</param>
            <param name="saveDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.InsertBatch(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            批量插入数据
            </summary>
            <param name="collName"></param>
            <param name="saveDocList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Update(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate)">
            <summary>
            更新数据
            </summary>
            <param name="collName"></param>
            <param name="saveDocList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Update(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.UpdateFlags)">
            <summary>
            更新数据
            </summary>
            <param name="collName"></param>
            <param name="saveDocList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Delete(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            删除记录
            </summary>
            <param name="collName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.DropTable(System.String)">
            <summary>
            删除数据表
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:MongoDB.Bson.BsonDocumentExtension">
            <summary>
            BsonDoc方法重载
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SourceBson(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字段对应的主表记录
            </summary>
            <param name="bsonDoc"></param>
            <param name="foreignFieldName"> 外键字段名称</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SourceBsonField(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            快捷获取字段对应的主表记录的字段值
            </summary>
            <param name="bsonDoc"></param>
            <param name="foreignFieldName">外键值</param>
            <param name="fieldName">外键表要获取的字段</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ChildBsonList(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字段对应的主表记录
            </summary>
            <param name="bsonDoc"></param>
            <param name="name">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.BsonDocumentList(MongoDB.Bson.BsonDocument,System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
             获取字符串值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:MongoDB.Bson.BsonDocumentExtension.BsonDocumentList(MongoDB.Bson.BsonDocument,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Text(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取文本值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Text(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
             获取文本值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.String(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字符串值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.TryAdd(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            向对象新增key，如果key已经存在，则修改原先key对应的值
            </summary>
            <param name="bsonDoc"></param>
            <param name="key">key值</param>
            <param name="val">要新增的对象</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.String(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
             获取字符串值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Int(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取整形值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Int(MongoDB.Bson.BsonDocument,System.String,System.Int32)">
            <summary>
            获取整形值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Money(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            货币的格式展示
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Money_Z(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            货币的格式展示
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Money_ZOT(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            货币的格式展示
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Date(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Date(MongoDB.Bson.BsonDocument,System.String,System.DateTime)">
            <summary>
            获取日期值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Double(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Double(MongoDB.Bson.BsonDocument,System.String,System.Double)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Decimal(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.RoundDecimal(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Decimal(MongoDB.Bson.BsonDocument,System.String,System.Decimal)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ContainsColumn(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取当前记录的是否包含列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ColumnCount(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的是否包含列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.CreateDate(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.UpdateDate(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.CreateUserName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.UpdateUserName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.DateFormat(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name">字段名</param>
            <param name="formate">例如"yyyy-MM-dd"</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ShortDate(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.KeyField(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段名
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.TableName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段名
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.KeyValue(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.IsNullOrEmpty(MongoDB.Bson.BsonDocument)">
            <summary>
            判断一个BsonDocument是否为空或为NULL
            </summary>
            <param name="bsonDoc"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SetValue(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            通用设置接口
            </summary>
            <param name="bsonDoc"></param>
            <param name="fieldName"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authorityService">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.#ctor">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticate(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateCompleted">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.UserToken">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.UserToken.id">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.UserToken.nullToken">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CacheHelper">
            <summary>
            缓存处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.SetCache(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime)">
            <summary>
            添加缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="cachedep"></param>
            <param name="overDueTime"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.RemoveCache(System.String)">
            <summary>
            清除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AssemblyHelper">
            <summary>
            插件处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetDirAssemblies(System.String)">
            <summary>
            获取目录下的所有程序集
            </summary>
            <param name="dirPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetAllAssemblies">
            <summary>
            获取包含插件目录的所有程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetPluginAssemblies">
            <summary>
            获取所有插件程序集
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DLLComparer">
            <summary>
            DLL比较器
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AuthManage">
            <summary>
            角色验证处理
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage.CHECKRIGHTAG">
            <summary>
            用于设置Html按钮的标签属性
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetUserFunctionRight(System.Int32)">
            <summary>
            获取用户所有系统功能权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.NewGetUserFunctionRight(System.Int32)">
            <summary>
            重写获取用户所有系统功能权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.FindUserFunctionRight(System.Int32)">
            <summary>
            获取用户的所有功能权限
            </summary>
            <param name="userId">用户id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckRight(System.String)">
             <summary>
             检查是否拥有响应权限
             </summary>
             <param name="rightCode">
             多个权限 MODULECODE_RIGHTCODE|1|数据对象Id_数据实例Id,MODULECODE_RIGHTCODE
            MODULECODE_RIGHTCODE|userId_1
            MODULECODE_RIGHTCODE|数据对象Id_数据实例Id
            MODULECODE_RIGHTCODE|userId_1|数据对象Id_数据实例Id
             MODULECODE_RIGHTCODE --权限代码
            userId_1 --标示具有指定权限代码并且数据的创建人是本人
            数据对象Id_数据实例Id --指定该权限项验证的是指定数据对象，数据实例的权限（比如某个项目的权限）
             </param>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckProjEngRight(System.String)">
            <summary>
            判断工程权限
            </summary>
            <param name="projEngId"></param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage._DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage._AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckDataRight(System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            检查数据权限代码
            </summary>
            <param name="dataObjId"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckDataRight(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            项目库权限控制(解决权限叠加bug)zpx
            </summary>
            <param name="dataObjId"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <param name="userId"></param>
            <param name="flag"></param>
            <param name="areaCode">范围 表名+表的主键+"|"</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCode(System.Int32,Yinhe.ProcessingCenter.Common.RightCodeEnum,System.Nullable{System.Int32})">
            <summary>
            获取标准成果库权限代码
            </summary>
            <param name="libId">库Id</param>
            <param name="code"></param>
            <param name="createUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCodeTag(System.String[])">
            <summary>
            获取标准成果库权限代码标签
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCode(Yinhe.ProcessingCenter.Common.StandarLibEnum,Yinhe.ProcessingCenter.Common.RightCodeEnum,System.Nullable{System.Int32})">
            <summary>
            获取标准成果库权限代码
            </summary>
            <param name="libId">库Id</param>
            <param name="code"></param>
            <param name="createUserId"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.errorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.customerCode">
            <summary>
            系统站点客户代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.userName">
            <summary>
            登录用户名可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.hostDomain">
            <summary>
            系统站点地址可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.requestUrl">
            <summary>
            请求地址可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.referrer">
            <summary>
            引用地址可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.postData">
            <summary>
            post数据可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.approvalUserId">
            <summary>
            错误处理人可空
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.logType">
            <summary>
            记录类型0 异常 1 系统当日使用频度 2用户上传文件失败情况 5 材料库监控
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.curDayValue">
            <summary>
            数值填写，当天比如统计的个数，登录个数，失败文件个数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.totalValue">
            <summary>
            数值填写，总的比如统计的个数，登录个数，失败文件个数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PushMessageInfo.fileStatisDate">
            <summary>
            统计哪一天的文件上传情况（年-月-日）
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.HttpHelper">
            <summary>
            模拟post请求类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HttpHelper.HttpPost(System.String,System.String)">
            <summary>
            post数据
            </summary>
            <param name="Url"></param>
            <param name="postDataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HttpHelper.HttpGet(System.String,System.String)">
            <summary>
            get数据
            </summary>
            <param name="Url"></param>
            <param name="postDataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HttpHelper.GetCooKie(System.String,System.String,Yinhe.ProcessingCenter.HttpHelper.HttpHeader)">
            <summary>
            获取CooKie
            </summary>
            <param name="loginUrl"></param>
            <param name="postdata"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HttpHelper.GetHtmlByCustomerHeader(System.String,Yinhe.ProcessingCenter.HttpHelper.HttpHeader,System.Net.CookieContainer)">
            <summary>
            获取html
            </summary>
            <param name="getUrl"></param>
            <param name="cookieContainer"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Mvc.Html.HtmlExtensions">
            <summary>
            Html重载
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.ShowSelect(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
            <summary>
            获取下拉列表中的选择项名称
            </summary>
            <param name="htmlHelper"></param>
            <param name="selectList"></param>
            <param name="selectVal"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.BsonSelectList(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.String)">
            <summary>
            bson枚举生成selectList对象
            </summary>
            <param name="htmlHelper"></param>
            <param name="bsonList">bson枚举列表</param>
            <param name="id">下拉列表Id项的key值</param>
            <param name="name">下拉列表name项的key值</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.BsonSelectList(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.String,System.Object)">
            <summary>
            bson枚举生成selectList对象
            </summary>
            <param name="htmlHelper"></param>
            <param name="bsonList">bson枚举列表</param>
            <param name="id">下拉列表Id项的key值</param>
            <param name="name">下拉列表name项的key值</param>
            <param name="selectValue">选择项</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDiv(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为金额
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivDecimal(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为十进制数
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivDecimal(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为十进制数
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivDate(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为时间
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivStr(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivStr(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivTextStr(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串textArea格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.FormLogHtml(System.Web.Mvc.HtmlHelper,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串textArea格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.SaveButtonHtml(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="htmlHelper"></param>
            <param name="clickStr">点击事件函数</param>
            <param name="isFileHint">是否加文件上传删除提醒</param>
            <param name="clickParam">点击事件函数参数</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.MultiLineStrHtml(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            给字符串添加html换行
            </summary>
            <param name="htmlHelper"></param>
            <param name="str">需要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo">
            <summary>
            流程信息详细操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.#ctor(System.String,System.String)">
            <summary>
            构造类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.turnRightBtnName">
            <summary>
            转办按钮名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.submitRightBtnName">
            <summary>
            提交按钮名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.retreatRightBtnName">
            <summary>
            退回按钮名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.approvalUserId">
            <summary>
            发起人,目前当流程未发起或者结束的时候，需要获取对应表的负责人
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.flowInstanceId">
            <summary>
            流程实例Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.flowId">
            <summary>
            对应流程
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.submitUserId">
            <summary>
            提交交办对应人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.retreatUserId">
            <summary>
            退回交办对应人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hitResetCSignStepId">
            <summary>
            受控与二次会签步骤
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.ResetCSignStepRemark">
            <summary>
            二次会签意见
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.grantRemark">
            <summary>
            转办意见
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.curAvaiableOpername">
            <summary>
            当前操作人名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.jumpStepId">
            <summary>
            跳转动作Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.converseStepId">
            <summary>
            被拒绝后跳转的总裁步骤Id，用于侨鑫，总裁驳回后可以直接重新提交
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.isLaucher">
            <summary>
            是否发起来
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasApproval">
            <summary>
            是否能发起
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasOperateRight">
            <summary>
            是否可以跳转步骤操作
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasEditRight">
            <summary>
            是否可以编辑表单
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.canForceComplete">
            <summary>
            是否可以强制结束
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.isOrginalUser">
            <summary>
            是否转办动作的初始人
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.canImCompleteBtn">
            <summary>
            是否能直接结束会签
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasTurnRightBtn">
            <summary>
            是否能有转办按钮
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasRecoveryTurnRightBtn">
            <summary>
            是否能有撤回转办按钮
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasRecallBtn">
            <summary>
            是否能有撤回按钮
            </summary>
            
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasCounterSignAmountRight">
            <summary>
            是否能编辑合同
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.canConverseStepBtn">
            <summary>
            是否可直接提交总裁
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasCirculatCompleteBtn">
            <summary>
            是否有阅毕确认
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasAddCounterSignBtn">
            <summary>
            是否有当前会签功能
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hasAddAuditBtn">
            <summary>
            是否有加签功能
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.curFlowInstance">
            <summary>
            流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.flowObject">
            <summary>
            流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.bootStep">
            <summary>
            启动步骤
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.curStep">
            <summary>
            当前步骤
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.preStep">
            <summary>
            当前步骤
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hitRefuseStep">
            <summary>
            可驳回重申的步骤
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.firstActObj">
            <summary>
            首次动作，会签对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.actionList">
            <summary>
            获取当前步骤的动作列表,增加别名
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.stepList">
            <summary>
            获取当前步骤列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.fileList">
            <summary>
            获取文件列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.turnRightList">
            <summary>
            获取转办列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.referFieldList">
            <summary>
            可编辑字段列表除了合同金额字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.amountReferFiledList">
            <summary>
            合同金额字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hitEnslavedStepList">
            <summary>
            可编辑字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.hitResetCSignStepList">
            <summary>
            可控制的二次会签列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.curActionNameList">
             <summary>
            动作交办别名列表
             </summary>
             <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.amountList">
             <summary>
            合同金额列表
             </summary>
             <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.FlowInstanceDetailInfo.allInstanceActionUser">
             <summary>
            实例步骤人员列表
             </summary>
             <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.RightCodeEnum">
            <summary>
            权限操作项
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.VIEW">
            <summary>
            查看
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.DOWNLOAD">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.ADD">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.UPDATE">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.UPDATEALL">
            <summary>
            更新所有
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.ADMIN">
            <summary>
            维护
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeHandle">
            <summary>
            树形结构操作基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些事叶子节点，每个节点需要占据的行数、列数
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.ResetTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些事叶子节点，每个节点需要占据的行数、列数
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String)">
            <summary>
            对传入的数据结构进行计算，哪些事叶子节点，每个节点需要占据的行数、列数
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
            <param name="resultList">树形结构可能存在的成果值</param>
            <param name="relKey">成果的关联字段名称</param>
            <param name="treeNodeKey">树形目录的关联字段名称</param>
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.CalcLeafNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            计算叶子节点，如果为叶子节点则isLeaf为1
            </summary>
            <param name="treeNodes"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.ResetLeafNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            计算叶子节点，如果为叶子节点则isLeaf为1（已经有计算过叶子几点的情况使用）
            </summary>
            <param name="treeNodes"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.CalcLeafNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            计算叶子节点，如果为叶子节点则isLeaf为1
            </summary>
            <param name="treeNodes"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些是叶子节点，每个节点需要占据的行数、列数,剩余列数放在第几级
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
            <param name="colLevel">剩余列数所在级</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableHeadNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些是叶子节点，每个节点需要占据的行数、列数,主要用于table的表头
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeExtensions">
            <summary>
            树形借款扩展方法
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeExtensions.LeafNode(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument})">
            <summary>
            获取叶子节点
            </summary>
            <param name="treeList"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeHelper">
            <summary>
            树状操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHelper.GetSingleTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            获取单表树列表
            </summary>
            <param name="dataList"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHelper.GetSingleTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            获取子树列表
            </summary>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="nodePid"></param>
            <param name="nodeLevel"></param>
            <param name="childCount"></param>
            <param name="leafCount"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHelper.GetNonTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            获取非树形节点列表
            </summary>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.XmlTree">
            <summary>
            将树形列表输出为XML
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            构造函数
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">输出数据</param>
            <param name="param">默认参数</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.XmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.XmlTree.TreeParam">
            <summary>
            默认参数
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumCollection">
            <summary>
            枚举相关
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectProfessionType">
            <summary>
            分项专业的类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectProfessionType.Minor">
            <summary>
            辅助专业
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectProfessionType.Main">
            <summary>
            主专业
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectPlanStatus">
            <summary>
            分项计划的状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Unconfirmed">
            <summary>
            未确认
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjRoleType">
            <summary>
            角色类型,主要用于ProjRoleManager表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.PlanOwner">
            <summary>
            负责计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.PlanSpliter">
            <summary>
            分解计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskOwner">
            <summary>
            负责任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskOperator">
            <summary>
            操作任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskJoiner">
            <summary>
            参与任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TodoChecker">
            <summary>
            检查工作者
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskManagerType">
            <summary>
            任务负责人类型,主要用于任务负责人表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.PlanSpliter">
            <summary>
            分解计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskOwner">
            <summary>
            负责任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskOperator">
            <summary>
            操作任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskJoiner">
            <summary>
            参与任务者
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskStatus">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.ToSplit">
            <summary>
            待分解
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.SplitCompleted">
            <summary>
            分解完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskNodeType">
            <summary>
            月计划任务节点的类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.SelfDefinedTask">
            <summary>
            自定义任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.DesignTask">
            <summary>
            项目计划任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.SystemTask">
            <summary>
            系统领导任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.LastMonthUnfinishedTask">
            <summary>
            上月度未完成任务
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskDelayStatus">
            <summary>
            月计划中任务延迟状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskDelayStatus.NotDelayed">
            <summary>
            未延迟
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskDelayStatus.Delayed">
            <summary>
            项目计划任务
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskValidStatus">
            <summary>
            有计划中任务是否有效状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskValidStatus.Valid">
            <summary>
            有效
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskValidStatus.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DecisionPointType">
            <summary>
            决策点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.RoundRect">
            <summary>
            圆角矩形
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DecisionPointStatus">
            <summary>
            决策点状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.NotStatus">
            <summary>
            无状态，未挂接任何任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Delayed">
            <summary>
            已延迟
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskType">
            <summary>
            任务节点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Facade">
            <summary>
            外立面
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Landscape">
            <summary>
            景观
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Decoration">
            <summary>
            精装修
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Equipment">
            <summary>
            设备技术
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.ProductPlan">
            <summary>
            产品初步策划
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.CostConfig">
            <summary>
            成本配置
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ConcernNodeType">
            <summary>
            任务业务节点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.FeePayment">
            <summary>
            费用支付节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.ContractNode">
            <summary>
            合同节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.Supplier">
            <summary>
            供应商
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.TaskPage">
            <summary>
            任务书
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.LevelRelate">
            <summary>
            一二级联动
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.StageResult">
            <summary>
            阶段成果
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.MultiApproval">
            <summary>
            多审批任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.StartWorkTask">
            <summary>
            开工节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.OpenTask">
            <summary>
            开放节点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ExemptSkipType">
            <summary>
            金地任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Verify">
            <summary>
            外立面
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Passed">
            <summary>
            景观
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Refused">
            <summary>
            精装修
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.StageType">
            <summary>
             脉络图阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.Investment">
            <summary>
            投资决策阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.ProductPlan">
            <summary>
            产品策划及方案设计阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.ExtendedDesign">
            <summary>
            扩初设计及施工图阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.Construct">
            <summary>
            工程建造阶段
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowActionType">
            <summary>
            流程动作类型 发起 会签 审核 批准
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Launch">
            <summary>
            发起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Countersign">
            <summary>
            会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Approve">
            <summary>
            批准
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.ApproveCountersign">
            <summary>
            核稿会签 2015.1.9废弃 修改量太多不适用
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowActionExecType">
            <summary>
            流程动作类型 发起 会签 审核 批准,主要用于日志展示，不同的执行类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Launch">
            <summary>
            发起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Countersign">
            <summary>
            会签确认
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Approve">
            <summary>
            通过
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Refuse">
            <summary>
            驳回
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.GroupRefuse">
            <summary>
            驳回
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.TurnRight">
            <summary>
            交办
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.SubmitTurnRight">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.ForceCompleteStep">
            <summary>
            结束会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.RetreatTurnRight">
            <summary>
            结束会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.ResetCSign">
            <summary>
            二次会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.CheckApproval">
            <summary>
            核稿驳回/需全部走完后有一个驳回才进行进行驳回 暂时不适用
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.CheckRefuse">
            <summary>
            核稿驳回/需全部走完后有一个驳回才进行进行驳回
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SupplierType">
            <summary>
            供应商审批状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.Verify">
             <summary>
            入库待审
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.accept">
            <summary>
            会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.Refused">
            <summary>
            审核
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysLogType">
            <summary>
            系统日志操作类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.General">
            <summary>
            普通操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Login">
            <summary>
            登陆
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Insert">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Update">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.FileRead">
            <summary>
            文档阅读
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.FileDown">
            <summary>
            文档下载
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MonthlyTaskStatus">
            <summary>
            月度计划任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.Delayed">
            <summary>
            延期
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysTaskStatus">
            <summary>
            月度计划任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Processing">
            <summary>
            已指派
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Feedbacked">
            <summary>
            已反馈
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Completed">
             <summary>
            已完成
             </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MonthlyPlanStatus">
            <summary>
            月计划状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.NotPublished">
            <summary>
            未发布
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.Published">
            <summary>
            已发布
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.Filed">
            <summary>
            已归档
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CommonTaskStatus">
            <summary>
            通用任务状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Completed">
             <summary>
            已完成
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Delayed">
             <summary>
            延期
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.ToSplit">
            <summary>
            待分解
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.SplitCompleted">
            <summary>
            分解完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Feedbacked">
            <summary>
            已反馈
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SegmentFeatureType">
            <summary>
            产品系列客群特征类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.Age">
            <summary>
            客户年龄
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.Area">
            <summary>
            客户区域
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.OldClient">
            <summary>
            旧客户
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.PayType">
            <summary>
            付款方式
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.YearCount">
            <summary>
            按揭年限
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.LoanAmount">
            <summary>
            按揭额
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignChangeCmdStatus">
            <summary>
            设计变更指令单状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotLaunch">
            <summary>
            发起人未提交
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotIssue">
            <summary>
            未签发(签发人未选择签收人进行签发)
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotSee">
            <summary>
            未阅(签收人未阅读)
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.Seen">
            <summary>
            已阅(所有?签收人已阅读)
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskOperateLogType.Delay">
            <summary>
            延迟
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskOperateLogType.Alert">
            <summary>
            提醒
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskOperateLogType.StatusChange">
            <summary>
            状态改变
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskOperateLogType.ExcelModify">
            <summary>
            计划载入修改
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskOperateLogType.Remark">
            <summary>
            任务备注
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.UserAreaType.AllControlArea">
            <summary>
            集团
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.UserAreaType.LandArea">
            <summary>
            地产
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.UserAreaType.GroupArea">
            <summary>
            控股
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PushPlateStatus">
            <summary>
            产品系列客群特征类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PushPlateStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PushPlateStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PushPlateStatus.Aborted">
             <summary>
            已完成
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PushPlateStatus.CoverPlate">
             <summary>
            终止
             </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.IObjectOperation">
            <summary>
            对象处理接口
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ConditionRule">
            <summary>
            规则条件处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ConditionRule.ConditionStr">
            <summary>
            条件字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ConditionRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.#ctor(System.String)">
            <summary>
            带条件字符串的构造函数
            </summary>
            <param name="conditionStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.SetConditionRule(System.String)">
            <summary>
            设置对象值
            </summary>
            <param name="conditionStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.GetResult(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取条件判断结构
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.UserRight">
            <summary>
            用户角色实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._DataObjectCode">
            <summary>
            数据对象代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.UserId">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.OperatingId">
            <summary>
            权限项Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataObjId">
            <summary>
            资源Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataId">
            <summary>
            数据对象实例数据Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.RoleRightArea">
            <summary>
            权限区域范围
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.RoleRightAreaNew">
            <summary>
            权限区域范围
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.isDataRight">
            <summary>
            是否有数据权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.Code">
            <summary>
            模块权限项唯一代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataObjectCode">
            <summary>
            资源模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.LastUpDate">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeNode">
            <summary>
            树节点操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Id">
            <summary>
            当前节点ID
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Name">
            <summary>
            当前节点显示的名称
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Lv">
            <summary>
            当前节点所在的层级数.
            </summary>
            <value>The lv.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Pid">
            <summary>
            当前节点的父节点id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Order">
            <summary>
            同一父节点序号
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.underTable">
            <summary>
            当前节点所属表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.TreeType">
            <summary>
            树类型，主要用于组合树
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Param">
            <summary>
            当前节点带的参数（用|分割）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.SubNodes">
            <summary>
            当前节点的子节点集合
            </summary>
            <value>The sub node.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.IsLeaf">
            <summary>
            是否是叶子节点 0 --非叶子节点,即有子节点，1--叶子节点,无子节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.LeafCount">
            <summary>
            叶子节点个数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.childCount">
            <summary>
            当前节点下所有子节点(包含本节点)的统计个数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Flag">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Class">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SerializerXml`1">
            <summary>
            Xml序列号通用处理类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DynamicMember">
            <summary>
            动态属性操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicProperty``1(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicProperty(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值字符串.
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicPropertyString(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicPropertyInt(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.SetDynamicProperty(System.Object,System.String,System.Object)">
            <summary>
            动态设置一个对象的属性值.
            </summary>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <param name="newValue">给此属性的新数值或对象</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.SetPropertyValueByNames(System.Object,System.String[],System.Object)">
            <summary>
            在给定的数组中获取对象的相对应属性，并给其赋值
            </summary>
            <param name="obj"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelWriter">
            <summary>
            excel处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.#ctor(System.String)">
            <summary>
             构造函数
            </summary>
            <param name="sheetName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.SaveAsFile(System.String,System.String)">
            <summary>
            保存到文件中
            </summary>
            <param name="filePath"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.WithinMergeArea(System.Int32,System.Int32)">
            <summary>
            判断某一个单元格是否在合并的单元格内
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.AddCellData(System.String)">
            <summary>
            添加单元格数据
            </summary>
            <param name="data">数据值</param>
            <param name="mergeInfo">单元格合并信息</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.WriteData(System.String)">
            <summary>
            将html写入excel文件中
            </summary>
            <param name="htmlCode"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.AdjustColumnWidth">
            <summary>
            调整表格各列的宽度
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetCellStyle(System.Boolean)">
            <summary>
             获取单元格的格式
            </summary>
            <param name="isBold">isBold是否粗体</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetMaxColumnWidth(System.UInt16)">
            <summary>
            获取表格某一列的最大宽度
            </summary>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetMergeInfo(System.String)">
            <summary>
            获取单元格合并的额外信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.FilterTable(System.String)">
            <summary>
            将html的table标签内的加工成有效数据
            </summary>
            <param name="srcStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetStrLength(System.String)">
            <summary>
            获取字符串的长度,中文字符占两个字节
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.SetCellStyleByCellData(System.String)">
            <summary>
            设置单元格的样式
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelWriter.MergeInfo">
            <summary>
            合并单元格的信息，目前只支持行合并或者列合并，尚不支持同时合并行和列
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingSerieBll">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="nameDic">通过分组字段显示组名的字典</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},MongoDB.Driver.Builders.QueryComplete)">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="nameDic">通过分组字段显示组名的字典</param>
            <param name="query">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.String,System.String)">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="groupTbName">分组字段所在的表名</param>
            <param name="groupRelField">分组所关联的字段</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.String,System.String,MongoDB.Driver.Builders.QueryComplete)">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="groupTbName">分组字段所在的表名</param>
            <param name="groupRelField">分组所关联的字段</param>
            <param name="query">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            获取报表列表（有分组）
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="groupTbName">分组字段所在的表名</param>
            <param name="showTbName">展示项Id所在的表名</param>
            <param name="showRelField">展示项Id所属字段</param>
            <param name="showIds">展示项Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete)">
            <summary>
            获取报表列表（有分组）
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="groupTbName">分组字段所在的表名</param>
            <param name="showTbName">展示项Id所在的表名</param>
            <param name="showRelField">展示项Id所属字段</param>
            <param name="showIds">展示项Id</param>
            <param name="query">搜索条件</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete)">
            <summary>
            同一表下同一字段进行分组显示
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="showField">分图展示的字段</param>
            <param name="nameDic">通过分组字段显示组名的字典</param>
            <param name="curStrList">对showField需要切割成组的字符串集合</param>
            <param name="query">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            同一表下同一字段进行分组显示
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="groupType">用来分组的字段</param>
            <param name="showField">分图展示的字段</param>
            <param name="nameDic">通过分组字段显示组名的字典</param>
            <param name="curStrList">对showField需要切割成组的字符串集合</param>
            <param name="query">查询条件</param>
            <param name="startDateField">起始时间字段</param>
            <param name="startDateStr">起始时间值</param>
            <param name="endDateStr">截止时间字段</param>
            <param name="endDateField">截止时间值</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.String,System.String,System.String,MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="rowName">用来分行的字段</param>
            <param name="rowTbDic">显示行名的字典</param>
            <param name="statisticalForm">形式</param>
            <param name="colName">要统计的字段</param>
            <param name="query">查询条件</param>
            <param name="startDateField">开始时间字段</param>
            <param name="startDateStr">开始时间</param>
            <param name="endDateField">结束时间字段</param>
            <param name="endDateStr">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingDataList(System.String,System.String,System.String,System.String,System.String,System.String,MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            获取报表列表（单组）
            </summary>
            <param name="tableName">要统计表的表名</param>
            <param name="rowName">用来分行的字段</param>
            <param name="rowTbName">显示行名的表</param>
            <param name="relField">分行Id与行名表的关联字段</param>
            <param name="statisticalForm">形式</param>
            <param name="colName">要统计的字段</param>
            <param name="query">查询条件</param>
            <param name="startDateField">开始时间字段</param>
            <param name="startDateStr">开始时间</param>
            <param name="endDateField">结束时间字段</param>
            <param name="endDateStr">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            获取报表列表（有分组）
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="rowName">用来分组的字段</param>
            <param name="rowTbDic">行名所在的字典</param>
            <param name="statisticalForm">形式</param>
            <param name="colName">要统计的字段</param>
            <param name="showTbName">展示项Id所在的表名</param>
            <param name="showRelField">展示项Id所属字段</param>
            <param name="showIds">展示项Id</param>
            <param name="query">搜索条件</param>
            <param name="startDateField">开始时间字段</param>
            <param name="startDateStr">开始时间</param>
            <param name="endDateField">结束时间字段</param>
            <param name="endDateStr">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            获取报表列表（有分组）
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="rowName">用来分组的字段</param>
            <param name="rowTbName">分组字段所在的表名</param>
            <param name="relField">关联字段</param>
            <param name="statisticalForm">形式</param>
            <param name="colName">要统计的字段</param>
            <param name="showTbName">展示项Id所在的表名</param>
            <param name="showRelField">展示项Id所属字段</param>
            <param name="showIds">展示项Id</param>
            <param name="query">搜索条件</param>
            <param name="startDateField">开始时间字段</param>
            <param name="startDateStr">开始时间</param>
            <param name="endDateField">结束时间字段</param>
            <param name="endDateStr">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            同一表下同一字段进行分组显示
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="rowName">用来分组的字段</param>
            <param name="showField">分图展示的字段</param>
            <param name="rowTbDic">通过分组字段显示组名的字典</param>
            <param name="curStrList">对showField需要切割成组的字符串集合</param>
            <param name="query">查询条件</param>
            <param name="startDateField">起始时间字段</param>
            <param name="startDateStr">起始时间值</param>
            <param name="endDateStr">截止时间字段</param>
            <param name="endDateField">截止时间值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingSerieBll.GetReportingSerieList(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},MongoDB.Driver.Builders.QueryComplete,System.String,System.String,System.String,System.String)">
            <summary>
            同一表下同一字段进行分组显示
            </summary>
            <param name="tableName">要统计的表名</param>
            <param name="rowName">用来分组的字段</param>
            <param name="showField">分图展示的字段</param>
            <param name="rowTbDic">通过分组字段显示组名的字典</param>
            <param name="curStrList">对showField需要切割成组的字符串集合</param>
            <param name="query">查询条件</param>
            <param name="startDateField">起始时间字段</param>
            <param name="startDateStr">起始时间值</param>
            <param name="endDateStr">截止时间字段</param>
            <param name="endDateField">截止时间值</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ReportReq">
            <summary>
            报表参数处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ReportReq.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ReportReq.GetDesignParam">
            <summary>
            获取设计报表的相关参数
            </summary>
            <param name="report">报表实体</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ReportReq.GetDesignParam(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            获取设计报表的相关参数
            </summary>
            <param name="width">报表宽度</param>
            <param name="height">报表高度</param>
            <param name="template">引用样式模板</param>
            <param name="chartAreaColorType"></param>
            <param name="title">报表标题</param>
            <param name="reportTypeValueType">报表样式，默认柱状图Column</param>
            <param name="isExplodedAllPoint"></param>
            <param name="explodedDistance"></param>
            <param name="axisYUnit"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PageJson">
            <summary>
            提交处理结果返回信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PageJson.htInfo">
            <summary>
            附加信息的键值对表格
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor(System.Boolean)">
            <summary>
            附带状态构造函数
            </summary>
            <param name="isSuccess"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor(System.Boolean,System.String)">
            <summary>
            附带状态/错误信息构造函数
            </summary>
            <param name="isSuccess"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.AddInfo(System.String,System.String)">
            <summary>
            添加额外信息
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToJsonString">
            <summary>
            返回标准Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToString">
            <summary>
            构建返回的JSON字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToTransmitString">
            <summary>
            传值信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.GetOtherInfo">
            <summary>
            获取额外信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.Success">
            <summary>
            返回状态
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.Message">
            <summary>
            返回错误信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.FileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetRulePropertyTable(MongoDB.Bson.BsonDocument)">
            <summary>
            获取规则相关的属性列表
            </summary>
            <param name="dataRule"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetPropertyDC(System.Collections.Generic.List{Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr})">
            <summary>
            获取属性字段
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetRulePropertyTree(MongoDB.Bson.BsonDocument,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}})">
            <summary>
            规则引用拼成的属性树（不包含数据对象层级）
            </summary>
            <param name="dataRule"></param>
            <param name="propertyDC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetRulePropertyTree(MongoDB.Bson.BsonDocument,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            规则引用拼成的属性树(包含数据对象本身)
            </summary>
            <param name="dataRule"></param>
            <param name="propertyDC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetDataRuleGroupMember(System.Collections.Generic.List{Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            规则分组下数据对象的值
            </summary>
            <param name="userRuleInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataRuleAnalyse.GetRuleExpression(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},System.Collections.Generic.List{Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr})">
            <summary>
            返回筛选数据对象的表达式
            </summary>
            <param name="dataRule"></param>
            <param name="rightScope"></param>
            <param name="propertyDC"></param>
            <param name="relPeopertyArr"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AreaRoleType">
            <summary>
            区域角色枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Area">
            <summary>
            区域
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Land">
            <summary>
            地块
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Project">
            <summary>
            项目分期
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.Authentication">
            <summary>
            用户权限项验证处理相关
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.Authentication.isAdmin">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.#ctor(System.Int32)">
            <summary>
            传入用户Id，获取该用户的所有权限
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.#ctor">
            <summary>
            默认装载当前用户的所有权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.InitSysRight">
            <summary>
            系统角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetUserRoleList">
            <summary>
            获取用户在系统中的所有角色列表
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.InitProjectRoleRight(System.Int32)">
            <summary>
            项目角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetSysProjectRight(System.Int32)">
            <summary>
            获取项目权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetUserOfProjectRight(System.String,System.String,System.String)">
            <summary>
            通过权限码，获取有该项目权限的用户列表
            </summary>
            <param name="roleType"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.FindUserByRoleIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            通过角色Id获取角色用户
            </summary>
            <param name="roleIdList">角色Id列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetInitProjectRight(System.Int32)">
            <summary>
            获取内置项目权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetUserRoles(System.Int32)">
            <summary>
            获取用户在系统中的所有角色Id
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetCurProjectRoleRight(System.String,System.String)">
            <summary>
            获取当前项目的权限用于减少匹配次数 后续匹配减少优化
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetProjRoleRightSessionKey(System.String,System.String)">
            <summary>
            获取session缓存
            </summary>
            <param name="roleType"></param>
            <param name="dataId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.CheckProjectRight(System.String,System.String,System.String[])">
            <summary>
            验证
            </summary>
            <param name="code">权限码组成：模块_操作 e.g. MATERIALLIB_ADD 材料库新增权限</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.CheckProjectRight(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.Authentication.RoleRight},System.String[])">
            <summary>
            验证重载方式，减少匹配次数
            </summary>
            <param name="code">权限码组成：模块_操作 e.g. MATERIALLIB_ADD 材料库新增权限</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.CheckSysRight(System.String[])">
            <summary>
            验证系统权限
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.IsShowProjLibMenu">
            <summary>
            判断当前用户是否可以点击项目资料库按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.IsShowProjMenu">
            <summary>
            判断用户是否有项目库的查看权限
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.Authentication.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.Authentication.ScopeComparer">
            <summary>
            区域模块
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.IUserRuleAnalyse">
            <summary>
            用户规则解析接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IUserRuleAnalyse.GetUserRuleGroup(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            获取用户规则分组信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IUserRuleAnalyse.GetUserBelongGroup(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup})">
            <summary>
            获取用户所属分组的条件
            </summary>
            <param name="userInfo"></param>
            <param name="userRuleInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IUserRuleAnalyse.GetUserRuleGroupMember(System.Collections.Generic.List{Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            获取用户分组的成员
            </summary>
            <param name="userRuleInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SurveyLib.SurveyAnswerItem.GenerateAnserItem(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            生成问题答案项
            </summary>
            <param name="caseSubject">主问题</param>
            <param name="childSubjects">主问题的子问题列表</param>
            <param name="caseAnswerItems">案例的答案选型</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SurveyLib.SurveyAnswerItem.GenerateItem(System.Int32,System.String,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            生成答案选型
            </summary>
            <param name="subAnswerType">问题选型类型</param>
            <param name="subjectId">问题ID</param>
            <param name="answertItem">答案选项</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SurveyLib.SurveyAnswerItem.GenerateItem(System.Int32,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            生成答案选型
            </summary>
            <param name="subAnswerType">问题选型类型</param>
            <param name="subjectId">问题ID</param>
            <param name="answertItem">答案选项</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.IFileDeleteInderface">
            <summary>
            文件删除接口 日后进行扩展  删除业务数据的同时删除文件服务器上的文件
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.XmlTree">
            <summary>
            树转化xml处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            Initializes a new instance of the <see cref="!:TreeNodesXmlResult"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.XmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.XmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.DynamicXmlTree">
            <summary>
            动态树生成处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.DynamicXmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            Initializes a new instance of the <see cref="!:TreeNodesXmlResult"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.DynamicXmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.DynamicXmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AuthFilter">
            <summary>
            身份验证aop处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="codes">模块权限代码</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.#ctor(System.String[],System.String)">
            <summary>
            构造函数
            </summary>
            <param name="codes">模块权限代码</param>
            <param name="url">验证不通过跳转地址</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            执行Action过滤验证
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysModuleFunction">
            <summary>
            系统模块类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Encryption">
            <summary>
            Base64加密
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Base64">
            <summary> 
            实现Base64加密解密处理类
            
            
            </summary> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.EncodeBase64(System.Text.Encoding,System.String)">
            <summary> 
            Base64加密 
            </summary> 
            <param name="codeName">加密采用的编码方式</param> 
            <param name="source">待加密的明文</param> 
            <returns></returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.EncodeBase64(System.String)">
            <summary> 
            Base64加密，采用utf8编码方式加密 
            </summary> 
            <param name="source">待加密的明文</param> 
            <returns>加密后的字符串</returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.DecodeBase64(System.Text.Encoding,System.String)">
            <summary> 
            Base64解密 
            </summary> 
            <param name="codeName">解密采用的编码方式，注意和加密时采用的方式一致</param> 
            <param name="result">待解密的密文</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.DecodeBase64(System.String)">
            <summary> 
            Base64解密，采用utf8编码方式解密 
            </summary> 
            <param name="result">待解密的密文</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexDic">
            <summary>
            索引位置
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxDisplayNum">
            <summary>
            页面最大显示条数
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IsObjIdAsPK">
            <summary>
            true时，主键取_id，否则取datarule的primaryKey
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxTimeOut">
            <summary>
            锁的最大超时时间
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.WriteLockPath">
            <summary>
            锁文件地址
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxFieldLength">
            <summary>
            最大字段数
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MergeFactor">
            <summary>
            当索引块达到多少时，合并成大索引块（值越大越快）
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxMergeDocs">
            <summary>
            最大合并文档数
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxBufferedDeleteTerms">
            <summary>
            设置删除和查询缓存超过预设值触发刷新
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.MaxBufferedDocs">
            <summary>
            索引达到文档数后，写入硬盘
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.RAMBufferSizeMB">
            <summary>
            索引达到缓存大小，写入硬盘
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.RelSearchThreshold">
            <summary>
            相关搜索阈值
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.HotSearchThreshold">
            <summary>
            最热搜索阈值
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexInterval">
            <summary>
            建索引完成后到下一次触发事件的时间 单位毫秒
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexYear">
            <summary>
            年
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexMonth">
            <summary>
            月
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexDay">
            <summary>
            日
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexHour">
            <summary>
            时
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexMinute">
            <summary>
            分
            </summary>
        </member>
        <member name="P:Yinhe.SearchEngine.Models.SearchEngineConfig.IndexSecond">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageRlue">
            <summary>
            存储规则,定义级联操作中的数据存储
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Type">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Data">
            <summary>
            操作数据
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.StorageRlue.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.StorageRlue.SetStorageRlue(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应插入规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageType">
            <summary>
            存储类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.None">
            <summary>
            无操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Insert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.CascadeTimeType">
            <summary>
            级联操作触发时间
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.None">
            <summary>
            无操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.Before">
            <summary>
            操作前
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.After">
            <summary>
            操作后
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.DataObjectType">
            <summary>
            数据对象类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.AValue">
            <summary>
            一个值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.ARecord">
            <summary>
            一条记录
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.MultipleRecords">
            <summary>
            多条记录
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.ATable">
            <summary>
            一张表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.AStorage">
            <summary>
            一个操作
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.IRightScope">
            <summary>
            角色数据范围接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.GetDataScopes(System.Int32)">
            <summary>
            获取角色可访问的数据范围列表
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.Save(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity},System.Int32)">
            <summary>
            保存角色数据范围数据
            </summary>
            <param name="dataScopes">角色范围数据</param>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.GetUserDataScopeRight(System.Int32)">
            <summary>
            获取用户客户访问的数据权限
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PushExceptionHelper">
            <summary>
            推送异常类处理,将错误信息推送到222.2:8023的通用异常汇总接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PushExceptionHelper.asyncBugPush(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             异步推送消息
            </summary>
            <param name="errorMessage">错误信息</param>
            <param name="requestUrl">请求地址 home\Index</param>
            <param name="customerCode">客户代码用于识别那台服务器XXXXXXXXXXXXXXJD</param>
            <param name="userName">当前登录的用户名admin</param>
            <param name="hostDomain">当前域名http://localhost:8030</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PushExceptionHelper.asyncBugPush(System.String)">
            <summary>
            异步推送消息,非http引用请勿使用该方法
            </summary>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowInstanceInfo">
            <summary>
            流程实例相关信息处理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasOperateRight">
            <summary>
            是否拥有按钮操作权限，同意驳回等按钮
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasEditRight">
            <summary>
            是否拥有编辑流程对象的权限，如编辑设计变更，添加合同，上传文件，
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.canForceCompleteAssign">
            <summary>
            是否拥有直接结束会签的权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curAvaiableUserName">
            <summary>
            当前可操作的用户名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curUserId">
            <summary>
            当前可操作的用户Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curUserIds">
            <summary>
            当前可操作的用户Id列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curStep">
            <summary>
            当前步骤对象，此处可分为，真正可执行的步骤对象，否则为流程实例当前的流程步骤对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.stepId">
            <summary>
            当前步骤Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curFlowInstance">
            <summary>
            当前流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.flowInstanceId">
            <summary>
            当前流程实例对象Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.turnRightList">
            <summary>
            当前步骤的转办列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.actionList">
            <summary>
            当前步骤的动作列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curActionNameList">
            <summary>
            获取动作别名列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.referFiledList">
            <summary>
            获取可更改的字段列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.allInstanceActionUser">
            <summary>
            当前流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitEnslavedStepOrder">
            <summary>
            当前步骤可控制会签的列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitResetCSignStepOrder">
            <summary>
            获取二次会签可控制的会签步骤列表
            </summary>
        </member>
        <!-- 对于成员“P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitRefuseStepObj”忽略有格式错误的 XML 注释 -->
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.isOrginalUser">
            <summary>
            是否初始用户，转办之后非初始用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.submitUserId">
            <summary>
            提交用户Id，既谁转办给我
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.grantRemark">
            <summary>
            转办备注
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.canImComplete">
            <summary>
            是否可以强制结束
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasTurnRightBtn">
            <summary>
            是否有转办按钮，后台控制是否有转办的权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.StaticPageBuilder.GetJHBehaviorLog(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoQuery,System.Collections.Generic.List{MongoDB.Bson.BsonValue})">
            <summary>
            获取金辉页面点击数
            </summary>
            <param name="stQuery"></param>
            <param name="edQuery"></param>
            <param name="userIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.StaticPageBuilder.CalClickNum">
            <summary>
            计算点击量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.StaticPageBuilder.CalOrgFileNum">
            <summary>
            计算上传文件个数
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Identity">
            <summary>
            用户信息标识
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.Name">
            <summary>
                                Gets the name of the current user.
            </summary>
            <returns>
                                The name of the user on whose behalf the code is running.
            </returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.AuthenticationType">
            <summary>
                                Gets the type of authentication used.
            </summary>
            <returns>
                                The type of authentication used to identify the user.
            </returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.IsAuthenticated">
            <summary>
                                Gets a value that indicates whether the user has been authenticated.
            </summary>
            <returns>
            true if the user was authenticated; otherwise, false.
            </returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MvcFilters.CommonExceptionAttribute">
            <summary>
            通用异常处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonExceptionAttribute.getPostData(System.Web.HttpRequestBase)">
            <summary>
            获取请求数据
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.VarRule">
            <summary>
            变量规则,定义级联操作中的变量
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Name">
            <summary>
            变量名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Value">
            <summary>
            变量值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.VarRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.VarRule.SetVarRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的变量规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.DataObject">
            <summary>
            数据对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.QueryStr">
            <summary>
            查询字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.DataStr">
            <summary>
            数据字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.ValueStr">
            <summary>
            普通值字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.Type">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.#ctor(System.String)">
            <summary>
            带对象字符串的构造函数
            </summary>
            <param name="objectStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.SetDataObject(System.String)">
            <summary>
            设置对象值
            </summary>
            <param name="objectStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetQuery(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的查询
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetDataBsonDocument(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的数据文档
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetValue(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的值
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.ReplaceBracket(System.String,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            递归处理级联语句中的中括号
            </summary>
            <param name="sourceStr"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.ResolveBracket(System.String,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            解析级联操作中中括号括号的值
            </summary>
            <param name="sourceStr"></param>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PluginViewLocations">
            <summary>
            程序集属性
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PluginViewLocations.#ctor(System.String[],System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="viewLocations"></param>
            <param name="addLink"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.viewLocations">
            <summary>
            视图位置信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.addLink">
            <summary>
            是否添加到连接
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.controller">
            <summary>
            默认controller
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.action">
            <summary>
            默认Action
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PageReq">
            <summary>
             页面请求参数处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParam(System.String)">
            <summary>
            获取url参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParam(System.String,System.String)">
            <summary>
            获取url参数（有默认值）
            </summary>
            <param name="paramName">参数名</param>
            <param name="defaultValue">值为空或null时的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToInt(System.String)">
            <summary>
            将字符串转换为int类型，转换失败返回0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToFloat(System.String)">
            <summary>
            将字符串转换为float类型，转换失败返回0.0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToBoolean(System.String)">
            <summary>
            将字符串转换为bool类型，转换失败返回false
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToDecimal(System.String)">
            <summary>
            将字符串转换为decimal类型，转换失败返回0m
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamDecimal(System.String)">
            <summary>
            获取url浮点型参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamBoolean(System.String)">
            <summary>
            获取布尔型的参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamInt(System.String)">
            <summary>
            获取url整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamList(System.String)">
            <summary>
            获取url参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamDecimalList(System.String)">
            <summary>
            获取url浮点型参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamIntList(System.String)">
            <summary>
            获取url整型参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetForm(System.String)">
            <summary>
            获取Post提交的参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetForm(System.String,System.String)">
            <summary>
            获取Post提交的参数
            </summary>
            <param name="paramName">参数名称</param>
            <param name="defaultValue">为null或空时的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormDecimal(System.String)">
            <summary>
            获取Post提交的浮点型参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormInt(System.String)">
            <summary>
            获取Post提交的整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormBoolean(System.String)">
            <summary>
            获取Post提交的整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormList(System.String)">
            <summary>
            获取Post提交的参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormDecimalList(System.String)">
            <summary>
            获取Post提交的浮点型参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormIntList(System.String)">
            <summary>
            获取Post提交的整型参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetSession(System.String)">
            <summary>
            获取对应关键字,Session的值,无此关键字,返回空
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetSession(System.String,System.String)">
            <summary>
            将值保存到Session中去
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetObjSession(System.String)">
            <summary>
            获取对应关键字,Session的值,无此关键字,返回null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetObjSession(System.String,System.Object)">
            <summary>
            将值保存到Session中去
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetPhyPath(System.String)">
            <summary>
            以文件相对路径获取其绝对路径
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.DownLoadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="clientFileName">保存到客户端的文件名称</param>
            <param name="filePath">下载的文件物理路径</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetCookieValue(System.String)">
            <summary>
            读取 cookie值
            </summary>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetCookieValueInt(System.String)">
            <summary>
            读取 cookie值
            </summary>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            设置cookie
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
            <param name="expiresDt"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup">
            <summary>
            用户规则分组
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.userRuleId">
            <summary>
            用户规则Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.userRuleGroupId">
            <summary>
            用户规则分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.ruleName">
            <summary>
            用户规则名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.groupName">
            <summary>
            用户规则分组名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.maxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.minValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.judgeRuleId">
            <summary>
            判断类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.interfaceName">
            <summary>
            接口名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.dynamicParamName">
            <summary>
            接口名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleGroup.judgeConStr">
            <summary>
            分组条件字符串（格式：{0}≤group）
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree">
            <summary>
            数据对象属性关联树类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.name">
            <summary>
            用户规则Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.propertyCode">
            <summary>
            用户规则分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.propertyId">
            <summary>
            属性id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.keyName">
            <summary>
            属性表的主键名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.groupValue">
            <summary>
            归类值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.nodePid">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.nodeKey">
            <summary>
            属性排序
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.level">
            <summary>
            属性等级
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyTree.subProperty">
            <summary>
            子属性
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr">
            <summary>
            数据对象属性列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.name">
            <summary>
            用户规则Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.propertyCode">
            <summary>
            用户规则分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.query">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.relField">
            <summary>
            关联字段
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.keyName">
            <summary>
            关联属性主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.tableName">
            <summary>
            关联属性表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.dataBase">
            <summary>
            关联属性操作数据库
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.dataBaseType">
            <summary>
            关联属性操作数据库类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.RelPropertyArr.order">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SingleRightDataScope">
            <summary>
            单个数据权限的数据类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SingleRightDataScope.isFilter">
            <summary>
            是否过滤
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeOperation">
            <summary>
            Created By Robin  2012年5月20日 
            1 先将文件列表转化成单节点树
            2 将树集合进行排序  取节点最深的为主树
            3 将其他树与主树合并
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ScanFolder(System.String)">
            <summary>
            文件夹扫描 用于测试
            </summary>
            <param name="rootPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeCombine(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            树合并
            </summary>
            <param name="root"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.MutipleTreeCombine(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            树合并,2014.8.13修改可能分别拉2次,同一个目录下拉入2次 A1/T1.1    A2/T1.2
            </summary>
            <param name="root"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ListAnalyse(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            列表分析 注：此处可能出现同事拉入2个文件夹情况 A1/T1.1 和 A2/T2.1 此时需要返回2个Dic
            </summary>
            <param name="root"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreePrint(Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            树遍历  打印
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayGenerate(System.String,System.String)">
            <summary>
            将地址转化成数组
            </summary>
            <param name="root"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeGenerate(System.String,System.String)">
            <summary>
            将文件路径装换成树形 单节点
            </summary>
            <param name="root">跟目录</param>
            <param name="path">完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayAnalyze(System.String[],System.Int32,System.String)">
            <summary>
            数组分析
            </summary>
            <param name="dirArray"></param>
            <param name="currentIndex"></param>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayMulAnalyze(System.String[],System.Int32,System.String)">
            <summary>
            数组分析
            </summary>
            <param name="dirArray"></param>
            <param name="currentIndex"></param>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.SetNode(Yinhe.ProcessingCenter.Document.TreeNode,System.Collections.Generic.Dictionary{System.Int32,Yinhe.ProcessingCenter.Document.TreeDic})">
            <summary>
            树合并
            </summary>
            <param name="motherNode">母树</param>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.CreateEmptyTree(System.Int32,System.Int32)">
            <summary>
            创建一棵空树  单节点
            </summary>
            <param name="treeLevel"></param>
            <param name="currentLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeToDic(Yinhe.ProcessingCenter.Document.TreeNode,System.String[])">
            <summary>
            将树转化为字典
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeLevel(Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            计算树深度
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeNode">
            <summary>
            树实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeDic">
            <summary>
            树字典
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysAppConfig">
            <summary>
            系统配置项处理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsPlugIn">
            <summary>
            是否是插件项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.DataBaseConnectionString">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.LogDBConnectionString">
            <summary>
            日志数据库连接串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SysMainDataLogTableName">
            <summary>
            日志主记录表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SysAssoDataLogTableName">
            <summary>
            日志访问记录表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SysBehaviorLogTableName">
            <summary>
            日志行为表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SearchEngineDBConnectionString">
            <summary>
            搜索引擎数据库的连接字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.BaiduMapKey">
            <summary>
            百度地图Key
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.HasSearchEngine">
            <summary>
            是否含搜索引擎
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.GlobalCss">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.HostDomain">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Domain">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PDFDomain">
            <summary>
            PDF站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.WKhtmltopdfUrl">
             <summary>
            WKhtmltopdf.exe的地址
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MailHostDomain">
            <summary>
            邮件站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsShowUO">
            <summary>
            是否显示多余用户及组织
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsPublish">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsIgnoreName">
            <summary>
            复制对象时候是否忽略重名判断
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.CustomerCode">
            <summary>
            客户服务代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MasterServerAddress">
            <summary>
            主控地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.LoginUrl">
            <summary>
            登陆页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IndexUrl">
            <summary>
            首页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MenuJS">
            <summary>
            首页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ADName">
            <summary>
            ADName
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.LDAPName">
            <summary>
            LDAPName
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHaccountID">
            <summary>
            XHaccountID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHenterpriseID">
            <summary>
            XHenterpriseID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHPassword">
            <summary>
            XHPassword
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SNADDomain">
            <summary>
            SNADDomain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SenderClass">
            <summary>
            SenderClass
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsSendSms">
            <summary>
            SNADDomain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsBelongOneOrg">
            <summary>
            IsBelongOneOrg
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SSSSOValidateUrl">
            <summary>
            SSSSOValidateUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SSSSOLoginOutUrl">
            <summary>
            SSSSOLoginOutUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXOrgUrl">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXUserUrl">
            <summary>
            QXUserUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXOrgXMLPath">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXUserXMLPath">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ZYProjMDServicePath">
            <summary>
            卓越项目主数据对接Url
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ZYBPMApprovalUrl">
            <summary>
            卓越审批系统地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXSDDomain">
            <summary>
            侨鑫市调模块domain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.OALoginUrl">
            <summary>
            OA同步登陆地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SupplierSynUrl">
            <summary>
            供应商更新地址登陆地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FileFilter">
            <summary>
            上传文件过滤项
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SiteLogoUrl">
            <summary>
            站点logo url
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SignStepId">
            <summary>
            经办部门签发步骤ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsUpdateOAToDo">
            <summary>
            是否自动更新OA待办已办
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.CommunityPlanShow">
            <summary>
            新城产品系列是否展示规划要点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.BirthdayPreset">
            <summary>
            生日提醒提前天数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsNewApp">
            <summary>
            是否新的app后台
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.UserADUrl">
            <summary>
            用户同步地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SupplierUrl">
            <summary>
            联发供应商同步地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SupplierEvaluateUrl">
            <summary>
            联发供应商评价地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FileOutAddress">
            <summary>
            文件缩略图外网访问地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.DownFileAddress">
            <summary>
            文件下载站点访问地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FileAcceptExt">
            <summary>
            只展示以下以|号分隔后缀的文件(.doc|.docx|....)
            因为文件拖拽上传时可能会顺带上传一些垃圾文件，且文件格式不确定
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXorgStepOrder">
            <summary>
            QX_不大于此步骤order的有回复按钮
            可查看所有OrgStepOrder内的数据
            默认值为4
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXDepartmentChargeStepOrder">
            <summary>
            QX的经办部门
            默认值为6
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SSFormAudit">
            <summary>
            是否允许SS一期表单的审核（非流程）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.iSWorkFlowEdit">
            <summary>
            是否允许编辑进行中的流程表单
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.HYTJSKey">
            <summary>
            溢滔所用测试字段（js测试）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.BugPushUrl">
            <summary>
            溢滔所用测试字段（js测试）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MttTypeRejectFilter">
            <summary>
            配置全系统禁止上传的文件格式
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MsgSendUrl">
            <summary>
            短信发送地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MsgSendUserName">
            <summary>
            短信发送用户名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MsgSendUserPW">
            <summary>
            短信发送用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.needCutThumbExtArray">
            <summary>
            可切图的后缀文件
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.OuterConnectionStr">
            <summary>
            外部链接字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XCOuterConnectionStr">
            <summary>
            外部链接字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXLuxuriousDataImportType">
            <summary>
            侨鑫豪宅数据导入方式  overwrite（重载）  默认"increment"（重复过滤）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXLuxuriousDataQuickCreate">
            <summary>
            侨鑫豪宅数据导入方式  overwrite（重载）  默认"increment"（重复过滤）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.isFavorite">
            <summary>
            客户服务代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.matEditUrl">
            <summary>
            应用材料
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.matViewUrl">
            <summary>
            查看材料
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.matTable">
            <summary>
            材料名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PublicMatAddr">
            <summary>
            主数据库系统地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PublicMatFileAddr">
            <summary>
            主数据库系统文件查看地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PublicMatFileCtrlAddr">
            <summary>
            主数据库系统文件查看地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsPrimaryMat">
            <summary>
            是否显示初级材料
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ServerDiskAlertLimit">
            <summary>
            设定磁盘警报大小G, 2G报警
            </summary>
        </member>
        <!-- 对于成员“P:Yinhe.ProcessingCenter.SysAppConfig.Mission_PointAddition”忽略有格式错误的 XML 注释 -->
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_MaxPointAddition">
            <summary>
            最高
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_ItemDropSeed">
            <summary>
            最高
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_HellChallengeCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_HellItemDropCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_HellChallengePoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Mission_HellChallengeExp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsGlobalBase">
            <summary>
            是否允许全局权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.AlertInfoUrl">
            <summary>
            警告页面处理地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.actionNameFilter">
            <summary>
            可例外的urlaction
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.controlerNameFilter">
            <summary>
            可例外的urlcontroler
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsFreezeZone">
            <summary>
            是否开启
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeBegHour">
            <summary>
            开始
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeEndHour">
            <summary>
            结束
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezePeriod">
            <summary>
            间隔分钟
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeDuration">
            <summary>
            持续分钟
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ZYTaskAudit">
            <summary>
            ZY任务表单保存是否默认通过审核
            1:是
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.bizGuid">
            <summary>
            新文件服务器业务系统guid
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.OutWebServiceWSDLUrl">
            <summary>
            外部引用service的wsdl地址
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TypeConvert">
            <summary>
            类型转换处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToBsonDocument(System.String)">
            <summary>
            将字符串转换为BsonDocument
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToBsonDocumentList(System.String)">
            <summary>
            将字符串转换为List＜BsonDocument＞
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.DicToBsonDocument(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            将键值对转换为BsonDocument
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NameValueToBsonDocument(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValue结构转化为BsonDocument
            </summary>
            <param name="sourceNVC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToNameValue(System.String)">
            <summary>
            将字符串数据转化为NameValueCollection结构
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NameValueToQuery(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValue结构转化为Mongo查询类型
            </summary>
            <param name="sourceNVC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToQuery(System.String)">
            <summary>
            将字符串转化为Mongo查询类型
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NativeQueryToQuery(System.String)">
            <summary>
            将原生查询语句转换为Query
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.InvokeResultToPageJson(Yinhe.ProcessingCenter.InvokeResult)">
            <summary>
            将InvokeResult转换为PageJson
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.CNStringToPinYinString(System.String)">
            <summary>
            中文字符串转化为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NativeQueryToResultValue(System.String)">
            <summary>
            将原生查询语句转换为结果字符串
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.StringListToBsonValueList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            将字符串列表转换为BsonValue列表
            </summary>
            <param name="strList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ToObjectId(System.String)">
            <summary>
            
            </summary>
            <param name="_id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ToObjectIdList(System.Collections.Generic.List{System.String})">
            <summary>
            将字符串列表转换成ObjectId列表
            </summary>
            <param name="strList">字符串列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.StringToIntEnum(System.String,System.String)">
            <summary>
            将spliter分隔的Id字符串解析
            </summary>
            <param name="Ids"></param>
            <param name="spliter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.BsonDocumentToLogStr(MongoDB.Bson.BsonDocument)">
            <summary>
            将Bosn数据转化为日志格式字符串
            </summary>
            <param name="sourceBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.LambdaAnd``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1"></param>
            <param name="expr2"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.LambdaOr``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1"></param>
            <param name="expr2"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.BsonDocumentToLogStr(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            将Bosn数据转化为日志格式字符串
            </summary>
            <param name="sourceBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.MoneyLowerToUpper(System.Double)">
            <summary>
            金额小写转中文大写。
            整数支持到万亿；小数部分支持到分(超过两位将进行Banker舍入法处理)
            </summary>
            <param name="Num">需要转换的双精度浮点数</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PinyinHelper">
            <summary>
            获得汉字的拼音
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.GetPinyin(System.String)">
            <summary>
            获得汉字的拼音，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.ChangeChinesetoPinYin(System.String)">
            <summary>
            将中文转换为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.GetChineseString(System.Int64)">
            <summary>
            阿拉伯数字转汉字
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.GetShortPinyin(System.String)">
            <summary>
            获得汉字拼音的简写，即每一个汉字的拼音的首字母组成的串，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音简写</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CNToPinyin.GetChineseSpell(System.String)">
            <summary>
            获取传入中文的首字母，如果是英文直接返回
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.FreezeStrategy">
            <summary>
            系统冻结处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.FreezeStrategy.IsFreezeSystem">
            <summary>
            固定时间开启冻结模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.FreezeStrategy.IsUserFreeze(System.String,System.String,System.String,System.String)">
            <summary>
            判断用户是否需要进行限制登陆访问
            </summary>
            <param name="userId">用户Id</param>
            <param name="userLimitStatus">用户限制</param>
            <param name="actionName">actionName</param>
            <param name="controler">controler</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.FreezeStrategy.IsRandomFreezeSystem">
            <summary>
            随机时间开启冻结模式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.InvokeResult">
            <summary>
            业务层调用结果类型.
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Exception">
            <summary>
            获取或设置当期异常
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Status">
            <summary>
            获取或设置当前状态
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Key">
            <summary>
            获取或设置Key名称
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Message">
            <summary>
            获取或设置消息文本
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.FileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.BsonInfo">
            <summary>
            获取结果信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.InvokeResult`1">
            <summary>
            附带值类型的结果类型
            </summary>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult`1.Value">
            <summary>
            返回泛型的结果值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Status">
            <summary>
            结果状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Successful">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Failed">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Suspend">
            <summary>
            挂起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Invaild">
            <summary>
            无效的
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Specific">
            <summary>
            特定的状态,需要参考Message属性.
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumDescription">
            <summary>
            把枚举值按照指定的文本显示
            <remarks>
            一般通过枚举值的ToString()可以得到变量的文本，
            但是有时候需要的到与之对应的更充分的文本，
            这个类帮助达到此目的
            Date: 2006-3-25 
            Author: dearzp@hotmail.com
            </remarks>
            </summary>
            <example>
            [EnumDescription("中文数字")]
            enum MyEnum
            {
            	[EnumDescription("数字一")]
            	One = 1, 
            
            	[EnumDescription("数字二")]
            	Two, 
            
            	[EnumDescription("数字三")]
            	Three
            }
            EnumDescription.GetEnumText(typeof(MyEnum));
            EnumDescription.GetFieldText(MyEnum.Two);
            EnumDescription.GetFieldTexts(typeof(MyEnum)); 
            </example>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.#ctor(System.String,System.Int32)">
            <summary>
            描述枚举值
            </summary>
            <param name="enumDisplayText">描述内容</param>
            <param name="enumRank">排列顺序</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.#ctor(System.String)">
            <summary>
            描述枚举值，默认排序为5
            </summary>
            <param name="enumDisplayText">描述内容</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetEnumText(System.Type)">
            <summary>
            得到对枚举的描述文本
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldText(System.Object)">
            <summary>
            获得指定枚举类型中，指定值的描述文本。
            </summary>
            <param name="enumValue">枚举值，不要作任何类型转换</param>
            <returns>描述字符串</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldTexts(System.Type)">
            <summary>
            得到枚举类型定义的所有文本，按定义的顺序返回
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldTexts(System.Type,Yinhe.ProcessingCenter.EnumDescription.SortType)">
            <summary>
            得到枚举类型定义的所有文本
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <param name="sortType">指定排序类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumDescription.SortType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.Default">
             <summary>
            按枚举顺序默认排序
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.DisplayText">
            <summary>
            按描述值排序
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.Rank">
            <summary>
            按排序熵
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileDeleteOperation">
            <summary>
            文件通用删除处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.RightScopeEnum">
            <summary>
            角色范围枚举
            </summary>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            数据类型重载
            </summary>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_ZEX(System.Decimal)">
            <summary>
            金额的格式展示,去除小数 2014.9.21修改只有三盛需要，因为三盛突然改成需要取小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_Z(System.Decimal)">
            <summary>
            金额的格式展示,去除小数 2014.9.21修改只有三盛需要，因为三盛突然改成需要取小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney(System.Decimal)">
            <summary>
            金额的格式展示，保留两位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_O(System.Decimal)">
            <summary>
            金额的格式展示，保留一位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_T(System.Decimal)">
            <summary>
            金额的格式展示，保留两位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_ZOT(System.Decimal)">
            <summary>
            金额的格式展示，保留一位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToBr(System.String)">
            <summary>
            换行
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CommonLog">
            <summary>
            通用日志处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.#ctor(System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Trace(System.String)">
            <summary>
            最常见的记录信息，一般用于普通输出
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Debug(System.String)">
            <summary>
            调试程序
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Info(System.String)">
            <summary>
            信息类型的消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Warn(System.String)">
            <summary>
            警告信息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Error(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Fatal(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog._">
            <summary>
            Gets the log warpper.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.CommonBll.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.CommonBll.InitConfig">
            <summary>
            初始化搜索引擎配置模型
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.CommonBll.SaveConfig(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            保存搜索引擎配置
            </summary>
            <param name="itemDic"></param>
            <returns></returns>
        </member>
        <member name="T:System.StringExtension">
            <summary>
            字符串重载
            </summary>
        </member>
        <member name="M:System.StringExtension.CutStr(System.String,System.Int32,System.String)">
            <summary>
            功能：区分中英文截取字符串。
            </summary>
            <param name="Str">欲截取字串</param>
            <param name="iLength">截取字数</param>
            <param name="sAnd">截取后跟随字串，例：".."也可为空""</param>
            <returns>返回截取后的字符串</returns>
        </member>
        <member name="M:System.StringExtension.SplitParam(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            切割字符串
            </summary>
            <param name="source"></param>
            <param name="options"></param>
            <param name="separators"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.SplitParam(System.String,System.String[])">
            <summary>
            切割字符串，默认删除空白项
            </summary>
            <param name="source"></param>
            <param name="separators">分隔符</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:System.StringExtension.SplitToIntList(System.String,System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:System.StringExtension.SplitToIntList(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            将字符串切割，成Int类型列表
            </summary>
            <param name="source"></param>
            <param name="options">切割选项</param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.GetParamString(System.String,System.String)">
            <summary>
            获得url字符串中指定值
            </summary>
            <param name="paramStr"></param>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.GetParamInt(System.String,System.String)">
            <summary>
            获得url字符串中指定值 整型
            </summary>
            <param name="paramStr"></param>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.ParamStringSplit(System.String)">
            <summary>
            url字符串拆分
            </summary>
            <param name="paramStr"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.RepaceStr(System.String)">
            <summary>
            替换树节点前面的0字符（000001.000001 =》1.1）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.Reverse(System.String)">
            <summary>
            反转字符串
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.IsDigital(System.String)">
            <summary>
            判断字符串是否纯数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.ToBsonArray(System.String)">
            <summary>
            将字符串转成BsonArray
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:System.StringExtension.ToBsonDocumentList(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="T:Yinhe.ProcessingCenter.DataOperation">
            <summary>
            mongo交互操作处理Yinhe.ProcessingCenter
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor(Yinhe.ProcessingCenter.MongoOperation)">
            <summary>
            2014.9.12新增构造函数
            </summary>
            <param name="mongoOp"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor(System.String,System.Boolean)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="nameStr"></param>
            <param name="querStr"></param>
            <param name="dataStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationDataBase(System.String)">
            <summary>
            设置操作数据库
            </summary>
            <param name="connStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationTable(System.String)">
            <summary>
            设置操作表
            </summary>
            <param name="tbName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationData(System.String,System.String,System.String)">
            <summary>
            设置要进行数据库操作的数据
            </summary>
            <param name="nameStr"></param>
            <param name="queryStr"></param>
            <param name="dataStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetCurrentUserId">
            <summary>
            返回当前用户Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetCurrentUserName">
            <summary>
            返回当前用户名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetUserIPAddress">
            <summary>
            获取用户Id地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNativeQueryFindOne(System.String,System.String)">
            <summary>
            获取findeOne原生查询
            </summary>
            <param name="tbName"></param>
            <param name="queryInfo">包含大括号的查询信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNativeQueryDistinct(System.String,System.String)">
            <summary>
            获取distinct原生查询
            </summary>
            <param name="tbName"></param>
            <param name="queryInfo">包含大括号的查询信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchSaveStorageData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.StorageData})">
            <summary>
            保存级联数据
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchUpdateByPrimaryKey(System.String,System.Collections.Generic.List{System.String},MongoDB.Bson.BsonDocument)">
            <summary>
            通过主键批量更新
            </summary>
            <param name="tbName"></param>
            <param name="idList"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchDeleteByPrimaryKey(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            通过主键批量删除
            </summary>
            <param name="tbName"></param>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetStopwatch(System.Web.HttpContext,System.String)">
            <summary>
            根据传入名称设置计时器
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.LogSystemData(Yinhe.ProcessingCenter.DataRule.TableRule,Yinhe.ProcessingCenter.SysLogType,System.String,System.String)">
            <summary>
            保存数据操作日志
            </summary>
            <param name="tbName">操作表</param>
            <param name="type">操作类型</param>
            <param name="beforeBson">操作前数据</param>
            <param name="afterBson">操作后数据</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.LogSysBehavior(Yinhe.ProcessingCenter.SysLogType,System.Web.HttpContextBase)">
            <summary>
            保存系统行为日志
            </summary>
            <param name="logType"></param>
            <param name="curUrl"></param>
            <param name="browser"></param>
            <param name="param"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOne">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOne(System.String)">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByKeyVal(System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByKeyVal(System.String,System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQueryStr(System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.FindOneByQueryStr(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQuery(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="tbName"></param>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneById(System.String,System.String)">
            <summary>
            根据_id查找一条记录
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAll">
            <summary>
            查找集合中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAll(System.String)">
            <summary>
            查找集合中所有记录
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyVal(System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyVal(System.String,System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyValList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="valList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyValList(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="valList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQueryStr(System.String)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQueryStr(System.String,System.String)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQuery(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindFieldsByQuery(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.FieldsDocument)">
            <summary>
            根据搜索条件查找多条记录的指定字段
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindFieldsByQuery(System.String,MongoDB.Driver.IMongoQuery,System.Collections.Generic.List{System.String})">
            <summary>
            根据搜索条件查找多条记录的指定字段
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fieldNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindLimitFieldsByQuery(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.SortByDocument,System.Int32,System.Int32,System.String[])">
            <summary>
            2016.11.7 mn添加修改增加真正限制个字段的limit查询
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="sortBy"></param>
            <param name="skip"></param>
            <param name="limit"></param>
            <param name="arrFieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindFieldsByQuery(System.String,MongoDB.Driver.IMongoQuery,System.String[])">
            <summary>
            根据搜索条件查找多条记录的指定字段
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fieldNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneFieldsByQuery(System.String,MongoDB.Driver.IMongoQuery,System.Collections.Generic.List{System.String})">
            <summary>
            根据搜索条件查找多条记录的指定字段
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fieldNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindLimitByQuery(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Driver.SortByDocument,System.Int32,System.Int32)">
            <summary>
            根据搜索条件查找指定条数
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fieldNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindCount(System.String)">
            <summary>
            根据搜索条件查找指定条数
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="fieldNameList"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.FindCount(System.String,MongoDB.Driver.IMongoQuery)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindChildNodes(System.String)">
            <summary>
            查找当前节点的所有子,孙子节点(不包含当前节点)
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindChildNodes(System.String,System.String)">
            <summary>
            查找当前节点的所有子,孙子节点(不包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindTreeByRootId(System.String,System.String,System.Boolean)">
            <summary>
            查找当前节点的所有子,孙子节点(包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindParentNodeList(System.String)">
            <summary>
            查找当前节点的所有父,祖父节点(不包含当前节点)
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindParentNodeList(System.String,System.String)">
            <summary>
            查找当前节点的所有父,祖父节点(不包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save">
            <summary>
            保存操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save(System.String,System.String,System.String)">
            <summary>
            保存操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            保存操作
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert">
            <summary>
            插入操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String)">
            <summary>
            插入操作
            </summary>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            插入操作
            </summary>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            插入操作
            </summary>
            <param name="valueDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,System.String)">
            <summary>
            插入操作
            </summary>
            <param name="tbName"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            插入操作
            </summary>
            <param name="tbName"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchInsert(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            批量插入操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            插入数据
            </summary>
            <param name="tbName"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetTablePKCounter(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            批量设置主键表，在数据更新插入前先更新
            </summary>
            <param name="tableNameCount">表名，此次表中插入的个数</param>
            <returns>返回 表名,[主键起始位置，主键截止位置]</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetTablePKCounterByPrimary(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            批量设置主键表，在数据更新插入前先更新(传入表主键)
            </summary>
            <param name="tableNameCount">表名，此次表中插入的个数</param>
            <returns>返回 表名,[主键起始位置，主键截止位置]</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update">
            <summary>
            更新操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String)">
            <summary>
            更新
            </summary>
            <param name="queryStr"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新操作
            </summary>
            <param name="query"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String,System.String)">
            <summary>
            更新操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            更新操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr">格式如db.Organization.distinct('_id',{'guid':'" + subnode.Guid + "'})</param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{System.String})">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.UpdateForWebService(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新数据 (webService调用时，获取当前用户ID会抛出异常，此方法可跳过这个问题)
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete">
            <summary>
            删除操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(MongoDB.Driver.IMongoQuery)">
            <summary>
            删除
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String,System.String)">
            <summary>
            删除操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            删除数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.DeleteNoDataRule(System.String,MongoDB.Driver.IMongoQuery,System.String,System.Boolean)">
            <summary>
            删除数据(无数据规则)
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.RecursiveDelData(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Driver.IMongoQuery)">
            <summary>
            递归删除数据（外键记录）
            </summary>
            <param name="tableEntity">删除表</param>
            <param name="delQuery">删除查询</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Move(System.String,System.String,System.String)">
            <summary>
            移动操作
            </summary>
            <param name="moveId"></param>
            <param name="moveToId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Move(System.String,System.String,System.String,System.String)">
            <summary>
            节点的移动
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="moveToId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.NoTreeMove(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            非树形节点移动
            </summary>
            <param name="tableEntity"></param>
            <param name="moveEntity"></param>
            <param name="toMoveEntity"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.TreeMove(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            树形节点的移动
            </summary>
            <param name="tableEntity"></param>
            <param name="moveEntity"></param>
            <param name="toMoveEntity"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.ProcessCascadeData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.CascadeRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            处理级联数据
            </summary>
            <param name="ruleList"></param>
            <param name="thisEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SaveStorageData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.StorageData})">
            <summary>
            保存存储数据
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.CalculateValue(System.String,System.String,System.String)">
            <summary>
            计算值
            </summary>
            <param name="leftStr">左边值</param>
            <param name="rightStr">右边值</param>
            <param name="operatorStr">运算符</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.HasExistOperator(System.String)">
            <summary>
            判断是否具有运算符
            </summary>
            <param name="valStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNewTreeNodeKeyAttr(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument)">
            <summary>
            获取新树节点的4个关键属性
            </summary>
            <param name="tableEntity"></param>
            <param name="parentEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetCurrentUser">
            <summary>
            获取当前操作用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetCurrentUserFullName">
            <summary>
            获取当前操作用户
            用于卓越右上角用户名展示
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.String,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,MongoDB.Bson.BsonDocument,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.Collections.Generic.Dictionary{MongoDB.Bson.BsonDocument,System.String})”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            快捷更新操作
            </summary>
            <param name="tbName">要更新的表名</param>
            <param name="dataBsonList">要更新的数据集</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickDelete(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.QuickInsert(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            插入数据
            </summary>
            <param name="tbName"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.QuickDelete(System.String,System.String,System.String)">
            <summary>
            删除操作
            </summary>
            <param name="tbName"></param>
            <param name="keyFiled">主键</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetFindOneQueryStr(System.String,System.String,System.String)">
            <summary>
            返回单个查询字符串
            </summary>
            <param name="tbName"></param>
            <param name="keyFiled"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.AdvanceUpPKCount(System.String,System.Int32,System.Int32@)">
            <summary>
            主键计数器提前更新，（占位）防止主键冲突
            </summary>
            <param name="tbName">树型表</param>
            <param name="upCount">需要插入的数据量</param>
            <param name="count">返回主键递增起始值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.AdvanceUpPKCountNew(System.String,System.Int32,System.Int32@)">
            <summary>
            主键计数器提前更新，（占位）防止主键冲突
            </summary>
            <param name="tbName">树型表</param>
            <param name="upCount">需要插入的数据量</param>
            <param name="count">返回主键递增起始值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetUserRoleIdList(System.Int32)">
            <summary>
            获取用户在系统中的所有角色Id列表
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetRoleRightList(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据角色Id列表获取所有系统权限
            </summary>
            <param name="userId"></param>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.NativeDropTable(System.String)">
            <summary>
            删除集合
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.NativeDelete(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            删除
            </summary>
            <param name="tblName"></param>
            <param name="delQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.AddBsonFixField(MongoDB.Bson.BsonDocument,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            增加固定值字段
            </summary>
            <param name="bson"></param>
            <param name="keyAndValueDC"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.AddBsonTimeAndTBField(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            增加时间、更新人 表名等固定字段
            </summary>
            <param name="bson"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNewTreeNodeKeyAttr(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            计算父节点（没有表规则）
            </summary>
            <param name="dataList">数据组</param>
            <param name="parentEntity">父节点</param>
            <param name="primaryKey">表主键</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MutualData">
            <summary>
            mongo表名查询参数实体
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.tbName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.queryStr">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.dataStr">
            <summary>
            定位关键字
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.sysRoleRights">
            <summary>
            角色人员权限
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.dataRuleRights">
            <summary>
            数据规则权限
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.roleRights">
            <summary>
            角色权限项
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.roleIdList">
            <summary>
            用户所属角色
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.isAdmin">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._userId">
            <summary>
            当前用户Id
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._userInfo">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.#ctor(System.Int32)">
            <summary>
            判断用户所有权限
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.InitSysRight">
            <summary>
            系统角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.GetUserDataScopeList(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            获取当前用户数据范围
            </summary>
            <param name="userId"></param>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.InitDataRuleRight(System.Int32)">
            <summary>
            项目角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.CheckRight(System.String,System.String,System.String[])">
            <summary>
            验证系统权限
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.GetSingleRightDataScope(System.String,System.String)">
            <summary>
            返回单个数据权限的数据范围
            </summary>
            <param name="dataObjType">数据对象类型</param>
            <param name="code">权限代码</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.GetUserRoles(System.Int32)">
            <summary>
            获取用户在系统中的所有角色Id
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.GetRoleRightList(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据角色Id列表获取所有系统权限
            </summary>
            <param name="userId"></param>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._moduleList">
            <summary>
            模块信息列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._dataModuleList">
            <summary>
            模块信息列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._userRelInfo">
            <summary>
            角色与各用户的关联对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._userRuleList">
            <summary>
            系统所有启用的用户规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._dataRuleList">
            <summary>
            系统所有启用的数据规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._sysDataObj">
            <summary>
            系统所有启用的数据对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority._dataObjValueDC">
            <summary>
            数据对象所有值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.IsAdmin">
            <summary>
            判断是否管理员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserInfo">
            <summary>
            获取当前用户信息
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleList">
            <summary>
            模块信息列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataModuleList">
            <summary>
            模块信息列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.userRelInfo">
            <summary>
            角色与各用户的关联对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.userRuleList">
            <summary>
            系统所有启用的用户规则
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.dataRuleList">
            <summary>
            系统所有启用的数据规则
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.sysDataObj">
            <summary>
            系统所有启用的数据对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.dataObjValueDC">
            <summary>
            数据对象所有值字段(代码，数据对象值列表)
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight">
            <summary>
            角色权限对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.code">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.dataObjType">
            <summary>
            数据对象类型（如项目、区域、城市、材料）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.dataId">
            <summary>
            对象Id值（如项目Id，区域Id、材料Id）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.dataIds">
            <summary>
            对象id的集合
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.isDataRight">
            <summary>
            是否数据对象权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.moduleId">
            <summary>
            低耦合对象Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.operatingId">
            <summary>
            操作项Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.isValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.isDataObjModule">
            <summary>
            是否数据对象模块
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleRight.key">
            <summary>
            
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleTypeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleTypeData.code">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleTypeData.dataObjId">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleTypeData.dataObjValue">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleInfo.code">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleInfo.moduleId">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleInfo.isDataObjModule">
            <summary>
            是否数据对象模块
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleInfo.dataObjIdStr">
            <summary>
            数据对象Id字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.ModuleInfo.dataObjIdList">
            <summary>
            数据对象Id
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserRoleRelInfo">
            <summary>
            用户所属角色关联表信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserRoleRelInfo.relTableName">
            <summary>
            关联表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserRoleRelInfo.relKeyName">
            <summary>
            关联表主键
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserRoleRelInfo.relKeyValue">
            <summary>
            关联表主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.UserRoleRelInfo.roleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating">
            <summary>
            权限与数据对象和模块对应的项
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating.moduleId">
            <summary>
            关联表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating.opertionId">
            <summary>
            关联表主键
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating.operatingCode">
            <summary>
            关联表主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating.dataObjId">
            <summary>
            关联表主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.DataObjOperating.roleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.SysAuthority.RoleDataObjScope">
            <summary>
            角色数据
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            数据规则
            </summary>
            <param name="ruleObj"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.#ctor(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            数据对象
            </summary>
            <param name="dataObj">数据规则</param>
            <param name="dataList"> 数据对象</param>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._dataList">
            <summary>
            数据对象分组
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._interfaceName">
            <summary>
            用户规则接口名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._analyse">
             <summary>
            接口处理对象
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._propetyName">
            <summary>
            属性列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._propertyDC">
            <summary>
            规则关联属性
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._ruleGroupInfo">
            <summary>
            数据规则分组信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._ruleGroupInfoInData">
            <summary>
            数据规则分组信息（包含数据对象本身）
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj._ruleGroupMember">
            <summary>
            获取分组下对象的成员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.dataRuleObj">
            <summary>
            数据规则
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.interfaceName">
             <summary>
            规则接口名称 
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.propetyName">
            <summary>
            属性列表(格式（值为空时用null代替）：属性名称|MZ|属性代码|MZ|关联字段|MZ|顺序|MZ|查询语句#MZ#属性名称|MZ|属性代码|MZ|关联字段|MZ|顺序|MZ|查询语句)
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.ruleGroupInfo">
            <summary>
            数据规则分组信息 
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.DataRuleObj.ruleGroupInfoInData">
            <summary>
            数据规则分组信息(包含数据对象本身)
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.ProjectRightScope">
            <summary>
            项目权限数据范围
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.GetDataScopes(System.Int32)">
            <summary>
            获取角色对应数据范围列表
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.Save(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity},System.Int32)">
            <summary>
            保存角色数据范围数据
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.ConvertToBiz(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            将数据对象转为业务对象
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.ConvertToBson(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity})">
            <summary>
            将实体对象转为bsondocument
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Season">
            <summary>
            时间处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Season.Init(System.DateTime,System.DateTime)">
            <summary>
            初始化
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Season.CalcSeasonCount(System.DateTime,System.DateTime)">
            <summary>
            计算传入的两个时间存在几个季度
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SeasonMonth">
            <summary>
            节点对应月份信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DateTimeHelper">
            <summary>
            时间操作相关
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetMonths(System.DateTime,System.DateTime)">
            <summary>
            给定开始和结束时间，遍历其所有月份，返回格式为：2013-07
            </summary>
            <param name="start">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetYearMonth(System.DateTime)">
            <summary>
            返回格式为：2013-07
            </summary>
            <param name="time">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.CalcMonthCount(System.DateTime,System.DateTime)">
            <summary>
            计算两个时间月份数
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetYears(System.DateTime,System.DateTime)">
            <summary>
            遍历年份
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.CompareYM(System.String,System.String)">
            <summary>
            比较两个时间是否同年同月 2014.12.19优化时间对比功能，如果问题请速来联系
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.CompareYMEx(System.String,System.String)">
            <summary>
            比较两个时间是否同年同月
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.LTE(System.DateTime,System.DateTime)">
            <summary>
            比较start是否小于等于end只比较月份
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetMonthsLastDay(System.DateTime,System.DateTime)">
            <summary>
            给定开始和结束时间，遍历其所有月份的最后一天，返回格式为：2013-07-31
            </summary>
            <param name="start">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetMonthsLastDayDate(System.DateTime,System.DateTime)">
            <summary>
            给定开始和结束时间，遍历其所有月份的最后一天，返回格式为：2013-07-31
            </summary>
            <param name="start">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingData">
            <summary>
            定制报表出来处理基类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.groupById">
            <summary>
            分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.groupByName">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.statistics">
            <summary>
            分组统计值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.filterStatus">
            <summary>
            过滤字段
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageData">
            <summary>
            数据存储类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Name">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Type">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Query">
            <summary>
            定位关键字
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Document">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            用户规则
            </summary>
            <param name="ruleObj"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.#ctor(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            数据对象
            </summary>
            <param name="dataObj">用户规则</param>
            <param name="dataObjPropertyDC"> 数据对象的属性</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.#ctor(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument)">
            <summary>
            数据对象
            </summary>
            <param name="dataObj">用户规则</param>
            <param name="dataObjPropertyDC"> 数据对象的属性</param>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._userList">
            <summary>
            用户信息列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._interfaceName">
            <summary>
            用户规则接口名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._analyse">
             <summary>
            接口处理对象
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._ruleGroupInfo">
            <summary>
            用户分组信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._userBelongGroupInfo">
            <summary>
            用户所属分组信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._userInfo">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj._ruleGroupMember">
            <summary>
            用户分组成员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.userRuleObj">
            <summary>
            用户规则
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.userList">
            <summary>
            用户信息列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.interfaceName">
             <summary>
            用户规则接口名称 
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.ruleGroupInfo">
            <summary>
            用户分组信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.userBelongGroupInfo">
            <summary>
            用户所属分组信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.userInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SystemAuthority.UserRuleObj.ruleGroupMember">
            <summary>
            用户分组成员
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SystemAuthority.IDataPropetyTreeAnalyse">
            <summary>
            数据对象属性树解析
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SystemAuthority.IDataPropetyTreeAnalyse.GetPropertyTreeList(MongoDB.Bson.BsonDocument)">
            <summary>
            获取数据
            </summary>
            <param name="dataObj">数据对象</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.RoleRightEntity">
            <summary>
            角色权限实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._DataObjectCode">
            <summary>
            数据对象代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.OperatingId">
            <summary>
            权限项Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataObjId">
            <summary>
            资源Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataId">
            <summary>
            数据对象实例数据Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.Code">
            <summary>
            模块权限项唯一代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataObjectCode">
            <summary>
            资源模块代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.QREncodeHelper">
            <summary>
            图片编码处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.PieChart">
            <summary>
            饼图报表处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.PieChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingData},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            PieChart
            </summary>
            <param name="report"></param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.PieChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingSerie},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            PieChart
            </summary>
            <param name="report"></param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.PieChart.ValidataReporting">
            <summary>
            检测报表是否有效
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelPlanProxy">
            <summary>
            excel计划代理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ExcelPlanProxy.LandMarkTaskList">
            <summary>
            里程碑节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ExcelPlanProxy.TaskList">
            <summary>
            任务节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ExcelPlanProxy.name">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelTaskColumnMap">
            <summary>
            excel任务代理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ExcelTaskColumnMap.taskpColumnName">
            <summary>
            人物名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ExcelTaskColumnMap.excelColumnName">
            <summary>
            excel列名
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.SendSysMessage(System.String,System.String,System.String)">
            <summary>
            推送消息到自动化运营
            </summary>
            <param name="message">消息</param>
            <param name="content">内容</param>
            <param name="logType">消息类型 3：索引创建成功 -3：异常消息 </param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.InsertErrorLog(System.String,System.String,System.String,System.String)">
            <summary>
            错误日志
            </summary>
            <param name="method">产生错误的方法名</param>
            <param name="type">错误类型</param>
            <param name="source">错误发生的</param>
            <param name="message">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.InsertUpdateIndexLog(System.Int64,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            索引更新日志
            </summary>
            <param name="elapsedTime">更新索引的时间</param>
            <param name="logDic">日志保存字段字典</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.AutoStartUpdateIndexLog(System.DateTime,System.Int32)">
            <summary>
            记录自动更新记录的时间
            </summary>
            <param name="updateDate"></param>
            <param name="times">从开启自动建索引开始到目前建立的次数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.InsertUserSearchLog(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            用户搜索日志
            </summary>
            <param name="logDic">日志字典</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.InsertRelSearchLog(System.String,System.String,System.Double)">
            <summary>
            插入相关搜索表
            </summary>
            <param name="keyword">关键词</param>
            <param name="relword">关键词的关联词</param>
            <param name="boost">权重</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.InsertPersonalSearchLog(System.String)">
            <summary>
            插入个人搜索记录日志
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.SELogBll.AddBsonBaseInfo(MongoDB.Bson.BsonDocument@)">
            <summary>
            添加日志基本信息
            </summary>
            <param name="logBson"></param>
        </member>
        <member name="F:Yinhe.SearchEngine.BusinessLogic.IndexerBll.writer">
            <summary>
            IndexWriter对象
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.DeleteIndexFile">
            <summary>
            删除所有索引文件
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.ExistIndex">
            <summary>
            判断是否存在索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.CheckLock">
            <summary>
            索引存在并且锁状态退出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.InitialWriter">
            <summary>
            判断是否可初始化InitialWriter
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.UpdateAllIndexes">
            <summary>
            更新全部索引（核心方法）
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.GenerateIndexCreater(Lucene.Net.Store.FSDirectory@)">
            <summary>
            注意返回结果Fail表示出错，suspen表示锁状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.IndexDispose">
            <summary>
            回收Index资源
            </summary>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.AddDocument(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Single,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            添加索引的文档
            </summary>
            <param name="indexId"></param>
            <param name="title"></param>
            <param name="moduleId"></param>
            <param name="objId"></param>
            <param name="priId"></param>
            <param name="belModule"></param>
            <param name="creator"></param>
            <param name="creationDate"></param>
            <param name="showType"></param>
            <param name="secontent"></param>
            <param name="boost"></param>
            <param name="relBson"></param>
            <param name="indexBson"></param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.AddDocument(System.Collections.Generic.Dictionary{System.String,System.String},System.Single)">
            <summary>
            添加索引的文档
            </summary>
            <param name="FieldCollection">字段字典</param>
            <param name="boost">权重</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.DeleteDocumentByIndexId(System.String)">
            <summary>
            通过indexId删除文档
            </summary>
            <param name="writer">IndexWriter对象</param>
            <param name="indexId">索引Id</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.DeleteDocumentByObjId(Lucene.Net.Index.IndexWriter@,System.String)">
            <summary>
            通过_id删除文档
            </summary>
            <param name="writer">IndexWriter对象</param>
            <param name="objId">_id</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.CreateIndexByTbNameAndFields(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            对某张表某些字段创建索引（暂未被调用，可根据需要随意修改）
            </summary>
            <param name="tbName"></param>
            <param name="elements"></param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.CreateIndexByTbName(System.String)">
            <summary>
            对某张表整表创建索引（暂未被调用，可根据需要随意修改）
            </summary>
            <param name="tbName">要索引的表</param>
            <param name="elements">要索引的字段</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.CreateIndexByIndexId(System.String,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            通过索引配置创建索引
            </summary>
            <param name="indexId"></param>
            <param name="logDic"></param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.GetFieldName(System.String,MongoDB.Bson.BsonDocument,System.String,System.String@,System.String@)">
            <summary>
            获得字段名和字段值
            </summary>
            <param name="field">格式：[字段名][字段名@@显示名][字段名|关联表@@显示名]</param>
            <param name="relBson">关联的BsonDocument</param>
            <param name="relName">要取的关联名</param>
            <param name="fieldName">得到的字段名</param>
            <param name="fieldValue">得到的字段值</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.GetConditionQuery(System.String)">
            <summary>
            搜索条件字符串转查询语句
            </summary>
            <param name="condition">搜索条件字符串</param>
            <returns>查询语句 格式：keyName|keyValue</returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.GetTitle(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            根据标题规则获得标题字符串
            </summary>
            <param name="titleRule">标题规则</param>
            <param name="bson">关联BsonDocument</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.AddLinkParams(Lucene.Net.Documents.Document@,MongoDB.Bson.BsonDocument,System.String,System.Int32)">
            <summary>
            添加链接参数字段
            </summary>
            <param name="doc">文档对象</param>
            <param name="relBson">字段所在的BsonDocument</param>
            <param name="linkParams">链接所有参数</param>
            <param name="showType">索引类型</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.BuildFieldIndexes(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            建立字段索引
            </summary>
            <param name="indexBson">索引规则</param>
            <param name="indexId">索引Id</param>
            <param name="belModule">所属模块</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.BuildFileLibIndexes(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            建立附件索引
            </summary>
            <param name="indexBson">索引规则</param>
            <param name="indexId">索引Id</param>
            <param name="belModule">所属模块</param>
        </member>
        <member name="M:Yinhe.SearchEngine.BusinessLogic.IndexerBll.BuildConfigTableIndexes(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            建立配置表索引
            </summary>
            <param name="indexBson">索引规则</param>
            <param name="indexId">索引Id</param>
            <param name="belModule">所属模块</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewPageBase">
            <summary>
            通用页面基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewPageBase.AreaTypeIdFilter(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            数据过滤比较
            </summary>
            <typeparam name="?"></typeparam>
            <typeparam name="?"></typeparam>
            <param name="bsonDoc"></param>
            <param name="urlAreaTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewPageBase.AreaTypeIdFilterEx(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            数据过滤比较
            </summary>
            <typeparam name="?"></typeparam>
            <typeparam name="?"></typeparam>
            <param name="bsonDoc"></param>
            <param name="urlAreaTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewPageBase.OnLoad(System.EventArgs)">
            <summary>
            重写加载方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewPageBase.OnPreInit(System.EventArgs)">
            <summary>
            重载模板页
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.auth">
            <summary>
            分项权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.sysAuth">
            <summary>
            系统权限判断，不包括分项权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.systemAuth">
            <summary>
            系统权限控制完整
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.BusOrgAreaTypeList">
            <summary>
            获取当前
            </summary>
            <value>当前用户的区域类型新城专用</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.IsBusOrgLandArea">
            <summary>
            是否地产类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.IsBusOrgGroupArea">
            <summary>
            是否集团控股类型
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.TableRule">
            <summary>
            表规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.Name">
            <summary>
            名称,表与表间的唯一标示
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.ColumnRules">
            <summary>
            表中的字段列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.CascadeRules">
            <summary>
            表中的级联操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.HasLog">
            <summary>
            是否记录到主表日志中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.isLogicDel">
            <summary>
            是否逻辑删除
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.#ctor(System.String)">
            <summary>
            默认构造函数,传入表名,读取数据规则
            </summary>
            <param name="tbName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.SetTableRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应表实体
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetAllTables">
            <summary>
            查找当前站点中的所有表规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetAllForeignTables(System.String)">
            <summary>
            获取当前表的所有子表,即有外键到到当前表的表
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetPrimaryKey">
            <summary>
            获取主键名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.TableRule.PrimaryKey">
            <summary>
            获取主键的名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.TableRule.PrimaryKeyOrObjId">
            <summary>
            若表规则没有设Primary，则取objId作为主键
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessagePushEntity">
            <summary>
            消息实体对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.content">
            <summary>
            内容正文
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.arrivedUserNames">
            <summary>
            接收用户 与arrivedUserIds可只填写一个
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.sendUserName">
            <summary>
            发送用户 与sendUserUserId可只填写一个
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.arrivedUserIds">
            <summary>
            接收用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.sendUserId">
            <summary>
            发送用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.sendDate">
            <summary>
            发送时间 可能为某个时间点，或某个具体的日期 yyyy-MM-1 21:00 代表任意月份的一号的九点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.sendType">
             <summary>
            发送类型 0邮件 1短信
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.registerDate">
            <summary>
            注册日期
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.type">
            <summary>
            0 异常 1 系统当日使用频度 2用户上传文件失败情况 后续补充
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessagePushEntity.addDayLifeTask">
            <summary>
            是否添加到我的个人日常任务 
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessagePushQueueHelper">
            <summary>
            通用邮件消息推送队列
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MessagePushQueueHelper.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.FindById(System.String)">
            <summary>
            通过主键查找
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.FindNeedSendMessage">
            <summary>
            查找需要发送的Message
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.FindMyNeedSendMessage(System.String)">
            <summary>
            查找需要发送的Message
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.CancelMyNeedSendMessage(System.String)">
            <summary>
            取消我的提醒操作
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessage(MongoDB.Bson.BsonDocument)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessage(System.String,System.String,System.String)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessage(System.String,System.String)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessageLimitSendDate(System.String,System.String,System.String)">
            <summary>
            添加实例,限制发送时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessageLimitSendDate(System.String,System.String,System.String,System.String)">
            <summary>
            添加实例限制发送时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessagePushQueueHelper.PushMessage(Yinhe.ProcessingCenter.MessagePushEntity)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.CustomerCode">
            <summary>
            客户代码处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.CustomerCode.customerDic">
            <summary>
            客户代码-名称 字典
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.CustomerCode.GetCustomerName(System.String)">
            <summary>
            获取站点名称
            </summary>
            <param name="customerCode"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZHHY">
            <summary>
            中海弘扬
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.SN">
            <summary>
            苏宁
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.XH">
            <summary>
            旭辉
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZHTZ">
            <summary>
            中海投资
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.QX">
            <summary>
            侨鑫
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.QXSD">
            <summary>
            侨鑫市调
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.LF">
            <summary>
            联发
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.NJHY">
            <summary>
            南京弘阳
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.XC">
            <summary>
            新城
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.SS">
            <summary>
            三盛
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.JH">
            <summary>
            金辉
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.WPM">
            <summary>
            计划管理系统
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZY">
            <summary>
            卓越
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.NF">
            <summary>
            南方
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.JZQH">
            <summary>
            精准去化
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.PUBMAT">
            <summary>
            精准去化
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.CENMAT">
            <summary>
            材料库中央数据库
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.CPIM">
            <summary>
            产品系列（全称 产品线信息模型配置）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZJGK">
            <summary>
            资金管控系统
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.HQC">
            <summary>
            华侨城HQC
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.TestPM">
            <summary>
            物业app系统测试
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.PM">
            <summary>
            物业app系统
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.LR">
            <summary>
            蓝润
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZBCG">
            <summary>
            招标采购
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.JHGL">
            <summary>
            项目计划系统
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.XHNEW">
            <summary>
            旭辉新项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.LG">
            <summary>
            蓝光项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.JD">
            <summary>
            金地项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.HQCNEW">
            <summary>
            华侨城项目
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Item">
            <summary>
            系统Item返回类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.IsFlag">
            <summary>
            用于标识属性处理
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.otherParam">
            <summary>
            其他参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.userId">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.isUse">
            <summary>
            标志使用状态
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ModulOper">
            <summary>
            模块操作业务对象实体
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.ModulId">
            <summary>
            模块id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.OperId">
            <summary>
            操作id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.dataObjId">
            <summary>
            业务对象id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.code">
            <summary>
            权限代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.TaskIdClass">
            <summary>
            任务分项工程名称实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.FlowPositionUser">
            <summary>
            流程岗位人员对象
            </summary>
        </member>
        <member name="M:System.DateTimeExtensions.GetISOWeekNumOfYear(System.DateTime)">
            <summary>
            根据ISO8601标准 判断当前日期是一年中的第几周 -1表示明年第一周 -50+表示去年最后一周
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtensions.GetISOWeekNumOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            根据ISO8601标准 判断当前日期是一年中的第几周 -1表示明年第一周 -50+表示去年最后一周
            </summary>
            <param name="dateTime"></param>
            <param name="firstDayOfWeek">设置一周第一天 （无参为周日）</param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtensions.GetISOYearWeekNumDicOfYear(System.DateTime)">
            <summary>
            根据ISO8601标准获取当前周所在年和周数
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtensions.GetISOYearWeekNumDicOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            根据ISO8601标准获取当前周所在年和周数
            </summary>
            <param name="dateTime"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtensions.GetWeekEndDate(System.DateTime)">
            <summary>
            根据ISO8601标准获取当前天所在周
            </summary>
            <param name="dateTime"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtensions.GetWeekBeginDayList(System.DateTime)">
            <summary>
            根据ISO8601标准获取当前天该月份的周
            </summary>
            <param name="dateTime"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url">要截图的地址</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url">要截图的地址</param>
            <param name="fileName">截图后保存的图片地址和图片名</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url">要截图的地址</param>
            <param name="phyAddr">截图后保存的图片地址</param>
            <param name="fileName">截图后保存的图片名</param>
            <param name="funcName">调用url中的函数</param>
            <param name="success">函数返回值为多少时，继续执行</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.Generate">
            <summary>
            异步生成截图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll._Generate">
            <summary>
            生成截图方法（必须在单线程中）
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.WebBrowser_DocumentCompleted(System.Object,System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
            <summary>
            触发DocumentCompleted事件
            </summary>
            <param name="sender">当前浏览器对象</param>
            <param name="e">事件</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.PicWidth">
            <summary>
            获取或设置图片宽度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.WebThumbnailsBll.PicHeight">
            <summary>
            获取或设置图片高度
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SQLGetDataList">
            <summary>
            AD数据获取处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.GetBsonDocumentDataList(System.String,System.String)">
            <summary>
            获取bson数据列表
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.DeleteData(System.String,System.String)">
            <summary>
            清空数据库
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.InsertData(System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="T:Svc_WebService.EasOrgService">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.#ctor">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findContacts(Svc_WebService.ContactModel)">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findContactsAsync(Svc_WebService.ContactModel)">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findContactsAsync(Svc_WebService.ContactModel,System.Object)">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findAllDepartments">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findAllDepartmentsAsync">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.findAllDepartmentsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Svc_WebService.EasOrgService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Svc_WebService.EasOrgService.findContactsCompleted">
            <remarks/>
        </member>
        <member name="E:Svc_WebService.EasOrgService.findAllDepartmentsCompleted">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.ContactModel">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FAddress">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FCell">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FDepartmentID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FDepartmentName">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FEMail">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FEmployeeTypeName">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FGender">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FHomePhone">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FNumber">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FOfficePhone">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FPersonName">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FPersonPhoto">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FPersonPhotoID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FPersonPhotoModel">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FPositionName">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FUnitID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.ContactModel.FUnitName">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.PersonPhotoModel">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.PersonPhotoModel.FID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.PersonPhotoModel.FPersonID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.PersonPhotoModel.FPersonPhoto">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.OrganizationModel">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FDepartmentName">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FLongNumber">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FNumber">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FParentID">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.OrganizationModel.FParentName">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.IOException">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.RemoteException">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.RemoteException.cause">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.RemoteException.message">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.findContactsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.findContactsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.findContactsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.findAllDepartmentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Svc_WebService.findAllDepartmentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Svc_WebService.findAllDepartmentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.SubjectCategoryTableName">
            <summary>
            问题分类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseSubjectCategoryTableName">
            <summary>
            案例问题分类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.SubjectLibTableName">
            <summary>
            调研问卷题库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.AnswerItemTableName">
            <summary>
            答案选项
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.ExamenCaseTableName">
            <summary>
            调研问卷案例包含模板
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseApplyProductTableName">
            <summary>
            案例适用的产品类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseSubjectTableName">
            <summary>
            案例题目
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseAnswerItemTableName">
            <summary>
            案例答案选项
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.ExamenUserTableName">
            <summary>
            案例调研用户
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseAnswerTableName">
            <summary>
            案例答案
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.SubCatKey">
            <summary>
            问题分类主键字段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.SubKey">
            <summary>
            问题库主键字段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SurveyLib.SurveyParam.CaseKey">
            <summary>
            案例主键字段
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.StdLibInfo">
            <summary>
            标准库内置数据处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DynamicInvokeWebService">
            <summary>
            动态调用webService集成
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.#ctor(System.String)">
            <summary>
            构造函数，如果已经存在dll，则直接加载
            </summary>
            <param name="dllName">dll名称或者路径名</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数，通过url地址，构建程序集（注：如果程序集已经存在，则不再构建）
            </summary>
            <param name="url">程序集wdsl地址</param>
            <param name="nameSpace">命名空间</param>
            <param name="dllName">dll名称</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeWebServiceMethod(System.String,System.String,System.Object[])">
            <summary>
            动态调用webService方法(缺省命名空间Yinhe.WebService，类名：Yinhe.WebService.ZHHYApproval)
            </summary>
            <param name="url">web Service 的wsdl地址</param>
            <param name="methodName">调用的方法名称</param>
            <param name="args">使用的参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeWebServiceMethod(System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            动态调用webService方法
            </summary>
            <param name="url">web Service 的wsdl地址</param>
            <param name="methodName">调用的方法名称</param>
            <param name="nameSpace">命名空间(引入的web service在系统中的命名空间）</param>
            <param name="className">类名称（web service的类名称）</param>
            <param name="args">使用的参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeWebServiceToDLL(System.String)">
            <summary>
            根据wsdl的url地址生成程序集（C:\Program Files (x86)\Common Files\Microsoft Shared\DevServer\10.0）
            </summary>
            <param name="url">web Service 的wsdl地址</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeWebServiceToDLL(System.String,System.String,System.String)">
            <summary>
            根据wsdl的url地址生成程序集（C:\Program Files (x86)\Common Files\Microsoft Shared\DevServer\10.0）
            </summary>
            <param name="url">web Service 的wsdl地址</param>
            <param name="dllName">生成的dll的名称</param>
            <param name="nameSpace">命名空间(引入的web service在系统中的命名空间）</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.IsDllExist(System.String)">
            <summary>
            判断程序集是否存在
            </summary>
            <param name="dllName">程序集dll名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeMethodInDLL(System.String,System.String,System.String,System.Object[])">
            <summary>
            从生成的程序集dll中调用方法
            </summary>
            <param name="dllName">dll程序集的文件名称</param>
            <param name="className">类名</param>
            <param name="methodName">方法名</param>
            <param name="arg">方法的参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicInvokeWebService.InvokeClassInDLL(System.String,System.String,System.String)">
            <summary>
            获取程序集dll中的成员
            </summary>
            <param name="dllName">dll程序集的文件名称</param>
            <param name="className">类名</param>
            <param name="paramName">类成员名称</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Tree">
            <summary>
            树状操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.Type">
            <summary>
            节点类型（0-主表节点，1-从表节点）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.IsRoot">
            <summary>
            是否为根节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.NodeAction">
            <summary>
            节点的操作动作（节点旁边的html代码）
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.HtmlToImg">
            <summary>
            将html页面生成图片
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.HtmlToImg.WIDTH">
            <summary>
            默认宽度
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.HtmlToImg.HEIGHT">
            <summary>
            默认高度
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            根据页面Url地址生成网页快照
            </summary>
            <param name="url">页面地址</param>
            <param name="originPath">生成的原始大小的图片路径</param>
            <param name="thumbPath">生成的缩略图路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            根据HTML代码生成页面内容快照
            </summary>
            <param name="htmlText">HTML代码</param>
            <param name="originPath">生成的原始大小的图片路径</param>
            <param name="thumbPath">生成的缩略图路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="noUse">此参数暂时没有使用</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.ReplaceSrc(System.String)">
            <summary>
            在src属性前加上域名
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Width">
            <summary>
            缩略图宽度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Height">
            <summary>
            缩略图高度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Url">
            <summary>
            将被生成图片的页面Url地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.HtmlText">
            <summary>
            将被生成图片的HTML代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.OriginPath">
            <summary>
            生成的原始大小的图片路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.ThumbPath">
            <summary>
            生成的缩略图路径
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.HtmlHelper">
            <summary>
            Html处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.RemoveHTML(System.String)">
            <summary>
            去除HTML标记
            </summary>
            <param name="Htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.Html2Img(System.String,System.String)">
            <summary>
            将html页面生成pdf文档，异步方式
            </summary>
            <param name="url"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.Html2PDFSynch(System.String,System.String,System.String)">
            <summary>
            将html页面生成pdf文档，同步方式
            </summary>
            <param name="url"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String)">
            <summary>
            根据页面url，按节点目录生成pdf和对应书签(空页面不生成)
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf2(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String)">
            <summary>
            根据页面url，按节点目录生成pdf和对应书签(生成所有页面)
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf3(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            整个任务书展示页面生成pdf，同时计算页码，生成书签(此方法不完善，书签定位不正确)
            </summary>
            <param name="docList"></param>
            <param name="url"></param>
            <param name="savePath"></param>
            <param name="customName"></param>
            <param name="tops"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf4(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String)">
            <summary>
            按一级目录请求页面,二级和以后的目录全部不生成，书签只能定位到一级目录
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <param name="customerName"></param>
            <param name="bookTaskUrl">为a标签包含的链接</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.AddHeader(WebSupergoo.ABCpdf7.Doc@,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String,System.String)">
            <summary>
            添加页眉和页脚
            </summary>
            <param name="doc"></param>
            <param name="titleDic"></param>
            <param name="customName"></param>
            <param name="bookTaskUrl"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.GetPath(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},Yinhe.ProcessingCenter.PdfDoc)">
            <summary>
            获取abcpdf的bookmark层级目录的路径，需要查看ABCpdf的Api文档
            </summary>
            <param name="pageList"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.GetPath(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.Int32)">
            <summary>
            递归方法，获取当前页面的路径
            </summary>
            <param name="pageList"></param>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PdfDoc">
            <summary>
            辅助实体类，将被生成PDF页面的对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PdfDoc.Expended">
            <summary>
            是否展开节点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.LogError">
            <summary>
            记录日志
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.CopyBsonHandle">
            <summary>
            bson复制处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.CopyBsonHandle._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBson(System.String,MongoDB.Bson.BsonDocument,System.String,System.String[])">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBson(System.String,MongoDB.Bson.BsonDocument,System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBsons(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[])">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBsons(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewFreePageBase">
            <summary>
            免登陆查看页面基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewFreePageBase.OnLoad(System.EventArgs)">
            <summary>
            重写加载方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PushToSeeyon">
            <summary>
            推送消息致远OA基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PushToSeeyon.PushTodoInfo(System.String[],System.String,System.String)">
            <summary>
            推送消息到致远OA
            </summary>
            <param name="loginNames">用户登录名数组</param>
            <param name="content">推送内容</param>
            <param name="url">推送内容url</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PushToSeeyon.GetUrls(System.String[],System.String)">
            <summary>
            获取用户获取的链接
            </summary>
            <param name="loginNames"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.CascadeRule">
            <summary>
            级联规则,继承基础操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Event">
            <summary>
            级联触发事件类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Time">
            <summary>
            级联触发时间时间
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Condition">
            <summary>
            触发条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.CascadeRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.CascadeRule.SetCascadeRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应级联规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.OrganizationAD">
            <summary>
            AD组织部门处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrganizationSave(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="adList"></param>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrgTreeInsert(Yinhe.ProcessingCenter.ADDepartment,Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrgTreeInsertSS(Yinhe.ProcessingCenter.ADDepartment,Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.SetDepartmentFilter(System.Collections.Generic.List{System.String})">
            <summary>
            部门筛选
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserInsert(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},System.Int32,System.Int32)">
            <summary>
            用户同步  单用户
            </summary>
            <param name="userList"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserInsertByDepType(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            用户同步
            </summary>
            <param name="userList">用户列表</param>
            <param name="type">部门获取方式 0 名字 1 guid</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserAdd(Yinhe.ProcessingCenter.ADUser,System.Int32,System.Int32,System.Int32)">
            <summary>
            单个部门
            </summary>
            <param name="user"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserAddMulDep(Yinhe.ProcessingCenter.ADUser,System.Int32,System.Int32,System.Int32)">
            <summary>
            多个部门
            </summary>
            <param name="user"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.PositionSave(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADPosition},Yinhe.ProcessingCenter.ADPosition)">
            <summary>
            临时岗位同步
            </summary>
            <param name="adList">岗位列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserAddWithPosition(Yinhe.ProcessingCenter.ADUser,System.Int32,System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            插入用户和岗位关联
            </summary>
            <param name="user"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserMutPositionSave(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADPositionUserRel})">
            <summary>
            用户和岗位关联
            </summary>
            <param name="userPositionRelList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserInfoUpdate(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},System.Int32)">
            <summary>
            用户同步
            </summary>
            <param name="userList">用户列表</param>
            <param name="userType">部门获取方式 0 名字 1 guid</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.PositionTreeInsert(Yinhe.ProcessingCenter.ADPosition,Yinhe.ProcessingCenter.ADPosition)">
            <summary>
            组织架构同步
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter">
            <summary>
            响应流过滤去（权限过滤）
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            过滤输出的Html代码
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.CheckDataRight(System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            检查数据权限代码
            </summary>
            <param name="dataObjId"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.DataScopeEntity">
            <summary>
            角色数据权限实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.DataScopeEntity._RoleRightEntities">
            <summary>
            数据范围权限列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.ScopeId">
            <summary>
            数据范围Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleCategoryId">
            <summary>
            角色数据权限类别Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataTableName">
            <summary>
            数据对应表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataFeildName">
            <summary>
            数据对应表主键字段
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataId">
            <summary>
            数据实体主键Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.CreateUserId">
            <summary>
            创建用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.UpdateUserId">
            <summary>
            更新用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.UpdateDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleRightEntities">
            <summary>
            数据范围权限列表
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Helper.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Helper.ExcelHelper.ExcelToBsonDocumentList(System.Web.HttpPostedFileBase,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Excel上传文件转换BsonDocument
            </summary>
            <param name="file">上传文件</param>
            <param name="tempDir">临时目录</param>
            <param name="sheetNameList">Excel工作簿名</param>
            <param name="sheetNameList">各sheet中列名与BsonDocument字段对应关系</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Helper.ExcelHelper.ExcelToBsonDocumentList(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Excel文件转换BsonDocument
            </summary>
            <param name="tempFileName">Excel文件路径</param>
            <param name="sheetNameList">Excel工作簿名</param>
            <param name="sheetNameList">各sheet中列名与BsonDocument字段对应关系</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Helper.ExcelHelper.ExcelToDataSet(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            导出Excel到DataTable
            </summary>
            <param name="excelFileName"></param>
            <param name="sheetNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Helper.ExcelHelper.ChangeChinesetoPinYin(System.String)">
            <summary>
            将中文转换为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingSerie">
            <summary>
            定制报表serie基类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.displayValueLable">
            <summary>
            是否显示该系列的值标签填入true|false
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.displayInLegend">
            <summary>
            是否显示该系列的Lend 填入true|false
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.createYAxis">
            <summary>
            是否创建新Y轴
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.markerStyle">
            <summary>
            取值范围MarkerStyle类型： Circle,Cross,None,Square
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.markerSize">
             <summary>
            尺寸与markerStyle配合使用
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.reportingData">
            <summary>
            分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.name">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.displayName">
            <summary>
            series展示名称 一般设置为LegendText
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.chartType">
            <summary>
            图表类型
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.SerieHelper">
            <summary>
            报表serie处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.GlobalBase">
            <summary>
            用户控件基类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.GlobalBase.BuiltInCustomerCode">
            <summary>
            内置账户对应客户代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.GlobalBase.WaitForApprovalCacheKey">
            <summary>
            流程缓存相关
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.GetAuthentication(System.String)">
            <summary>
             获取Authentication存在显示转化开销
            </summary>
            <param name="akey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.SetAuthentication(System.String,Yinhe.ProcessingCenter.Permissions.Authentication)">
            <summary>
            添加
            </summary>
            <param name="akey"></param>
            <param name="avalue"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.ReleaseAuthentication(System.String)">
            <summary>
            对象权限释放
            </summary>
            <param name="akey"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.ReleaseAuthentication">
            <summary>
            对象权限释放
            </summary>
            <param name="akey"></param>
        </member>
        <member name="F:Yinhe.ProcessingCenter.GlobalBase.SysCustomerCodeKey">
            <summary>
            系统客户代码参数名
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.GetSysAuthentication(System.String)">
            <summary>
             获取Authentication存在显示转化开销
            </summary>
            <param name="akey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.SetSysAuthentication(System.String,Yinhe.ProcessingCenter.SystemAuthority.SysAuthority)">
            <summary>
            添加
            </summary>
            <param name="akey"></param>
            <param name="avalue"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.ReleaseSysAuthentication(System.String)">
            <summary>
            对象权限释放
            </summary>
            <param name="akey"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.GlobalBase.ReleaseSysAuthentication">
            <summary>
            对象权限释放
            </summary>
            <param name="akey"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.auth">
            <summary>
            权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.GetAuthenticationKey">
            <summary>
            AuthenticationKey
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.QHSysCustomerCode">
            <summary>
            系统使用客户代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.IsBuiltInUser">
            <summary>
            是否为内置账户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.systemAuth">
            <summary>
            权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.GlobalBase.GetSysAuthenticationKey">
            <summary>
            AuthenticationKey
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewUserControlBase">
            <summary>
            用户控件基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewUserControlBase.AreaTypeIdFilter(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            数据过滤比较
            </summary>
            <typeparam name="?"></typeparam>
            <typeparam name="?"></typeparam>
            <param name="bsonDoc"></param>
            <param name="urlAreaTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.auth">
            <summary>
            权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.sysAuth">
            <summary>
            系统权限判断，不包括分项权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.systemAuth">
            <summary>
            系统权限控制完整
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.BusOrgAreaTypeList">
            <summary>
            获取当前
            </summary>
            <value>当前用户的区域类型新城专用</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.IsBusOrgLandArea">
            <summary>
            是否地产类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.IsBusOrgGroupArea">
            <summary>
            是否控股控股类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.IsAllControlArea">
            <summary>
            是否集团控股类型
            </summary>
        </member>
    </members>
</doc>
