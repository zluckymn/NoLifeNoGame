//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18052 版自动生成。
// 
#pragma warning disable 1591

namespace Yinhe.ProcessingCenter.MessageService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="messageServiceSoap11Binding", Namespace="www.seeyon.com")]
    public partial class messageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendMessageByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessageByUserIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public messageService() {
            this.Url = global::Yinhe.ProcessingCenter.Properties.Settings.Default.Yinhe_ProcessingCenter_MessageService_messageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendMessageByLoginNameCompletedEventHandler sendMessageByLoginNameCompleted;
        
        /// <remarks/>
        public event sendMessageByUserIdCompletedEventHandler sendMessageByUserIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:sendMessageByLoginName", RequestNamespace="http://impl.message.services.v3x.seeyon.com", ResponseNamespace="http://impl.message.services.v3x.seeyon.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ServiceResponse sendMessageByLoginName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, [System.Xml.Serialization.XmlElementAttribute("loginNames", IsNullable=true)] string[] loginNames, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string content, [System.Xml.Serialization.XmlElementAttribute("url", IsNullable=true)] string[] url) {
            object[] results = this.Invoke("sendMessageByLoginName", new object[] {
                        token,
                        loginNames,
                        content,
                        url});
            return ((ServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageByLoginNameAsync(string token, string[] loginNames, string content, string[] url) {
            this.sendMessageByLoginNameAsync(token, loginNames, content, url, null);
        }
        
        /// <remarks/>
        public void sendMessageByLoginNameAsync(string token, string[] loginNames, string content, string[] url, object userState) {
            if ((this.sendMessageByLoginNameOperationCompleted == null)) {
                this.sendMessageByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageByLoginNameOperationCompleted);
            }
            this.InvokeAsync("sendMessageByLoginName", new object[] {
                        token,
                        loginNames,
                        content,
                        url}, this.sendMessageByLoginNameOperationCompleted, userState);
        }
        
        private void OnsendMessageByLoginNameOperationCompleted(object arg) {
            if ((this.sendMessageByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageByLoginNameCompleted(this, new sendMessageByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:sendMessageByUserId", RequestNamespace="http://impl.message.services.v3x.seeyon.com", ResponseNamespace="http://impl.message.services.v3x.seeyon.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ServiceResponse sendMessageByUserId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, [System.Xml.Serialization.XmlElementAttribute("userIds")] long[] userIds, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string content, [System.Xml.Serialization.XmlElementAttribute("url", IsNullable=true)] string[] url) {
            object[] results = this.Invoke("sendMessageByUserId", new object[] {
                        token,
                        userIds,
                        content,
                        url});
            return ((ServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageByUserIdAsync(string token, long[] userIds, string content, string[] url) {
            this.sendMessageByUserIdAsync(token, userIds, content, url, null);
        }
        
        /// <remarks/>
        public void sendMessageByUserIdAsync(string token, long[] userIds, string content, string[] url, object userState) {
            if ((this.sendMessageByUserIdOperationCompleted == null)) {
                this.sendMessageByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageByUserIdOperationCompleted);
            }
            this.InvokeAsync("sendMessageByUserId", new object[] {
                        token,
                        userIds,
                        content,
                        url}, this.sendMessageByUserIdOperationCompleted, userState);
        }
        
        private void OnsendMessageByUserIdOperationCompleted(object arg) {
            if ((this.sendMessageByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageByUserIdCompleted(this, new sendMessageByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.v3x.seeyon.com/xsd")]
    public partial class ServiceResponse {
        
        private string errorMessageField;
        
        private long errorNumberField;
        
        private bool errorNumberFieldSpecified;
        
        private long resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long errorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorNumberSpecified {
            get {
                return this.errorNumberFieldSpecified;
            }
            set {
                this.errorNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void sendMessageByLoginNameCompletedEventHandler(object sender, sendMessageByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void sendMessageByUserIdCompletedEventHandler(object sender, sendMessageByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591