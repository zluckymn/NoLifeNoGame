<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yinhe.ProcessingCenter</name>
    </assembly>
    <members>
        <member name="T:Yinhe.ProcessingCenter.PluginViewLocations">
            <summary>
            程序集属性
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PluginViewLocations.#ctor(System.String[],System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="viewLocations"></param>
            <param name="addLink"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.viewLocations">
            <summary>
            视图位置信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.addLink">
            <summary>
            是否添加到连接
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.controller">
            <summary>
            默认controller
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PluginViewLocations.action">
            <summary>
            默认Action
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authorityService">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.#ctor">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticate(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AuthorityService.authorityService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.AuthorityService.authorityService.authenticateCompleted">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.UserToken">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.UserToken.id">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.UserToken.nullToken">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.AuthorityService.authenticateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.PieChart">
            <summary>
            饼图报表处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingChart">
            <summary>
            报表实例处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingDisplay">
            <summary>
            报表展示处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceSelectColumn">
            <summary>
            替换选择列
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceGroupByColumn">
            <summary>
            替换选择列groupBy
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.ReplaceWhereColumn">
            <summary>
            替换选择列过滤条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.DicRowKey">
            <summary>
            没有选择列的统计结果Key
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.reportData">
            <summary>
            报表数据类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.reportingSeries">
            <summary>
            报表数据集合类型ReportingSerie 包含ReportingData
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.dicPrm">
            <summary>
            报表参数
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingDisplay.dicReport">
            <summary>
            报表数据结果
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.GetFieldMap(System.String)">
            <summary>
            获取字段的映射
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingDisplay.CheckValidateSql">
            <summary>
            检查是否为有效的Sql
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingDisplay.Message">
            <summary>
            报表处理结果信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.IReportingDisplay">
            <summary>
             报表展示接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.IReportingDisplay.RenderHtml(System.Web.UI.Page)">
            <summary>
            输出html代码
            </summary>
            <param name="page"></param>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultChartAreaName">
            <summary>
            默认的ChartArea
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultSerieName">
            <summary>
            默认的Serie
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingChart.DefaultLegendName">
            <summary>
            默认Legend
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingData},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名数据源</param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingSerie},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名数据源</param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.LoadDefaultStyle">
            <summary>
            初始化默认样式
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.InitChart">
            <summary>
            初始化图表控件的部分参数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.ChartDataBind">
            <summary>
            图表数据绑定
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.CheckConvertNumeric(System.Data.DataTable,System.Int32,System.Double@)">
            <summary>
            判断是否要转数值
            </summary>
            <param name="tblReport"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.CheckValidata">
            <summary>
            检测是否有效的报表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.ReportingChart.RenderHtml(System.Web.UI.Page)">
            <summary>
            输出报表
            </summary>
            <param name="page"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingChart.ValidataReporting">
            <summary>
            检测报表是否有效
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.PieChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingData},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            PieChart
            </summary>
            <param name="report"></param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Reports.PieChart.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.Reports.ReportingSerie},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            PieChart
            </summary>
            <param name="report"></param>
            <param name="data"></param>
            <param name="prm"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.PieChart.ValidataReporting">
            <summary>
            检测报表是否有效
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MaterialBll">
            <summary>
            材料库处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MaterialBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.RefreshCode(System.String)">
            <summary>
            更新材料库的编码
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.CalcMaterialCode(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            计算材料的编码
            </summary>
            <param name="material">表单提交的材料信息</param>
            <param name="old">数据库保存材料信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.CalcMaterialCode(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            计算材料的编码
            </summary>
            <param name="material">表单提交的材料信息</param>
            <param name="old">数据库保存材料信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.CalcMaterialCodeQX(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            计算材料的编码
            </summary>
            <param name="material">表单提交的材料信息</param>
            <param name="old">数据库保存材料信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.ChangeCategory(MongoDB.Bson.BsonDocument)">
            <summary>
            修改材料类目时，修改其下所有编码
            </summary>
            <param name="catName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.ChangeBaseCat(MongoDB.Bson.BsonDocument)">
            <summary>
            修改基类名称时，改变其下材料编码
            </summary>
            <param name="baseCat"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.ShouldCalc(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            判断是否要计算编码
            </summary>
            <param name="newM"></param>
            <param name="old"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.ShouldCalcQX(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            判断是否要计算编码
            </summary>
            <param name="newM"></param>
            <param name="old"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.CalcPinyin(System.String,System.Int32)">
            <summary>
            计算拼音
            </summary>
            <param name="name"></param>
            <param name="counter"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MaterialBll.CalcPinyinStep(System.String,System.Int32,System.Int32)">
            <summary>
            按一定步长获取输入中的拼音缩写
            </summary>
            <param name="name"></param>
            <param name="step">步长</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll">
            <summary>
            任务公式
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll.IsClosedLoop(Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject)">
            <summary>
            检查是否有闭环
            </summary>
            <param name="formulaObj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll.CheckClosedLoop(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            递归检测循环
            </summary>
            <param name="strOperate"></param>
            <param name="strOperateList"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList">
            <summary>
            更新OA待办列表类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.IExecuteTran">
            <summary>
            事务执行接口，不同的事务对象都继承该接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.IExecuteTran.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            执行事务
            </summary>
            <param name="tran"></param>
            <param name="UserId"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改OA待办列表
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXUpdateOAToDoList(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            根据mode调用插入待办或已办方法
            </summary>
            <param name="curUserId"></param>
            <param name="instance">tbName:BusFlowInstance</param>
            <param name="stepTran">tbName:StepTransaction</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXGetCirculateUserIds(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取流程步骤传阅人员，包括同stepOrder的所有传阅人
            作为当前流程步骤审批人员的秘书进行推送
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXGetCurStepCirUserIds(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取流程步骤传阅人员，只获取当前步骤下的人员
            </summary>
            <param name="flowInstanceId"></param>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXGetTodoUserIds(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤下一步需要推送待办的人员
            </summary>
            <param name="flowInstanceId"></param>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertToDo(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            QX webservice插入待办
            用于事务正常执行
            </summary>
            <param name="curUserId"></param>
            <param name="instance"></param>
            <param name="stepTranRel"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertFlowToDo(MongoDB.Bson.BsonDocument,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            发送流程审批待办
            事务正常执行或转办时调用
            </summary>
            <param name="instance">流程实例</param>
            <param name="stepId">步骤id</param>
            <param name="submitUserId">提交者</param>
            <param name="todoUserIdList">待办者</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertAllFlowToDo(System.Int32)">
            <summary>
            给进行中的流程当前步骤审批人员发送待办
            </summary>
            <param name="flowInstanceId">流程实例id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertDone(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            发送已办消息，OA会自动更新对应待办
            事务正常执行时调用
            </summary>
            <param name="curUserId"></param>
            <param name="instance"></param>
            <param name="stepTranRel"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertFlowDone(MongoDB.Bson.BsonDocument,System.Int32,System.Int32)">
            <summary>
            事务正常执行或转办、二次会签调用
            发送流程已办消息
            发起二次会签或转办等不通过事务执行的方法需要指定stepId
            </summary>
            <param name="instance">流程实例</param>
            <param name="stepId">当前步骤id</param>
            <param name="doneUserId">执行者id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertFlowDone(MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            推送已办消息
            </summary>
            <param name="instance">流程实例</param>
            <param name="stepId">当前步骤id</param>
            <param name="doneUserId">执行者id</param>
            <param name="doneUserIdList">所有需要发送已办消息的人</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateOAToDoList.QXInsertAllFlowDone(System.Int32,System.Int32)">
            <summary>
            给流程实例所有未完成的待办发送已办消息
            </summary>
            <param name="flowInstanceId">流程实例id</param>
            <param name="doneUserId">当前发送者</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ControllerBase">
            <summary>
            方案评审管理基类
            </summary>
            <summary>
            MVC Controller的通用基类
            </summary>
            <summary>
            标准成果后台管理基类
            </summary>
            <summary>
            市场调研-豪宅管理基类
            </summary>
            <summary>
            设计供应商后台管理基类
            </summary>
            <summary>
            月计划后台管理基类
            </summary>
            <summary>
            项目资料库后台管理基类
            </summary>
            <summary>
            工作信函邮件后台基类
            </summary>
            <summary>
            MVC Controller的AD同步通用基类
            </summary>
            <summary>
            产品线后台管理基类
            </summary>
            <summary>
            市场调研-设备管理基类
            </summary>
            <summary>
            项目管理后台处理基类
            </summary>
            <summary>
            任务书后台管理基类
            </summary>
            <summary>
            设计后台管理基类
            </summary>
            <summary>
            用户管理后台处理基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProgrammeEvaluationTOPDF">
            <summary>
            设计变更PDF导出
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProgrammeEvaluationStartTime(System.Int32)">
            <summary>
            保存变更单发起审批时间
            </summary>
            <param name="designChangeId">变更单ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CommonDel(System.String,System.String,System.String,System.String)">
            <summary>
            "table1,key1|table2,key2"
            </summary>
            <param name="tbName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <param name="relInfos"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CommonDelByPK(System.String,System.String,System.String,System.String)">
            <summary>
            通过主键删除
            </summary>
            <param name="tbName"></param>
            <param name="keyValue"></param>
            <param name="relTbNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialQX(System.Web.Mvc.FormCollection)">
            <summary>
            乔鑫保存材料
            </summary>
            <param name="saveForm">上传表单</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterial(System.Web.Mvc.FormCollection,System.String,System.String)">
            <summary>
            三盛保存材料
            </summary>
            <param name="saveForm">上传表单</param>
            <param name="prices">价格列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMatProjRel(System.String,System.String)">
            <summary>
            保存关联应用项目
            </summary>
            <param name="extendAttrs"></param>
            <param name="matId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialPrices(System.String,System.String)">
            <summary>
            保存材料的价格
            </summary>
            <param name="prices"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UniversalSave(System.String,System.String,System.String)">
            <summary>
            通用删除
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            删除提交上来的信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
            
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UniversalDelete(System.String,System.String)">
            <summary>
            通用删除
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchDeleteByPrimaryKey(System.Web.Mvc.FormCollection)">
            <summary>
            根据主键Id批量删除
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MovePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            移动提交上来的信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSingleTableJson(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            获取简单表的Json列表
            </summary>
            <param name="tbName">表名</param>
            <param name="ps">每页条数(默认20,-1不翻页)</param>
            <param name="cu">当前页</param>
            <param name="qu">查询语句(原生查询)</param>
            <param name="of">排序字段</param>
            <param name="ot">排序类型(空正序,desc倒序)</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeChinesetoPinYin(System.String)">
            <summary>
            将中文转换为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CommonInsertPost">
            <summary>
            系统权限通用列表新增接口 对比数据库已有记录 
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.ControllerBase.GetSingleTreeXML(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.ControllerBase.GetLevelSingleTreeXML(System.String,System.String,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSingleTreeMutiQueryXML(System.String,System.String)">
            <summary>
            通过多条件获取单表普通树的XML列表
            </summary>
            <param name="tbName"></param>
            <param name="queryStr">(a=a:b=b:c=c)</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.ControllerBase.GetSingleNoRootTreeXML(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.ControllerBase.GetSingleTreeXMLByIntOrStr(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSingleTreeXMLByQuery(System.String,System.String)">
            <summary>
            获取单表普通树的XML列表
            </summary>
            <param name="tbName">表名</param>
            <param name="queryStr">查询条件(原生查询:db.tbName....)</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSingleSubTreeXML(System.String,System.String,System.Int32)">
            <summary>
            获取单表普通树的子树XML
            </summary>
            <param name="tbName">表名</param>
            <param name="curNodeId">当前节点Id</param>
            <param name="lv">获取层级</param>
            <param name="itself">是否包含本身节点,0不包含,1包含</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSingleUploadFile(System.Web.Mvc.FormCollection)">
            <summary>
            上传单个文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMultipleUploadFiles(System.Web.Mvc.FormCollection)">
            <summary>
            上传多个文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveNewVersion(System.Web.Mvc.FormCollection)">
            <summary>
            上传新版本
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetBrainCoverImage(System.Int32)">
            <summary>
            设置其他首脑图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetCoverImage(System.Int32)">
            <summary>
            设置封面图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetIndexPush">
            <summary>
            设置首页推送
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UpdateFileDescription(System.Web.Mvc.FormCollection)">
            <summary>
            更新文件描述
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddFileDescription(System.Web.Mvc.FormCollection)">
            <summary>
            更新文件描述
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleFiles(System.Web.Mvc.FormCollection)">
            <summary>
            删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleFilesByFileId(System.Web.Mvc.FormCollection)">
            <summary>
            通过文件ID删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleFilesByFileVerId(System.Web.Mvc.FormCollection)">
            <summary>
            通过文件版本ID删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleFolder(System.Web.Mvc.FormCollection)">
            <summary>
            删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.IsUserCanDownLoad">
            <summary>
            判断用户是否能够下载,小于等于0不能下载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetFileThumbPicPath(System.String)">
            <summary>
            批量设置文档缩略图地址
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            权限验证
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Action执行之前
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Action执行之后
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>
            Result执行之前
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>
            Result执行之后
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePageToPdf">
            <summary>
            将页面导出成为PDF文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ImportJsonInfoToDataBase(System.Web.Mvc.FormCollection)">
            <summary>
            将JSON数据导入数据库
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReSetTableTreeKey(System.String)">
            <summary>
            重置树形表中的4个关键属性
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReSetSubNodeTreeKey(System.String,System.String,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            重置树形表的4个关键字
            </summary>
            <param name="tbName"></param>
            <param name="primaryKey"></param>
            <param name="curNode"></param>
            <param name="allDataList"></param>
            <param name="newKeyDic"></param>
            <param name="newLvDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMsg">
            <summary>
            消息发送
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReSetTableDataToString(System.String)">
            <summary>
            将数据库表的所有字段重置为字符串型
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCurDBAllTableJson">
            <summary>
            获取当前数据库所有表信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReSetSysLogTime(System.String)">
            <summary>
            重置日志日期时间
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReSetColumnToInt(System.String,System.String)">
            <summary>
            重置任意表的任意字段为Int类型
            </summary>
            <param name="tbName"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportDataBaseToFile(System.String,System.String)">
            <summary>
            将数据库中数据导出为文件
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.OutputFile(System.String,System.String,System.String)">
            <summary>
            将html表格导出成为Excel
            </summary>
            <param name="FileType"></param>
            <param name="FileName"></param>
            <param name="ExcelContent"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopeGeneralDirectory(System.String)">
            <summary>
            复制通用目录
            </summary>
            <param name="bookTask"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveTaskAccept(System.Web.Mvc.FormCollection)">
            <summary>
            保存系统任务
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CreateExcelByHtmlCode(System.String,System.String,System.String)">
             <summary>
            创建表格
             </summary>
             <param name="htmlCode"></param>
             <param name="sheetName"></param>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetFile(System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">下载时的默认文件名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetExcelFile(System.String,System.String)">
            <summary>
            下载Excel文件
            </summary>
            <param name="fullFileName"></param>
            <param name="downloadName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetEditType">
            <summary>
            批量设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CascadeUpdaeDeliverProperty">
            <summary>
            批量设置更新模板改动
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PDFImport(System.String,System.String,System.String)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReadLogFile(System.String,System.String)">
            <summary>
            读取日志文件
            </summary>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.RecoveryLogData(System.String,System.String,System.String)">
            <summary>
            恢复日志数据(直接操作数据库)
            </summary>
            <param name="tbName">表名</param>
            <param name="jsonUrl">文件地址</param>
            <param name="type">恢复类型 Ins:插入,Del:删除</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportUserVisitLogToExcel">
            <summary>
            将用户访问系统的相关数据导出Excel文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SysLogRollback(System.String)">
            <summary>
            根据行为日志回滚
            </summary>
            <param name="behaviorId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetLogRecoveryFile(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.String)">
            <summary>
            从系统日志中生成恢复数据的JSON
            </summary>
            <param name="dataLogList">数据日志</param>
            <param name="logType">日志类型</param>
            <param name="dirUrl">保存地址</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchRecoveryLogData(System.String,System.Int32)">
            <summary>
            批量恢复日志数据
            </summary>
            <param name="dirUrl">日志数据所在文件</param>
            <param name="type">日志类型,3为新增,则需要删除,5为删除,则需要新增</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InsertLogData(System.String,System.String)">
            <summary>
            插入日志文件中被删除的数据
            </summary>
            <param name="tbName"></param>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteLogData(System.String,System.String)">
            <summary>
            删除日志文件中新增加的数据
            </summary>
            <param name="tbName"></param>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportSSMatInfoToExcel">
            <summary>
            导出三盛材料库信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportZHHYMatInfoToExcel">
            <summary>
            导出中海宏扬材料库信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportZHTZMatInfoToExcel">
            <summary>
            导出中海投资材料库信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportXHMatInfoToExcel">
            <summary>
            导出旭辉材料库信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportMatInfoToExcel">
            <summary>
            建设中(通用材料库导出)
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportMatCategoryToExcel">
            <summary>
            导出材料库目录
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ImprotMatInfoToDatabase">
            <summary>
            将制定位置Excel的材料数据导出到数据表
            </summary>
            <param name="fileUrl"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ConvertToPageJson(Yinhe.ProcessingCenter.InvokeResult)">
            <summary>
             将InvokeResult转成PageJson对象
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSelectElementIdArray(System.String)">
            <summary>
             将InvokeResult转成PageJson对象
            </summary>
            <param name="formValueString"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportToExcel(System.String,System.String,System.String)">
            <summary>
            将html表格导出成为Excel
            </summary>
            <param name="FileType"></param>
            <param name="FileName"></param>
            <param name="ExcelContent"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DownloadFileZHTZ(System.String,System.String)">
            <summary>
            中海投资工作函的PDF导出
            </summary>
            <param name="path"></param>
            <param name="name"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckResult(System.String,System.String)">
            <summary>
            审核成果
            </summary>
            <param name="retId">成果Id</param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveResultItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存成果配置单中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveResultItemMatRelInfoLF(System.Web.Mvc.FormCollection)">
            <summary>
            联发保存成果配置单中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveStandardResultUnit(System.Web.Mvc.FormCollection)">
            <summary>
            保存成果与户型的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveStandardResultUnitNew(System.Web.Mvc.FormCollection)">
            <summary>
            保存成果与户型的关联 (新，修改户型保存的结构)
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveResultMatRelInfo">
            <summary>
            保存成果与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCategoryTree(System.String,System.String,System.String)">
            <summary>
            获取目录树形
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="ddirId">目录树Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCatModelTree">
            <summary>
            获取目录模板
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CatModelInsert">
            <summary>
            插入目录模板
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveOutProjInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存外部项目基本信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveStandardConstructInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存构造库基本信息和关联项目
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveResultItemMatRelInfoXC(System.Web.Mvc.FormCollection)">
            <summary>
            保存成果配置单中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormInfoDict">
            <summary>
            产品决策各部门数据表及相关信息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPropertyInfos(System.String,System.String)">
            <summary>
            产品配置业态的信息
            </summary>
            <param name="projId">项目Id</param>
            <param name="treeId">配置Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="propertyId"></param>
            <param name="listId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.isConfirm(System.String)">
            <summary>
            是否确认暂存数据
            </summary>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCEOComment(System.Int32,System.Int32)">
            <summary>
            获取决策意见信息
            </summary>
            <param name="typeId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InsertCEOComment(System.Int32,System.Int32,System.String)">
            <summary>
            新增总裁意见
            </summary>
            <param name="typeId"></param>
            <param name="versionId"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveConflictPolicyInfo">
            <summary>
            保存冲突决策信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSellDetails">
            <summary>
            保存销售计划
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveReapyDetails">
            <summary>
            保存还款计划信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteVersion(System.String)">
            <summary>
            删除版本
            </summary>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetTemplateDir(System.String)">
            <summary>
            决策数据模板目录
            </summary>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CreateVersion(System.String,System.String,System.Int32)">
            <summary>
            创建决策版本
            </summary>
            <param name="isOriginal">是否初始版本</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UpdateFinance">
            <summary>
            保存财务融资信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetDirTree(System.String,System.String,System.String)">
            <summary>
            获取目录树形
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="ddirId">目录树Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveOpinion(System.String,System.String,System.String)">
            <summary>
            保存决策意见
            </summary>
            <param name="cellOpinions">细项意见</param>
            <param name="formOptions">表单意见</param>
            <param name="versionId">版本号</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveFeedback(System.String,System.String,System.String,System.String)">
            <summary>
            保存决策意见
            </summary>
            <param name="tbName"></param>
            <param name="pkName"></param>
            <param name="pkValue"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SubVerify(System.String,System.String,System.String)">
            <summary>
            表单数据提交审核
            </summary>
            <param name="dirName">目录表名称</param>
            <param name="projId">项目Id</param>
            <param name="versionId">版本Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSavePolicyData(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            批量保存产品决策数据
            </summary>
            <param name="tbName">目录表名</param>
            <param name="dataSource">数据格式 </param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeFormStatus(System.String,System.String,System.String,System.String)">
            <summary>
            修改表单状态
            </summary>
            <param name="dirName">表单下目录Id</param>
            <param name="projId">项目Id</param>
            <param name="versionId">版本Id</param>
            <param name="status">要修改的标准状态</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddOAPolicyMsg(System.String,System.String,System.String)">
            <summary>
            添加推送消息
            </summary>
            <param name="dirName"></param>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetVersionOrder(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UpdateOAPolicyMsg(System.String,System.String,System.String)">
            <summary>
            修改成已经审核
            </summary>
            <param name="dirName"></param>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.LogPolicyVerify(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            记录决策审核信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLog(System.String,System.String,Yinhe.ProcessingCenter.DataRule.StorageData,System.String,System.String)">
            <summary>
            保存决策日志日志
            </summary>
            <param name="tbName">表名称</param>
            <param name="tbKey">主键名称</param>
            <param name="storage"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLinkLog(System.String,System.String)">
            <summary>
            修改决策联动日志 将旧数据状态值置为2
            </summary>
            <param name="tbName">表名称</param>
            <param name="tbKey">主键名称</param>
            <param name="storage"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CanLog(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String,System.Boolean)">
            <summary>
            判断是保存日志
            </summary>
            <param name="old"></param>
            <param name="update"></param>
            <param name="tbKey"></param>
            <param name="hasLog"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.IssuseTemplateVersion(System.String)">
            <summary>
            通知已有项目模板有改动
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjVersionIdAndOrder(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            获取最新版本及版本序号
            </summary>
            <param name="versionList"></param>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSaveDir">
            <summary>
            批量更新目录属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSaveHouseAttr">
            <summary>
            批量更新竞品楼盘属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.deleteHouse">
            <summary>
            删除楼盘及楼盘属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPropertyJson">
            <summary>
            获取业态json格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePropertyJson">
             <summary>
            保存项目业态json格式
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSaveProjectPrice">
            <summary>
            保存项目定价建议内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveGeneralDir">
            <summary>
            保存土地或项目的目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveVersion(System.Web.Mvc.FormCollection)">
            <summary>
            保存版本
            </summary>
            <param name="saveFormCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjCopyDir(System.Web.Mvc.FormCollection)">
            <summary>
            保存项目复制目录信息及内容
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetFileRelCount">
            <summary>
            获取文件个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopyBakData">
            <summary>
            复制备份字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SubmitFormAudit">
            <summary>
            提交产品定位 情报库的表单审核
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubmitFormAuditData(System.String,System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            返回提审数据
            </summary>
            <param name="tableName">表单名</param>
            <param name="typeId">//消息类型Id：1情报库，2产品定位，3产品决策</param>
            <param name="landInfo">地块信息</param>
            <param name="projInfo">项目信息</param>
            <param name="entity">表单数据</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AuditFromTable">
            <summary>
            审核表单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAuditFormTableData(System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="ddirId"></param>
            <param name="tableName"></param>
            <param name="auditStatus">审核状态 1：通过 2 未通过</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAuditUrl(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            返回审核地址
            </summary>
            <param name="typeId">审核类型 1：地块审核 2 项目审核 3：产品决策审核</param>
            <param name="tableName">审核表单的名称</param>
            <param name="keyValue">地块或项目的Id</param>
            <param name="ddirId">表单Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetDataColumnValue(System.Data.DataRow,System.Int32)">
            <summary>
            获取表格某行某列的值
            </summary>
            <param name="dr"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetValueIdDic(System.String)">
            <summary>
            获取类型表ValueId字典
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddSaleInfo">
            <summary>
            编辑保存地铁图对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CreateExcel(System.String,System.String,System.String)">
            <summary>
             创建Excel文件
            </summary>
            <param name="htmlCode"></param>
            <param name="sheetName"></param>
            <returns>生成文件的路径</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialBrand(System.Web.Mvc.FormCollection)">
            <summary>
            保存材料品牌
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialSupplier(System.Web.Mvc.FormCollection)">
            <summary>
            保存材料供应商
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialList">
            <summary>
            创建材料清单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.EditMaterialList">
             <summary>
            编辑材料清单
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.EditMaterialListZHTZ">
             <summary>
            编辑材料清单
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteMaterialList">
             <summary>
            删除材料清单
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MoveCatListSave(System.Web.Mvc.FormCollection)">
             <summary>
            批量移动基类保存方法
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddMaterialList">
             <summary>
            编辑材料清单
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopyMaterialList(System.Web.Mvc.FormCollection)">
             <summary>
            创建材料清单并并复制材料
             </summary>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportMatItemsNPOI">
            <summary>
            材料清单导出
            </summary>
            <param name="projId">项目Id</param> 
            <param name="type">项目类型 1为项目库，2为外部材料库</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckNameSave">
            <summary>
            判断重名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCapWords(System.String)">
            <summary>
            接收字符串，输出其中的中文首字母，用于材料编号自动生成
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckSupplierModel(System.String,System.String)">
            <summary>
            检查是否有相同的材料类型
            </summary>
            <param name="checkStr">材料编号</param>
            <param name="matId">材料Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSupplierInfo(System.String)">
            <summary>
            查找供应商信息
            </summary>
            <param name="supplierId">供应商Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MatFirstCatMoveOrder(System.String,System.String)">
            <summary>
            QX改变材料第一级类目的顺序，此处只考虑的上下移动一级情况
            </summary>
            <param name="moveId">要移动的id</param>
            <param name="type">移动的类型，pre：上移；next：下移；</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMaterialXC(System.Web.Mvc.FormCollection,System.String,System.String,System.String,System.String)">
            <summary>
            新城保存材料
            </summary>
            <param name="saveForm">上传表单</param>
            <param name="prices">价格列表</param>
             <param name="retIds">关联的工艺工法</param>
             <param name="projIds">关联的项目</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BaseCatExtendIsUse(System.Int32)">
            <summary>
            判断扩展属性是否被材料引用
            </summary>
            <param name="extendId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetMaterialCategoryTree(System.String,System.String)">
            <summary>
            获取类目目录树形
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="ddirId">目录树Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSupplierQX(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DesignSupplierDataInfo(System.Int32,System.String)">
            <summary>
            返回设计师数据操作列表
            </summary>
            <param name="supplierId"></param>
            <param name="designers"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPhotoHtml(System.Int32)">
            <summary>
            刷新头像
            </summary>
            <param name="designerId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetDeisnerPhotoPath(System.String)">
            <summary>
            获取设计人员头像
            </summary>
            <param name="designerId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveDocPackage(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetFilePackageInfo">
            <summary>
            图纸包单个下载与批量下载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCatThree">
            <summary>
            获取分类下的子集分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubProject">
            <summary>
            获取工程下的子工程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DownLoadCount(System.Int32)">
            <summary>
            记录图纸包的下载量
            </summary>
            <param name="id">图纸包Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportCat">
            <summary>
            导出目录模板
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjCatModelTree">
            <summary>
            获取目录模板
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjCatModelInsert">
            <summary>
            载入目录模板
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePacekageFiles(System.String,System.String,System.String)">
            <summary>
            保存设计单位评价关联图纸包文件
            </summary>
            <param name="packageId">packageIds</param>
            <param name="queryStr">queryStr</param>
            <param name="query">tbName</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetUserCom_ZHTZ(System.String)">
            <summary>
            获取用户所属部门,保存工作函同时保存发文人所属城市公司id
            </summary>
            <param name="userId">用户id</param>
            <param name="nodeLevel">部门层级</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetMailDocNum(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            设置工作函发文编号
            </summary>
            <param name="mail">工作函</param>
            <param name="sendUserId">发送用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetMailDocNum(MongoDB.Bson.BsonDocument,System.String,System.Boolean)">
            <summary>
            设置工作函发文编号 重载（如果工作函的发文类别（sort）改变，需要改变发文编号）
            </summary>
            <param name="mail">工作函</param>
            <param name="sendUserId">发送用户Id</param>
            <param name="isChangeSort">是否改变类别</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailGroupUserRelation(System.Int32,System.String)">
            <summary>
            保存工作组人员名单
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailGroupAndUserRelation(System.Web.Mvc.FormCollection)">
            <summary>
            保存工作组
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailAndRelations(System.Web.Mvc.FormCollection)">
            <summary>
            保存工作信函
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSendBack(System.Web.Mvc.FormCollection)">
            <summary>
            保存回复的邮件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveReSendBack(System.Web.Mvc.FormCollection)">
            <summary>
            保存转发的邮件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopyMail">
            <summary>
            工作信函复制
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailRefUserByType(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            通过人员类别分别保存分组外人员和组内人员
            </summary>
            <param name="mailId"></param>
            <param name="userIds"></param>
            <param name="userGroupIds"></param>
            <param name="userType">userType= 0：发件人1：收件人 2：抄送人 3:抄报人 4:被传阅人</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailRefUser(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            保存邮件关联人列表
            </summary>
            <param name="mailId"></param>
            <param name="userIds"></param>
            <param name="userType">userType= 0：发件人1：收件人 2：抄送人 3:抄报人 4:被传阅人</param>
            <param name="isFromGroup">是否是从群组中获取</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailRefGroup(System.Int32,System.String,System.Int32)">
            <summary>
            保存邮件关联组
            </summary>
            <param name="mailId"></param>
            <param name="groupIds"></param>
            <param name="groupType"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRefGroupUsers(System.Int32,System.String)">
            <summary>
            提取出组id列表对应的人员名单
            </summary>
            <param name="mailId"></param>
            <param name="groupIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveApprovalUser(System.Int32,System.Int32)">
            <summary>
            单独保存工作信函审核人
            </summary>
            <param name="mailId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSignUser(System.Int32,System.Int32)">
            <summary>
            单独保存工作信函会签人
            </summary>
            <param name="mailId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveMailTime">
            <summary>
            保存工作信函通过审核或会签时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MailTOPDF">
            <summary>
            PDF导出
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MailTOPDFNoLogin">
             <summary>
            不登陆 PDF导出
             </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMailForTask">
            <summary>
            根据工作信函id发送邮件给收文人、抄报和抄送人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMailToMailUser">
            <summary>
            根据工作信函id发送邮件给收文人、抄报和抄送人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMailToMailUserZHHY">
            <summary>
            根据工作信函id发送邮件给收文人、抄报和抄送人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMail(System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Boolean)">
            <summary>
            异步发送邮件
            </summary>
            <param name="idList">收件人id</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="fileName">邮件附件</param>
            <param name="isBodyHtml">邮件内容是否html格式</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SendMail(System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.Boolean)">
            <summary>
            异步发送邮件
            </summary>
            <param name="idList">收件人id</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="fileName">邮件附件</param>
            <param name="isBodyHtml">邮件内容是否html格式</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCon">
            <summary>
            连接数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetData(System.String,System.String)">
            <summary>
            获取DataSet数据集
            </summary>
            <param name="sqlStr">查询语句</param>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DataOperate">
            <summary>
            操作数据，插入Mongo中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLineItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存产品线中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetLineValCombination(System.Int32,System.Int32)">
            <summary>
            获取产品线价值树值组合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetLineValCombinationNew(System.Int32,System.Int32)">
            <summary>
            获取产品线价值树值组合（新）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetXHSubLandIndexExcel">
            <summary>
            将XH土地子地块信息导出Excel
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSNHQSubLandIndexExcel">
            <summary>
            将华侨城土地子地块信息导出Excel
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProductLineAndInit(System.Web.Mvc.FormCollection)">
            <summary>
            保存产品线加初始化土地客群组合
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveQXProductSeries(System.Web.Mvc.FormCollection)">
            <summary>
            保存乔鑫产品系列
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetSeriesProject(System.String,System.String)">
            <summary>
            设置项目所属的系列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetSeriesHouseType(System.String,System.String,System.String)">
            <summary>
            设置项目所属的系列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSeriesItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存系列,价值项值与材料的关联 QX
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetVIRetListHtml(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            根据目录Id加载图文档列表,当前节点
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopyProductSeriesValTree">
            <summary>
            复制产品系列价值树
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExportConfigItemToTemplate(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            导出产品系列配置项于模板
            </summary>
            <param name="seriesId"></param>
            <param name="treeId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ImportConfigItemToTemplate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            导出产品系列配置项
            </summary>
            <param name="seriesId"></param>
            <param name="treeId"></param>
            <param name="itemType"></param>
            <param name="templateId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveVIDirectory(System.Web.Mvc.FormCollection)">
            <summary>
            XC保存产品系列VI，目录
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePSHouseResult(System.Web.Mvc.FormCollection)">
            <summary>
            XC保存户型成果
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSeriesValType(System.Web.Mvc.FormCollection)">
            <summary>
            保存风格（组合）
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SDGetNumber">
            <summary>
            XC保存系列图纸生成编号
            </summary>
            <param queryStr="">搜索条件以，隔开</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveXCSeriesItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存系列,价值项值与材料的关联 
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeToMat">
            <summary>
            保存系列,价值项值与材料的关联 
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddDeviceProject">
            <summary>
            编辑保存地铁图对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckFileExt(System.String,System.String)">
            <summary>
            判断文件后缀的合法性
            </summary>
            <param name="fileName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveData">
            <summary>
            保存文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSummarySheetName(System.Collections.Generic.List{System.String})">
            <summary>
            获取汇总表的sheetName
            </summary>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetDataTable(System.String)">
            <summary>
            获取要插入数据库的dataTable 
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ImportData(System.String)">
            <summary>
            导入数据
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPassedMiliSecond(System.DateTime)">
            <summary>
            获取时间间隔，毫秒为单位
            </summary>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRowCount(System.Data.DataTable)">
            <summary>
            获取有效行数
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InitBrandDic">
            <summary>
            初始化品牌类型字典key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InitAttrValueDic">
            <summary>
            初始化属性类型值字典 key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InitTable(System.String)">
            <summary>
            初始化数据库中品牌表
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.WriteCategory(System.Data.DataTable,System.String)">
            <summary>
            写目录
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.WriteProjectAtt(System.Data.DataTable,System.String)">
            <summary>
            写入项目属性
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAttCatPosition(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            获取某一行属性对应的设备类型Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCatRowIndex(System.Int32,System.Int32)">
            <summary>
            根据position获取在表格中的行索引
            </summary>
            <param name="catId"></param>
            <param name="rowCount"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPosition(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算某一单元格对应的Position值
            </summary>
            <param name="rowCount"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetParentPosition(System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取某个节点的父节点position
            </summary>
            <param name="dt"></param>
            <param name="rowCount"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetIdNameDic(System.String)">
            <summary>
            获取品牌或者属性类型字典  key:Id value:名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CountBrandOrType(System.String,System.String)">
            <summary>
            统计品牌或者设备类型
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SortDicById(System.Collections.Generic.Dictionary{System.String,System.Int32},System.String)">
            <summary>
            根据名称对应ID对字典排序
            </summary>
            <param name="dic"></param>
            <param name="type"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetExistDic">
            <summary>
            获取有，无，不详字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CountExist(System.String)">
            <summary>
            统计某设备有无不详信息
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetMax(System.Int32,System.Int32[])">
            <summary>
            获取最大值
            </summary>
            <param name="n1"></param>
            <param name="numbers"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjectDevices">
            <summary>
            获取在Device_attribute中有记录的设备类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjectAreas">
            <summary>
            获取所有的项目地区
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjectBuildingTypes">
            <summary>
            获取所有楼房类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjectList(System.String,System.String)">
            <summary>
            根据地区和房型或取项目列表
            </summary>
            <param name="area"></param>
            <param name="bType"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetParentObjJson(System.Int32)">
            <summary>
            获取类型对象的父级JSON列表
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjAttrObj(System.Web.Mvc.FormCollection)">
            <summary>
            保存属性对象
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveAttrType(System.Web.Mvc.FormCollection)">
            <summary>
            保存属性对象
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjNodeTreeXML(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取项目节点树形XML
            </summary>
            <param name="tbName"></param>
            <param name="curNodeId"></param>
            <param name="typeObjId"></param>
            <param name="itself"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjNodeTreeXMLByType(System.String,System.String,System.String,System.Int32)">
            <summary>
            根据类型内标获取节点树,不包含本身
            </summary>
            <param name="tbName"></param>
            <param name="curNodeId"></param>
            <param name="typeObjIds"></param>
            <param name="maxLv"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjNodeTreeXMLByLevel(System.String)">
            <summary>
            逐级加载节点树
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAllAttrJsonByObjId(System.String)">
            <summary>
            获取属性类型下所有属性
            </summary>
            <param name="attrObjId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetUserNodePurviewHD(System.Int32)">
            <summary>
            获取用户对应节点的权限
            </summary>
            <param name="userId"></param>
            <param name="nodeId"></param>
            <returns>字典key为对应节点Id,字典val的List为对应的权限(1:查看,2:编辑)</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjNodeExportTemplate(System.Int32,System.String)">
            <summary>
            将项目节点导出至模板
            </summary>
            <param name="curNodeId"></param>
            <param name="typeObjIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjNodeImportTemplate(System.Int32,System.Int32)">
            <summary>
            项目节点由模板中导入
            </summary>
            <param name="curNodeId"></param>
            <param name="typeObjIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjNodeIndexToVersion(System.Int32,System.String,System.String)">
            <summary>
            保存节点指标版本
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetProjNodeFileTag(System.String,System.String)">
            <summary>
            设置文档标签
            </summary>
            <param name="fileIds"></param>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FruitPreviewMode(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            成果预览模式选择
            </summary>
            <param name="projResId"></param>
            <param name="viewType"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReferAttach(System.String)">
            <summary>
            附件引用到任务书内容里面
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PageTemplates">
            <summary>
            模板展示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPageContent(System.Int32)">
            <summary>
            获取页面内容
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPageImage(System.Int32)">
            <summary>
            获取页面快照路径
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveBookTaskTemplate">
            <summary>
            保存任务书模板
            </summary>
            <param name="bookTask"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.LoadPageTemplate(System.Int32,System.Int32,System.Int32)">
            <summary>
            载入模板
            </summary>
            <param name="pageId"></param>
            <param name="type"></param>
            <param name="refPageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveBookTask">
            <summary>
            保存任务书模板
            </summary>
            <param name="bookTask"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteBookTask(System.Int32)">
            <summary>
            任务书或模板删除
            </summary>
            <param name="bookId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPatternJson">
            <summary>
            获取业态json格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPageTempContent(System.Int32)">
            <summary>
            获取草稿
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePageContent(System.Int32,System.String,System.Int32,System.String)">
            <summary>
            保存页面内容
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPageMark">
            <summary>
            获取书签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FindBookMarkByPageId(System.Int32)">
            <summary>
            通过页面ID获取书签
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FindBookMarkByBookId(System.Int32)">
            <summary>
            通过任务书ID获取书签
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PageMarkEdit(System.Nullable{System.Int32})">
            <summary>
            书签编辑
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelPageMark(System.Int32)">
            <summary>
            标签删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UpdateBookPage">
            <summary>
            编辑页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelBookPage">
            <summary>
            删除页面
            </summary>
            <param name="matCatId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetBookTask">
            <summary>
            获取任务书
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetBookPage">
            <summary>
            获取页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MoveBookPage">
            <summary>
            移动目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CopyBookPage">
            <summary>
            复制目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SearchResult">
            <summary>
            获取搜索后结果的人员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.StartBookPageXml">
            <summary>
            类型树数据获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AsynBookPageXml">
            <summary>
            类型树数据获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveImageQX">
            <summary>
            侨鑫xhEditor Ajax文件上传
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteProjRetRef">
            <summary>
            批量删除版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteBodyVersion">
            <summary>
            批量删除版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.RecoveryBodyVersion">
            <summary>
            恢复到某一版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddBookPage">
            <summary>
            添加页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjectInfo(System.Web.Mvc.FormCollection)">
            <summary>
            旭辉保存项目信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickCreateProject(System.Web.Mvc.FormCollection)">
            <summary>
            中海弘扬保存项目信息，默认载入经济技术指标
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjInfoNew(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CreateDefaultPorjectRole(System.String,Yinhe.ProcessingCenter.InvokeResult)">
            <summary>
            为项目创建角色创建默认角色
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <param name="tableName">XH_ProductDev_Area XH_ProductDev_City XH_DesignManage_Engineering XH_DesignManage_Project</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjectInfoZHHY(System.Web.Mvc.FormCollection)">
            <summary>
            中海保存项目信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetEpsStructureJson">
            <summary>
            获取EPS结构的JSON数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeProjectCityId">
            <summary>
            旭辉专用  批量修改engId下项目所属城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetCityJson(System.String)">
            <summary>
            获取有权限的城市列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetTaskListByNodeTypeId">
            <summary>
            取出一级开发下的nodeType的任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePlanInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存项目信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjPlan(System.Int32,System.Int32)">
            <summary>
            返回当期项目其他计划修改首页显示字段
            </summary>
            <param name="planId"></param>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.TaskList">
            <summary>
            根据分项Id获取任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickSaveTaskContractFree">
            <summary>
            快速创建任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickCreateTask">
            <summary>
            快速创建任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PatchSyncFormula(System.String,System.String,System.Int32,System.String)">
            <summary>
            设置公式
            </summary>
            <param name="bllFormula"></param>
            <param name="strOperate"></param>
            <param name="projId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SyncFormulaDate(Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaBll,System.String)">
            <summary>
            递归同步日期
            </summary>
            <param name="bllFormula"></param>
            <param name="taskId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FormulaEdit">
            <summary>
            添加、编辑公式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteFormula">
            <summary>
            清空公式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSetTaskOwner">
            <summary>
            批量设置任务负责人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangePlanStatus(System.Int32,System.Nullable{Yinhe.ProcessingCenter.ProjectPlanStatus},System.String)">
            <summary>
            改变计划状态
            </summary>
            <param name="planId"></param>
            <param name="status"></param>
            <param name="reason"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ValidatePlanStatus(MongoDB.Bson.BsonDocument,Yinhe.ProcessingCenter.ProjectPlanStatus)">
            <summary>
            验证计划状态切换是否合法
            </summary>
            <param name="plan"></param>
            <param name="nextStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteTask">
            <summary>
            任务批量删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRelationType(System.String)">
            <summary>
            获取技术关系类型
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickSaveTaskRelation">
            <summary>
            快速保存技术关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CommonSaveTaskRelation">
            <summary>
            保存任务关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeDateBgColor(System.Int32)">
            <summary>
            设置任务开始，结束时间的背景色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.HasIncompleteTask(System.Nullable{System.Int32},System.Nullable{Yinhe.ProcessingCenter.ProjectPlanStatus})">
            <summary>
            检查计划下面是否存在未完成的任务
            </summary>
            <param name="planId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.TaskCIlistImport">
            <summary>
            任务配置单价值项导入
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjCIlistImport">
            <summary>
            项目配置单价值项导入
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjCIlistImportNew">
            <summary>
            项目配置单价值项导入（新）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjectCIlist">
            <summary>
            保存产品配置清单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProjectCIList(System.Int32,System.Int32)">
            <summary>
            获取某个项目下的配置清单列表
            </summary>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveTaskCIItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存任务配置单中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjCIItemMatRelInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存项目配置单中,价值项值与材料的关联
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveTaskInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.projTaskList(System.Int32)">
            <summary>
            获取任务节点
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DecisionPointList">
            <summary>
            决策点数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPointStatus(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            获取决策点状态
            </summary>
            <param name="secdPlanId"></param>
            <param name="pointId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveDecisionPoint">
            <summary>
            添加决策点关联
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveNewDecisionPoint">
            <summary>
            添加决策点关联
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DecisionPointTask(System.Int32,System.Int32)">
            <summary>
            获取地铁图决策点关联任务
            </summary>
            <param name="id"></param>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DecisionNewPointTask(System.Int32)">
            <summary>
            获取地铁图决策点关联任务
            </summary>
            <param name="id"></param>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InitialPlanFormExpLib">
            <summary>
            从经验库载入计划
            </summary>
            <param name="id">经验库Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickyCreatePlan">
            <summary>
            从经验库载入计划,添加计划信息， 计划负责人，负责人专业，快速创建计划
            </summary>
            <param name="id">经验库Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveAsExpLib">
            <summary>
            将计划设为模板
            </summary>
            <param name="id">经验库Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ExperienceDelete(System.Int32)">
            <summary>
            保存经验库编辑
            </summary>
            <param name="expLibObj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.HasExistExpLibObj">
            <summary>
            查看模板名称是否出错
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PlanAndTaskList">
            <summary>
            根据分项Id获取任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ModifyExpLibDetail(System.Int32)">
            <summary>
            初始化并跳转到计划编制页面
            </summary>
            <param name="id">经验库Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.NewTaskList">
            <summary>
            根据分项Id获取任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveFlowStepUserRelation">
            <summary>
            保存流程步骤
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjFlowPositionUser">
            <summary>
            保存项目流程岗位人员关联
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ResetFlowInstance">
            <summary>
            重置流程模板，删除还未完成的流程实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ReplaceUncompleteTaskBusFlow">
            <summary>
            流程模板替换,将除了进行中的流程对象替换为选中的模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CascadeUpdateCopyTaskFlow">
            <summary>
            级联更新模板中的任务对应载入的任务的流程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ResetTaskFlow">
            <summary>
            重置还未完成的流程关联
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ResetTaskInstance">
            <summary>
            删除任务还未完成的流程实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAllTran">
            <summary>
            获取所有事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveStepTranEdit">
            <summary>
            保存事务步骤编辑
            </summary>
            <param name="bookTask"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetEnSalvedStep">
            <summary>
            下步骤实例流程人员控制,将没选中的置为无效
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SetResetCSignStepStep">
            <summary>
            启动二次会签 2014.2.12添加2次会签功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelFlowStepUserRelation">
            <summary>
            删除流程步骤人员
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.StartWorkFlow">
            <summary>
            发起流程
            </summary>
            <returns></returns>                                         
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddExtensionAttr(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            为流程实例新增扩展属性值
            </summary>
            <param name="flow"></param>
            <param name="attrVals"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DoAction">
            <summary>
            执行动作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ForceCompleteStep">
            <summary>
            强制结束会签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ForceCompleteInstance">
            <summary>
            强制结束流程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CancelInstance">
            <summary>
            取消流程审批
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ForceNoticeUser">
            <summary>
            过期流程信息提醒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ChangeSupState">
            <summary>
            修改供应商状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteTaskInstance">
            <summary>
            删除任务流程实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.TurnOnToUser(System.Int32)">
            <summary>
            2013.12.2 新增转办直接替换执行人
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CirculateComplete(System.Int32)">
            <summary>
            阅读闭确认
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructExportTemplate(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            项目经济技术指标导出成模板
            </summary>
            <param name="engId">导出的工程Id</param>
            <param name="itemTb">项的表名</param>
            <param name="columnTb">列的表名</param>
            <param name="templateTb">模板的表名</param>
            <param name="dataStr">模板记录的附加数据</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructExportTemplateSN(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            项目经济技术指标导出成模板
            </summary>
            <param name="engId">导出的工程Id</param>
            <param name="itemTb">项的表名</param>
            <param name="columnTb">列的表名</param>
            <param name="templateTb">模板的表名</param>
            <param name="dataStr">模板记录的附加数据</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructImportTemplateSN(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            项目经济技术指标由模板导入
            </summary>
            <param name="templateId">要导入的模板Id</param>
            <param name="engId">要导入的工程Id</param>
            <param name="isAdd">是否追加,默认0为覆盖1为追加</param>
            <param name="itemTb">项的表名</param>
            <param name="columnTb">列的表名</param>
            <param name="templateTb">模板的表名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructImportTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            项目经济技术指标由模板导入
            </summary>
            <param name="templateId">要导入的模板Id</param>
            <param name="engId">要导入的工程Id</param>
            <param name="isAdd">是否追加,默认0为覆盖1为追加</param>
            <param name="itemTb">项的表名</param>
            <param name="columnTb">列的表名</param>
            <param name="templateTb">模板的表名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddProjectSupplierRelation">
            <summary>
            添加项目设计供应商
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QX_AddProjectSupplierRelation">
            <summary>
            添加项目设计供应商
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QX_AddEngSupplierRelation">
            <summary>
            添加地块设计供应商
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjSupInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存基本信息及合作部门 QX
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetEngProjectTreeXML(System.String,System.String,System.Int32)">
            <summary>
            工程项目树形XML
            </summary>
            <param name="engTb"></param>
            <param name="projTb"></param>
            <param name="engId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetLandProjectTreeXML(System.String,System.String,System.Int32)">
            <summary>
            工程项目树形XML
            </summary>
            <param name="engTb"></param>
            <param name="projTb"></param>
            <param name="engId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetEngProjectSubTreeXMLt(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            获取项目子树XML
            </summary>
            <param name="projList"></param>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjTargetValue(System.String,System.String,System.String)">
            <summary>
            保存项目指标值
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddSubWayMap">
            <summary>
            编辑保存地铁图对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleteSubWayMap(System.Int32)">
            <summary>
            删除地铁图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubwayMapList">
            <summary>
            获取脉络图列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetData">
            <summary>
            获取脉络图列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetBgImgList">
            <summary>
            获取脉络图背景
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetEditDt(System.Int32)">
            <summary>
            获取脉络图详细xml
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubwayMapDetail(System.Int32)">
            <summary>
            获取脉络图信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSubwayMap">
            <summary>
            保存地铁图对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRooNode(System.String)">
            <summary>
            辅助方法用于根据xml字符串 返回对应Xml根对象
            </summary>
            <param name="fileXMLStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            返回对应属性值
            </summary>
            <param name="XN"></param>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetIntAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            返回对应属性值
            </summary>
            <param name="XN"></param>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetDoubleAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            返回对应属性值
            </summary>
            <param name="XN"></param>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.HasValue(System.Xml.XmlNode,System.String)">
            <summary>
            是否有值
            </summary>
            <param name="pointNode"></param>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SavePushProjCaseInfo">
            <summary>
            保存项目文档的按钮推送信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.BatchSavePushProjCaseInfo">
            <summary>
            批量推送案例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DeleCaseFileRelations(System.Web.Mvc.FormCollection)">
            <summary>
            用于删除文件关联表的判断 若有推送则只删除关联 不删除文件表内容
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveDefineFileInfo(System.Web.Mvc.FormCollection)">
            <summary>
            批量保存
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveFlowInfo">
            <summary>
            保存流程模版信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveDesignChangeInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存变更单
            </summary>
            <param name="saveform"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveCommandInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存变更单
            </summary>
            <param name="saveform"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveDesignChangeStartTime(System.Int32)">
            <summary>
            保存变更单发起审批时间
            </summary>
            <param name="designChangeId">变更单ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DesignChange_AddCmdReadLog(System.Web.Mvc.FormCollection)">
            <summary>
            保存变更指令单阅读记录
            </summary>
            <param name="saveform"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveAcrossPlanTaskRelation">
            <summary>
            一二级关联联动,支持一个前置选多个后置 获知一个后置选择1个前置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveFlowStepUserCirculation">
            <summary>
            保存流程步骤
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveFlowStepCirculationFlowPosition">
            <summary>
            保存流程步骤
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetBusFlowPositionJson">
            <summary>
            获取岗位列表列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLandInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存数据库
            </summary>
            <param name="saveform"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLandProjInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存项目基本信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelLandProjInfo">
            <summary>
            删除项目基本信息及关联信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelLandInfo(System.Int32)">
            <summary>
            删除地块
            </summary>
            <param name="landId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjDocSetting(System.Web.Mvc.FormCollection)">
            <summary>
            保存分项资料库目录
            </summary>
            <param name="catCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.TaskListNew">
            <summary>
            根据分项Id获取任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickCreateTaskNew">
            <summary>
            快速创建任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveRecentProjEng(System.String,System.Int32,System.String)">
            <summary>
            保存最近浏览工程列表
            如果传入的工程名为空或0则返回最近浏览工程列表
            </summary>
            <param name="projEngId"></param>
            <param name="length"></param>
            <param name="sessionName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DesignChangeGetProjEng">
            <summary>
            通过地块id或项目id获取关联工程列表
            用于QX设计变更首页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MutilApprovalTaskAdd">
            <summary>
            快速创建多审批任务的隐藏子任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QuickSaveHiddenTaskFree">
            <summary>
            快速创建任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHHY_CanStartTask(System.String)">
            <summary>
            是否可以开始任务
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHHY_IsAllPreTaskFinished(System.String)">
            <summary>
            ZHHY判断当前任务前置任务是否都已经完成
            只有前置任务都完成了当前任务才能开始
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHHY_CanFinishTask(System.String)">
            <summary>
            ZHHY判断计划任务是否可以完成
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHHY_IsNotPointTask(System.String)">
            <summary>
            判断是否是非关键任务（关联地铁图）
            非关键节点可以自由开始完成
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHTZ_CanStartTask(System.String)">
            <summary>
            是否可以开始任务
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHTZ_CanFinishTask(System.String)">
            <summary>
            是否能结束任务
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHTZ_CanStartApproval(System.String)">
            <summary>
            是否能发起审批
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHTZ_IsPreTaskFinish(System.String)">
            <summary>
            判断前置任务是否已经完成
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ZHTZ_IsTaskFileUploaded(System.String)">
            <summary>
            判断预定义交付物是否按要求上传
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.QX_GetEngProjectSubTreeXMLt(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            获取项目子树XML
            </summary>
            <param name="projList"></param>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DesignChangeTOPDF">
            <summary>
            设计变更PDF导出
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetItemTree(System.String,System.String,System.String,System.String)">
            <summary>
            获取目录树形
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="ddirId">目录树Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetLibInfo">
            <summary>
            获取库信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.InsertBuiltRole(System.String,System.String)">
            <summary>
            插入内置角色
            </summary>
            <param name="typeId">1:地块 2：项目</param>
            <param name="keyVlaue"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ImportProjOrLandRole(System.Int32,System.Int32,System.String,System.Int32)">
             <summary>
             插入项目或地块角色方案
             </summary>
            <param name="schemeId">项目地块方案</param>
             <param name="typeId">1:地块 2：项目</param>
             <param name="keyValue">项目或地块的Id</param>
             <param name="isDelete">是否删除旧导入的数据 1：删除 0或2 不删除 </param>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.JudgeIsHasScheme(System.String,System.String)">
            <summary>
            判断是否已经导入过角色方案
            </summary>
            <param name="keyValue">项目或地块的Id</param>
            <param name="landOrProj">1：地块，2：项目</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.RepairFileReltion(System.String)">
            <summary>
            三盛项目中文件上传 关联表 关联属性数据修复
            </summary>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.PeddingTaskList">
            <summary>
            代办获取接口  loginName  登陆名    type 0  涉及我的 1  我发起的 2 我审批的
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetEngineerList">
            <summary>
            获取工程列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.EngineerInfo">
            <summary>
            获取项目详细信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.EngineerList">
            <summary>
            获取工程列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetApproveLog">
            <summary>
            获得审批日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ModelConver(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            对象转换
            </summary>
            <param name="docList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveExtendRole(System.Web.Mvc.FormCollection)">
             <summary>
            创建地块项目扩展角色
             </summary>
             <param name="saveForm"></param>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRoleOrgUserData(System.String,System.Int32,System.String,System.String)">
            <summary>
            获取需要更新角色关联数据
            </summary>
            <param name="tbName">表名</param>
            <param name="roleId">角色Id</param>
            <param name="keyValues">关联数据的键值</param>
            <param name="key">关联数据的键名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetReloRightData(System.Int32,System.String)">
            <summary>
            获取角色项目地块权限
            </summary>
            <param name="roleId"></param>
            <param name="rightCode">格式模块Id_权限Id@模块Id_权限Id...</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveReloRight(System.Int32,System.String)">
            <summary>
            批量保存角色项目地块权限
            </summary>
            <param name="roleId"></param>
            <param name="rightCode">格式模块Id_权限Id@模块Id_权限Id...</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelRole(System.Int32)">
            <summary>
            删除角色
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddSchemeRoleRight(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="roleId"></param>
            <param name="modulCode">模块代码</param>
            <param name="operatingCode">权限代码</param>
            <param name="flag">0:删除 1：新增</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelSysProfessional(System.Int32)">
            <summary>
            删除系统专业
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelSysFileCategory(System.Int32)">
            <summary>
            删除系统文档类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelSysStage(System.Int32)">
            <summary>
            删除系统阶段
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelLandArea(System.Int32)">
            <summary>
            删除地块区域
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelLandCity(System.Int32)">
            <summary>
            删除地块城市
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckSysProfessionalIsUse(System.Int32)">
            <summary>
            核对系统专业是否被使用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckSysFileCategoryIsUse(System.Int32)">
            <summary>
            核对系统文档类型是否被使用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckSysStageIsUse(System.Int32)">
            <summary>
            核对系统专业是否被使用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckLandAreaIsUse(System.Int32)">
            <summary>
            核对区域是否被使用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CheckLandCityIsUse(System.Int32)">
            <summary>
            核对城市是否被使用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.AddProjectViewRight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.MoveSysProperty(System.Int32,System.Int32,System.Int32)">
            <summary>
            移动属性
            </summary>
            <param name="moveId">要移动的节点目标</param>
            <param name="toMoveId">移动到节点的地方</param>
            <param name="type">1：节点上方 2：节点下方</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.CreateChangeCommand(System.String,System.String,System.String)">
            <summary>
            宏扬重新生成指令单
            </summary>
            <param name="commandId">变更指令Id</param>
            <param name="designChangeId">设计变更Id</param>
            <param name="instanceId">流程Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelEvalContract(System.String,System.String)">
            <summary>
            删除评价关联的合同文件
            </summary>
            <param name="relId"></param>
            <param name="fileId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.UpdateTaskRelation(System.String)">
            <summary>
            更新模板中的任务关联
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveLandContent(System.Web.Mvc.FormCollection)">
            <summary>
            保存地块信息 --联发
            </summary>
            <param name="saveform"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存项目基本信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveProjectSupplierRel">
            <summary>
            添加项目设计供应商
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetTreeInfosNew(System.String,System.String,System.String)">
            <summary>
            加表名
            </summary>
            <param name="projId"></param>
            <param name="opCodes"></param>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveTableRelation(System.Web.Mvc.FormCollection)">
            <summary>
            添加某些关联表记录
            </summary>
            <param name="tbName">关联表名称</param>
            <param name="relKey">关联表关联的主键名称</param>
            <param name="relValues">关联表关联的主键值,以逗号隔开</param>
            <param name="saveForm">其他相关的参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructExportTemplateCommon(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            项目地块分期指标导出公用接口
            </summary>
            <param name="engId">地块Id</param>
            <param name="projId">分期Id</param>
            <param name="itemTb">指标项表名</param>
            <param name="columnTb">指标列表名</param>
            <param name="templateTb">指标模板表</param>
            <param name="dataStr">模板名以及备注</param>
            <param name="engTb">地块表</param>
            <param name="projTb">分期表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.ProjIndexStructImportTemplateCommon(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            项目经济技术指标由模板导入
            </summary>
            <param name="templateId">要导入的模板Id</param>
            <param name="engId">要导入的工程Id</param>
            <param name="isAdd">是否追加,默认0为覆盖1为追加</param>
            <param name="itemTb">项的表名</param>
            <param name="columnTb">列的表名</param>
            <param name="templateTb">模板的表名</param>
            <param name="engTb">地块的表名</param>
            <param name="ProjTb">分期的表名</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSysUser(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSysUserZHHY(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveUserRole(System.String,System.String,System.Int32)">
            <summary>
            保存用户角色
            </summary>
            <param name="ids"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetOrgAndPostTreeXML">
            <summary>
            获取部门树的XML列表
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetRoleJson">
            <summary>
            获取角色json列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetOrgAndPostTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            递归获取对应的部门树内标
            </summary>
            <param name="orgList"></param>
            <param name="postList"></param>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FindUsers">
            <summary>
            查找用户（通过部门id,部门岗位id,群组id,通用岗位id）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.FindUsersNameById">
            <summary>
            根据id返回用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SearchUsers">
            <summary>
            查找用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.newOrgTree(System.String)">
            <summary>
            新版构造组织架构树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubNode(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            取节点的子节点,为递归,level为控制展示级数,如:展示两级则level大于2返回空
            </summary>
            <param name="org"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetSubNode(MongoDB.Bson.BsonDocument,System.Int32,System.Int32)">
            <summary>
            取节点的子节点,为递归,level为控制展示级数,如:展示两级则level大于2返回空
            </summary>
            <param name="org"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetProfJson">
            <summary>
            获取系统专业
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetOrgUserJson(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取部门下所有用户Json
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetPostUserJson(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取岗位下所有用户Json
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetOrgTreeXML">
            <summary>
            获取部门树的XML列表  zpx
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.GetOrgTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            递归获取对应的部门树内标  zpx
            </summary>
            <param name="orgList"></param>
            <param name="postList"></param>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.SaveSysRoleRight(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            保存角色权限
            </summary>
            <param name="tbName"></param>
            <param name="modulId"></param>
            <param name="roleId"></param>
            <param name="code"></param>
            <param name="dataObjId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ControllerBase.DelSysRoleRight(System.String,System.String,System.String)">
            <summary>
            删除角色权限
            </summary>
            <param name="modulId"></param>
            <param name="roleId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ControllerBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ControllerBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ControllerBase.FormTableName">
            <summary>
            地块表单名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.ParcelCirInfo">
            <summary>
            地块周边市政配套设施 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.AdjacentParcelInfo">
            <summary>
            相邻地块情况 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.GovRequest">
            <summary>
            政府部门要求 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.DesignFileApproval">
            <summary>
            设计文件报批标准指引 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.EngineeringFileApproval">
            <summary>
            工程文件报批标准指引 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.CompetitiveHouse">
            <summary>
            竞品楼盘考察表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.LocationProposal">
            <summary>
            项目整体定位建议 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.TypeMatchProposal">
            <summary>
            户型类型、配比建议 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.SaleOfficeProposal">
            <summary>
            售楼处、样板房建议 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.ExternalCorrect">
            <summary>
            项目定价建议 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.CostEcoIndicator">
            <summary>
            成本经济技术指标表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.KeyTechEcoIndicator">
            <summary>
            项目关键技术经济指标
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.LandInfo">
            <summary>
            项目土地信息 
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FormTableName.LandInSide">
            <summary>
            土地内部情况查看 
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.FileCheckStatus">
            <summary>
            文件签入签出状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.FileCheckStatus.CheckIn">
            <summary>
            未被签出 0
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.FileCheckStatus.CheckOut">
            <summary>
            被签出 1
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.ActionType">
            <summary>
            签入签出记录动作类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.ActionType.CheckIn">
            <summary>
            正常签入 0
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.ActionType.CheckOut">
            <summary>
            正常签出 1
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.ActionType.TimeOutCheckIn">
            <summary>
            超时签入 2
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.FileCheckManage.ActionType.ForceCheckIn">
            <summary>
            手动强制签入 3
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ControllerBase.PageFileType">
            <summary>
            页面文件类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.PageFileType.Media">
            <summary>
            媒体文件 0
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ControllerBase.PageFileType.Attachment">
            <summary>
            附件 1
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PageJson">
            <summary>
            提交处理结果返回信息
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.PageJson.htInfo">
            <summary>
            附加信息的键值对表格
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor(System.Boolean)">
            <summary>
            附带状态构造函数
            </summary>
            <param name="isSuccess"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.#ctor(System.Boolean,System.String)">
            <summary>
            附带状态/错误信息构造函数
            </summary>
            <param name="isSuccess"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.AddInfo(System.String,System.String)">
            <summary>
            添加额外信息
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToJsonString">
            <summary>
            返回标准Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToString">
            <summary>
            构建返回的JSON字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.ToTransmitString">
            <summary>
            传值信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageJson.GetOtherInfo">
            <summary>
            获取额外信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.Success">
            <summary>
            返回状态
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.Message">
            <summary>
            返回错误信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PageJson.FileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.messageService">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.#ctor">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginName(System.String,System.String[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameAsync(System.String,System.String[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameAsync(System.String,System.String[],System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserId(System.String,System.Int64[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdAsync(System.String,System.Int64[],System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdAsync(System.String,System.Int64[],System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MessageService.messageService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByLoginNameCompleted">
            <remarks/>
        </member>
        <member name="E:Yinhe.ProcessingCenter.MessageService.messageService.sendMessageByUserIdCompleted">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.ServiceResponse">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorMessage">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorNumber">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.errorNumberSpecified">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.result">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.ServiceResponse.resultSpecified">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.sendMessageByLoginNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MessageService.sendMessageByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelper">
            <summary>
             SQL数据连接处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of SqlParameters tho be added to command</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">array of SqlParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the SqlCommand to be prepared</param>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an array of SqlParamters</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC">
            <summary>
            华侨城AD路径解析
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.IPathAnalyse">
            <summary>
            路径解析接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepCode(System.String)">
            <summary>
            部门标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepParentName(System.String)">
            <summary>
            获取父级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepLevel(System.String)">
            <summary>
            获取部门级别
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetDepListFilter(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            部门过滤
            </summary>
            <param name="depList"></param>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserCode(System.String)">
            <summary>
            获取用户标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.IPathAnalyse.GetUserListFilter(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADUser)">
            <summary>
            用户过滤
            </summary>
            <param name="userList">用户列表</param>
            <param name="user">欲添加的用户</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetDepCode(System.String)">
            <summary>
            部门标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetDepParentName(System.String)">
            <summary>
            获取父级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetDepLevel(System.String)">
            <summary>
            获取部门级别
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetUserCode(System.String)">
            <summary>
            获取用户标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetDepPathCut(System.String)">
            <summary>
            LDAP://192.168.8.33/OU=永升大厦工程部,OU=NQZA.永升大厦管理处,OU=NQ.永升物业上海区域,OU=N.上海永升物业管理有限公司,OU=旭辉集团股份有限公司,DC=cifi,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseHQC.GetUserPathCut(System.String)">
             <summary>
            LDAP://172.16.9.25/uid=huanghuishan,cn=users,dc=group,dc=chinaoct,dc=com
             </summary>
             <param name="str"></param>
             <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumDescription">
            <summary>
            把枚举值按照指定的文本显示
            <remarks>
            一般通过枚举值的ToString()可以得到变量的文本，
            但是有时候需要的到与之对应的更充分的文本，
            这个类帮助达到此目的
            Date: 2006-3-25 
            Author: dearzp@hotmail.com
            </remarks>
            </summary>
            <example>
            [EnumDescription("中文数字")]
            enum MyEnum
            {
            	[EnumDescription("数字一")]
            	One = 1, 
            
            	[EnumDescription("数字二")]
            	Two, 
            
            	[EnumDescription("数字三")]
            	Three
            }
            EnumDescription.GetEnumText(typeof(MyEnum));
            EnumDescription.GetFieldText(MyEnum.Two);
            EnumDescription.GetFieldTexts(typeof(MyEnum)); 
            </example>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.#ctor(System.String,System.Int32)">
            <summary>
            描述枚举值
            </summary>
            <param name="enumDisplayText">描述内容</param>
            <param name="enumRank">排列顺序</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.#ctor(System.String)">
            <summary>
            描述枚举值，默认排序为5
            </summary>
            <param name="enumDisplayText">描述内容</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetEnumText(System.Type)">
            <summary>
            得到对枚举的描述文本
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldText(System.Object)">
            <summary>
            获得指定枚举类型中，指定值的描述文本。
            </summary>
            <param name="enumValue">枚举值，不要作任何类型转换</param>
            <returns>描述字符串</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldTexts(System.Type)">
            <summary>
            得到枚举类型定义的所有文本，按定义的顺序返回
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.EnumDescription.GetFieldTexts(System.Type,Yinhe.ProcessingCenter.EnumDescription.SortType)">
            <summary>
            得到枚举类型定义的所有文本
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <param name="sortType">指定排序类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumDescription.SortType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.Default">
             <summary>
            按枚举顺序默认排序
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.DisplayText">
            <summary>
            按描述值排序
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.EnumDescription.SortType.Rank">
            <summary>
            按排序熵
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileDeleteOperation">
            <summary>
            文件通用删除处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.IFileDeleteInderface">
            <summary>
            文件删除接口 日后进行扩展  删除业务数据的同时删除文件服务器上的文件
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.XmlTree">
            <summary>
            树转化xml处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            Initializes a new instance of the <see cref="!:TreeNodesXmlResult"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.XmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.XmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.DynamicXmlTree">
            <summary>
            动态树生成处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.DynamicXmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            Initializes a new instance of the <see cref="!:TreeNodesXmlResult"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.DynamicXmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.DynamicXmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.TreeView">
            <summary>
            树状视图处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.ToString">
            <summary>
            输出树html
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.GetChildTree(Yinhe.ProcessingCenter.Common.Tree)">
            <summary>
            获取某一节点的子节点
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.IsLeaf(System.String)">
            <summary>
            判断是否为叶子节点（没有子节点）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.TreeView.GetRootTreeList">
            <summary>
            获取根节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.TreeView.TreeList">
            <summary>
            树的所有节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.TreeView.RootTreeList">
            <summary>
            根结点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.StandarLibEnum">
            <summary>
            标准成果库枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.UNITLIB">
            <summary>
            户型库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DECORATIONLIB">
            <summary>
            室内精装修
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.FACADELIB">
            <summary>
            立面库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DEMAREALIB">
            <summary>
            示范区库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.LANDSCAPELIB">
            <summary>
            景观库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.CRAFTSLIB">
            <summary>
            标准工艺工法库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.PARTSLIB">
            <summary>
            公共部位库
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.StandarLibEnum.DEVICELIB">
            <summary>
            设备与技术库 
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SerializerXml`1">
            <summary>
            Xml序列号通用处理类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DynamicMember">
            <summary>
            动态属性操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicProperty``1(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicProperty(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值字符串.
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicPropertyString(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.GetDynamicPropertyInt(System.Object,System.String)">
            <summary>
            动态获取任一对象的属性值.
            </summary>
            <typeparam name="T">需要返回的参数类型</typeparam>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <returns>属性所拥有的值或对象</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.SetDynamicProperty(System.Object,System.String,System.Object)">
            <summary>
            动态设置一个对象的属性值.
            </summary>
            <param name="obj">需要查看的对象</param>
            <param name="propertyName">对象的某属性名称</param>
            <param name="newValue">给此属性的新数值或对象</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DynamicMember.SetPropertyValueByNames(System.Object,System.String[],System.Object)">
            <summary>
            在给定的数组中获取对象的相对应属性，并给其赋值
            </summary>
            <param name="obj"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll">
            <summary>
            成本计算处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.Init(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String)">
            <summary>
            计算出成本科目的工程量的值，及估算总值((比例支付的基数为成本科目中的收入科目总额))
            </summary>
            <param name="costDirList"></param>
            <param name="projId"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CalcTotalCost(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String)">
            <summary>
            计算出成本科目的工程量的值，及估算总值(比例支付的基数为销售回款总额)
            </summary>
            <param name="costDirList">成本科目</param>
            <param name="projId">项目Id</param>
            <param name="versionId">版本Id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.GetRelInfo(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},System.String,System.String,System.String,System.Int32)">
            <summary>
            获取关联信息
            </summary>
            <param name="tbDirDict"></param>
            <param name="relTable"></param>
            <param name="versionId"></param>
            <param name="key"></param>
            <param name="relId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CalcRateOfTotal(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.String,System.Int32)">
            <summary>
            计算比例
            </summary>
            <param name="dirList"></param>
            <param name="calcKey"></param>
            <param name="rateKey"></param>
            <param name="decimals"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CalcParentCost(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            计算父节点的科目支出总值，传入的科目需要已经计算出叶子节点
            </summary>
            <param name="costDirList">科目列表</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CopyFromTemplate(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            从模板拷贝产品决策中部门数据信息
            </summary>
            <param name="tableName">表名</param>
            <param name="name"></param>
            <param name="projId">项目Id</param>
            <param name="versionId"></param>
            <param name="fields">要拷贝的字段数组</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CopyFromPreVersion(System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            上一个版本拷贝
            </summary>
            <param name="tableName"></param>
            <param name="name"></param>
            <param name="projId"></param>
            <param name="preVersionId">上一个版本Id</param>
            <param name="versionId"></param>
            <param name="fields">要拷贝的字段数组</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CopyPolicyDateFromTemplate(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            从模板中拷贝目录结构
            </summary>
            <param name="tableName"></param>
            <param name="name"></param>
            <param name="versionId"></param>
            <param name="fields"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CopyTreeTable(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            复制树形结构目录
            </summary>
            <param name="tableName">树形结构的表名称</param>
            <param name="dataList">被复制的树型结构列表</param>
            <param name="fields">要复制的字段</param>
            <param name="keyValueDict">固定加入的值：比如树形目录挂在项目下可能就要加入项目的主键Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CalcRelId(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String,System.String,System.String)">
            <summary>
            成本科目计算工程量的关联数据
            </summary>
            <param name="tbNameDict">其它部门的同版本的目录数据字典</param>
            <param name="template">被拷贝的科目信息</param>
            <param name="cost">新建的当前版本的科目信息</param>
            <param name="projId">项目Id</param>
            <param name="versionId"></param>
            <param name="copyKey">relId所要拷贝的Id（如果是拷贝自模板则传入templateId,项目则是srcId）</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.GetCostDirs(System.String,System.String,System.String)">
            <summary>
            通过表名，项目id，版本id获取对应表的目录信息
            </summary>
            <param name="tbName"></param>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.GetPolicyDirs(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tbName">部门表名：树形表为其后面+Dir</param>
            <param name="versionId">版本Id</param>
            <param name="sumKey">汇总Key</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CostBll.CalcParentValue(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            汇总树形结构父节点的值
            传入的树形结构需要已经计算出叶子节点
            </summary>
            <param name="treeList">树形结构列表</param>
            <param name="sumKey">要汇总的值的Key</param>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll">
            <summary>
            任务书引用成果处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.GetBookTaskByProjRetId(System.Int32)">
            <summary>
            成果还需要列出关联的项目总结
            </summary>
            <param name="projRetId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.GetRefResultList(System.Int32,System.Int32)">
            <summary>
            获取该任务书下的所有成果关联
            </summary>
            <param name="bookId"></param>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.GetRefResultPathList(System.Collections.Generic.List{System.Int32})">
            <summary>
            获取涉及的路径列表
            </summary>
            <param name="pageIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.GetRefResultPath(System.Int32)">
            <summary>
            返回涉及到的所有页面路径
            </summary>
            <param name="bookId"></param>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.Insert(System.Int32,System.Int32[])">
            <summary>
            批量添加
            </summary>
            <param name="pageId"></param>
            <param name="retIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefResultBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll">
            <summary>
            页面临时内容处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.EpsSummaryBll.SearchEpsSummaryRet(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.Int64@)">
            <summary>
            汇总成果被项目总结引用的情况
            </summary>
            <param name="projIdList"></param>
            <param name="pageSize"></param>
            <param name="curPage"></param>
            <param name="keyWord"></param>
            <param name="allCount"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll">
            <summary>
            流程日志跟踪处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.GetNextAbaiableStepList(System.Int32,System.Int32,MongoDB.Bson.BsonDocument)">
            <summary>
            获取某个会签步骤中未执行步骤Id列表
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="preStepObj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.CanJumpNextStep(System.Int32,System.Int32,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            判断当前步骤是否可以跳转,此时当前记录动作还未添加日志所以应该-1
            </summary>
            <param name="flowId"></param>
            <param name="preStepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.CreateStartInstanceLog(System.Int32,System.Int32,System.Int32)">
            <summary>
            创建启动流程跟踪日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.CreateSysActionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            创建系统自动跳转跟踪日志
            </summary>
            <param name="preStepId"></param>
            <param name="nextStepId"></param>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.CreateCompleteActionLog(System.Nullable{System.Int32},System.Int32)">
            <summary>
            创建系统自动跳转跟踪日志
            </summary>
            <param name="preStepId"></param>
            <param name="nextStepId"></param>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.CreateAbortActionLog(System.Nullable{System.Int32},System.Int32)">
            <summary>
            创建系统自动跳转跟踪日志
            </summary>
            <param name="preStepId"></param>
            <param name="nextStepId"></param>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.ResetActionUnAvaiable(System.Int32,System.Int32)">
            <summary>
            重置所有状态为无效
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="startStepId"></param>
            <param name="curStepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.ChangeActionUnAvaiable(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            将步骤列表中的会签步骤设置为无效，二次会签步骤开始,目前 发起二次会签步骤中夹杂着一个会签步骤可能导致问题，所以尽可能按上一步会签
            </summary>
            <param name="flowId"></param>
            <param name="startStepId"></param>
            <param name="curStepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.ChangeActionUnAvaiable(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            将当前步骤之前到开始步骤的之间的会签操作设置为无效
            </summary>
            <param name="flowId"></param>
            <param name="startStepId"></param>
            <param name="curStepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowTraceBll.ChangeActionUnAvaiable(System.Int32,System.Int32,System.Int32)">
            <summary>
            将当前步骤之前到开始步骤的之间的会签操作设置为无效
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="curStepId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MvcFilters.CommonExceptionAttribute">
            <summary>
            通用异常处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.IfRule">
            <summary>
            判断规则,继承基础操作规则
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.OperateRule">
            <summary>
            操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Vars">
            <summary>
            级联内顶级变量
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Foreachs">
            <summary>
            级联内顶级循环
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Ifs">
            <summary>
            级联内顶级判断
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.OperateRule.Storages">
            <summary>
            级联内顶级操作
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.SetOperateRule(System.Xml.Linq.XElement)">
            <summary>
            获取顶级操作对象,即获取级联操作父类属性
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.OperateRule.GetStorageDatas(Yinhe.ProcessingCenter.MongoOperation,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取顶级存储语句
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.IfRule.Condition">
            <summary>
            判断条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.IfRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.IfRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.IfRule.SetIfRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的判断规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Encryption">
            <summary>
            Base64加密
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Base64">
            <summary> 
            实现Base64加密解密处理类
            
            
            </summary> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.EncodeBase64(System.Text.Encoding,System.String)">
            <summary> 
            Base64加密 
            </summary> 
            <param name="codeName">加密采用的编码方式</param> 
            <param name="source">待加密的明文</param> 
            <returns></returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.EncodeBase64(System.String)">
            <summary> 
            Base64加密，采用utf8编码方式加密 
            </summary> 
            <param name="source">待加密的明文</param> 
            <returns>加密后的字符串</returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.DecodeBase64(System.Text.Encoding,System.String)">
            <summary> 
            Base64解密 
            </summary> 
            <param name="codeName">解密采用的编码方式，注意和加密时采用的方式一致</param> 
            <param name="result">待解密的密文</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.Base64.DecodeBase64(System.String)">
            <summary> 
            Base64解密，采用utf8编码方式解密 
            </summary> 
            <param name="result">待解密的密文</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.Device.ProjectBll">
            <summary>
            豪宅项目处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.Device.ProjectBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll.GetProjectAreas">
            <summary>
            获取所有的项目地区
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.ProjectBll.GetProjectBuildingTypes">
            <summary>
            获取所有楼房类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll">
            <summary>
            脉络图处理相关类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.IsIgnorePeople">
            <summary>
            是否载入人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.IsIgnoreDate">
            <summary>
            是否载入人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.IsIgnorePassed">
            <summary>
            是否忽略跳过任务
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.OffSetDay">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.OffSetMonth">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.ContextDiagramBll.OffSetYear">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.UpdatePlanStatus">
            <summary>
            更新计划状态为进行中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdatePlanStatus.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改计划状态为进行中
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll">
            <summary>
            流程转办人员处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.FindById(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.FindByFlowInstanceId(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.HasTurnRightQuery(System.Int32,System.Int32)">
            <summary>
            获取当前是否被转办,没过滤status 应为可能被过滤多次
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.FindByFlowInstanceId(System.Int32,System.Int32)">
            <summary>
            获取当前当前用户被给予的权限列表
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.HasExistObj(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="flowInstanceId"></param>
            <param name="grantUserId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.FindAll">
            <summary>
            查找出所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.Insert(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.Insert(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowTurnRightBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MatControllerBase">
            <summary>
            MVC Controller的通用基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CommonDel(System.String,System.String,System.String,System.String)">
            <summary>
            "table1,key1|table2,key2"
            </summary>
            <param name="tbName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <param name="relInfos"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CommonDelByPK(System.String,System.String,System.String,System.String)">
            <summary>
            通过主键删除
            </summary>
            <param name="tbName"></param>
            <param name="keyValue"></param>
            <param name="relTbNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SavePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            保存提交上来的数据
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveMaterialQX(System.Web.Mvc.FormCollection)">
            <summary>
            乔鑫保存材料
            </summary>
            <param name="saveForm">上传表单</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveMaterial(System.Web.Mvc.FormCollection,System.String,System.String)">
            <summary>
            三盛保存材料
            </summary>
            <param name="saveForm">上传表单</param>
            <param name="prices">价格列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveMaterialPrices(System.String,System.String)">
            <summary>
            保存材料的价格
            </summary>
            <param name="prices"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.UniversalSave(System.String,System.String,System.String)">
            <summary>
            通用删除
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DelePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            删除提交上来的信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
            
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.UniversalDelete(System.String,System.String)">
            <summary>
            通用删除
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.BatchDeleteByPrimaryKey(System.Web.Mvc.FormCollection)">
            <summary>
            根据主键Id批量删除
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.MovePostInfo(System.Web.Mvc.FormCollection)">
            <summary>
            移动提交上来的信息
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleTableJson(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            获取简单表的Json列表
            </summary>
            <param name="tbName">表名</param>
            <param name="ps">每页条数(默认20,-1不翻页)</param>
            <param name="cu">当前页</param>
            <param name="qu">查询语句(原生查询)</param>
            <param name="of">排序字段</param>
            <param name="ot">排序类型(空正序,desc倒序)</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ChangeChinesetoPinYin(System.String)">
            <summary>
            将中文转换为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CommonInsertPost">
            <summary>
            系统权限通用列表新增接口 对比数据库已有记录 
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleTreeXML(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleTreeMutiQueryXML(System.String,System.String)">
            <summary>
            通过多条件获取单表普通树的XML列表
            </summary>
            <param name="tbName"></param>
            <param name="queryStr">(a=a:b=b:c=c)</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleNoRootTreeXML(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleTreeXMLByIntOrStr(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleTreeXMLByQuery(System.String,System.String)">
            <summary>
            获取单表普通树的XML列表
            </summary>
            <param name="tbName">表名</param>
            <param name="queryStr">查询条件(原生查询:db.tbName....)</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetSingleSubTreeXML(System.String,System.String,System.Int32)">
            <summary>
            获取单表普通树的子树XML
            </summary>
            <param name="tbName">表名</param>
            <param name="curNodeId">当前节点Id</param>
            <param name="lv">获取层级</param>
            <param name="itself">是否包含本身节点,0不包含,1包含</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveSingleUploadFile(System.Web.Mvc.FormCollection)">
            <summary>
            上传单个文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveMultipleUploadFiles(System.Web.Mvc.FormCollection)">
            <summary>
            上传多个文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveNewVersion(System.Web.Mvc.FormCollection)">
            <summary>
            上传新版本
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SetBrainCoverImage(System.Int32)">
            <summary>
            设置其他首脑图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SetCoverImage(System.Int32)">
            <summary>
            设置封面图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SetIndexPush">
            <summary>
            设置首页推送
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.UpdateFileDescription(System.Web.Mvc.FormCollection)">
            <summary>
            更新文件描述
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.AddFileDescription(System.Web.Mvc.FormCollection)">
            <summary>
            更新文件描述
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DeleFiles(System.Web.Mvc.FormCollection)">
            <summary>
            删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DeleFilesByFileId(System.Web.Mvc.FormCollection)">
            <summary>
            通过文件ID删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DeleFilesByFileVerId(System.Web.Mvc.FormCollection)">
            <summary>
            通过文件版本ID删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DeleFolder(System.Web.Mvc.FormCollection)">
            <summary>
            删除文件
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.IsUserCanDownLoad">
            <summary>
            判断用户是否能够下载,小于等于0不能下载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SetFileThumbPicPath(System.String)">
            <summary>
            批量设置文档缩略图地址
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            权限验证
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Action执行之前
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Action执行之后
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>
            Result执行之前
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>
            Result执行之后
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SavePageToPdf">
            <summary>
            将页面导出成为PDF文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ImportJsonInfoToDataBase(System.Web.Mvc.FormCollection)">
            <summary>
            将JSON数据导入数据库
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReSetTableTreeKey(System.String)">
            <summary>
            重置树形表中的4个关键属性
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReSetSubNodeTreeKey(System.String,System.String,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            重置树形表的4个关键字
            </summary>
            <param name="tbName"></param>
            <param name="primaryKey"></param>
            <param name="curNode"></param>
            <param name="allDataList"></param>
            <param name="newKeyDic"></param>
            <param name="newLvDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SendMsg">
            <summary>
            消息发送
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReSetTableDataToString(System.String)">
            <summary>
            将数据库表的所有字段重置为字符串型
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetCurDBAllTableJson">
            <summary>
            获取当前数据库所有表信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReSetSysLogTime(System.String)">
            <summary>
            重置日志日期时间
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReSetColumnToInt(System.String,System.String)">
            <summary>
            重置任意表的任意字段为Int类型
            </summary>
            <param name="tbName"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ExportDataBaseToFile(System.String,System.String)">
            <summary>
            将数据库中数据导出为文件
            </summary>
            <param name="tbName"></param>
            <param name="queryJson"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.OutputFile(System.String,System.String,System.String)">
            <summary>
            将html表格导出成为Excel
            </summary>
            <param name="FileType"></param>
            <param name="FileName"></param>
            <param name="ExcelContent"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CopeGeneralDirectory(System.String)">
            <summary>
            复制通用目录
            </summary>
            <param name="bookTask"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SaveTaskAccept(System.Web.Mvc.FormCollection)">
            <summary>
            保存系统任务
            </summary>
            <param name="saveForm"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CreateExcelByHtmlCode(System.String,System.String,System.String)">
             <summary>
            创建表格
             </summary>
             <param name="htmlCode"></param>
             <param name="sheetName"></param>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetFile(System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">下载时的默认文件名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetExcelFile(System.String,System.String)">
            <summary>
            下载Excel文件
            </summary>
            <param name="fullFileName"></param>
            <param name="downloadName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.SetEditType">
            <summary>
            批量设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.CascadeUpdaeDeliverProperty">
            <summary>
            批量设置更新模板改动
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.PDFImport(System.String,System.String,System.String)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ReadLogFile(System.String,System.String)">
            <summary>
            读取日志文件
            </summary>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.InsertLogData(System.String,System.String)">
            <summary>
            插入日志文件中的数据
            </summary>
            <param name="tbName"></param>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DeleteLogData(System.String,System.String)">
            <summary>
            删除日志文件中的数据
            </summary>
            <param name="tbName"></param>
            <param name="jsonUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.RecoveryLogData(System.String,System.String,System.String)">
            <summary>
            恢复日志数据(直接操作数据库)
            </summary>
            <param name="tbName">表名</param>
            <param name="jsonUrl">文件地址</param>
            <param name="type">恢复类型 Ins:插入,Del:删除</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.BatchRecoveryLogData(System.String,System.String)">
            <summary>
            批量恢复日志数据
            </summary>
            <param name="dirUrl"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetLogRecoveryFile(System.String,System.String,System.String)">
            <summary>
            从系统日志中获取恢复数据的JSON
            </summary>
            <param name="behaviorId"></param>
            <param name="dataType">opData/oldData,默认oldData</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ExportUserVisitLogToExcel">
            <summary>
            将用户访问系统的相关数据导出Excel文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ConvertToPageJson(Yinhe.ProcessingCenter.InvokeResult)">
            <summary>
             将InvokeResult转成PageJson对象
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.GetSelectElementIdArray(System.String)">
            <summary>
             将InvokeResult转成PageJson对象
            </summary>
            <param name="formValueString"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.ExportToExcel(System.String,System.String,System.String)">
            <summary>
            将html表格导出成为Excel
            </summary>
            <param name="FileType"></param>
            <param name="FileName"></param>
            <param name="ExcelContent"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MatControllerBase.DownloadFileZHTZ(System.String,System.String)">
            <summary>
            中海投资工作函的PDF导出
            </summary>
            <param name="path"></param>
            <param name="name"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MatControllerBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MatControllerBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageType">
            <summary>
            存储类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.None">
            <summary>
            无操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Insert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.CascadeTimeType">
            <summary>
            级联操作触发时间
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.None">
            <summary>
            无操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.Before">
            <summary>
            操作前
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeTimeType.After">
            <summary>
            操作后
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.DataObjectType">
            <summary>
            数据对象类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.AValue">
            <summary>
            一个值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.ARecord">
            <summary>
            一条记录
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.MultipleRecords">
            <summary>
            多条记录
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.ATable">
            <summary>
            一张表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObjectType.AStorage">
            <summary>
            一个操作
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ">
            <summary>
            中海投资AD路径解析
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetDepCode(System.String)">
            <summary>
            部门标识   LDAP://192.0.0.172/OU=中海和才（北京）股权投资基金管理公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetDepParentName(System.String)">
            <summary>
            获取父级部门   LDAP://192.0.0.172/OU=中海和才（北京）股权投资基金管理公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetDepLevel(System.String)">
            <summary>
            获取部门级别    LDAP://192.0.0.172/OU=中海和才（北京）股权投资基金管理公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetUserCode(System.String)">
            <summary>
            获取用户标识 LDAP://192.0.0.172/CN=刘召伟,OU=中国海外实业有限公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门  LDAP://192.0.0.172/CN=刘召伟,OU=中国海外实业有限公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetDepPathCut(System.String)">
            <summary>
             LDAP://192.0.0.172/OU=中海和才（北京）股权投资基金管理公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHTZ.GetUserPathCut(System.String)">
            <summary>
            LDAP://192.0.0.172/CN=刘召伟,OU=中国海外实业有限公司,OU=中海投資,DC=coihl,DC=cohl,DC=com
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.FreezeStrategy">
            <summary>
            系统冻结处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.FreezeStrategy.IsFreezeSystem">
            <summary>
            固定时间开启冻结模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.FreezeStrategy.IsRandomFreezeSystem">
            <summary>
            随机时间开启冻结模式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.RightScopeEnum">
            <summary>
            角色范围枚举
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.CustomerCode">
            <summary>
            客户代码处理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZHHY">
            <summary>
            中海弘扬
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.SN">
            <summary>
            苏宁
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.XH">
            <summary>
            旭辉
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.ZHTZ">
            <summary>
            中海投资
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.QX">
            <summary>
            侨鑫
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.LF">
            <summary>
            联发
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.XC">
            <summary>
            新城
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.CustomerCode.SS">
            <summary>
            三盛
            </summary>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll">
            <summary>
            系统任务书结构处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.IsExists(System.String)">
            <summary>
            查询记录是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.FindByTypeProjId(System.Int32,System.Int32)">
            <summary>
            查询分项的任务书
            </summary>
            <param name="type"></param>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.FindByNodeIdAndType(System.Int32,System.Int32)">
            <summary>
            通过nodeType和projNodeId查找
            </summary>
            <param name="nodeType"></param>
            <param name="projNodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.FindAllRef(System.Int32)">
            <summary>
            查找所有引用的任务书
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.SearchTemplates(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查找
            </summary>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="keyWord"></param>
            <param name="categoryId"></param>
            <param name="type"></param>
            <param name="stageId"></param>
            <param name="profId"></param>
            <param name="patternId"></param>
            <param name="taskType"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Search(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查找任务书
            </summary>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="keyWord"></param>
            <param name="type"></param>
            <param name="stageId"></param>
            <param name="profId"></param>
            <param name="patternId"></param>
            <param name="projId"></param>
            <param name="taskType"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.CheckTemplateName(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            检查重名（区分任务书和模板）
            </summary>
            <param name="bookId"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.CheckName(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            检查重名（区分任务书和模板）
            </summary>
            <param name="bookId"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Save(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32[])">
            <summary>
            保存任务书模板
            </summary>
            <param name="entity"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Save(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32[],System.Int32,System.Int32)">
            <summary>
            保存任务书
            </summary>
            <param name="entity"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Save(MongoDB.Bson.BsonDocument,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            保存任务书
            </summary>
            <param name="entity"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.CopyNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            复制任务书模板
            </summary>
            <param name="handle"></param>
            <param name="pageList"></param>
            <param name="nodePid"></param>
            <param name="parent"></param>
            <param name="bookTask"></param>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookTaskBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll">
            <summary>
            决策点处理相关页
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.FindById(System.String)">
            <summary>
            根据Id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.FindAll">
            <summary>
            查找出所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.FindByIdList(System.Collections.Generic.List{System.String})">
            <summary>
            根据Id列表查询
            </summary>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.HasExist(System.String,System.String)">
            <summary>
            是否存在重名
            </summary>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DecisionPointBll.PatchUpdate(System.String,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            地铁图编辑保存接口,先保存插入决策点
            </summary>
            <param name="mapId">地铁图Id</param>
            <param name="userId">当前用户</param>
            <param name="decisionPointList">决策点列表</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DelTableInfo">
            <summary>
            A3基类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DelTableInfo.tbName">
            <summary>
            要删除的数据所属表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DelTableInfo.keyName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DelTableInfo.keyValue">
            <summary>
            对应字段的值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DelTableInfo.relInfos">
            <summary>
            对应被引用表的信息：表名为key，主键为value
            </summary>
        </member>
        <member name="T:System.StringExtension">
            <summary>
            字符串重载
            </summary>
        </member>
        <member name="M:System.StringExtension.CutStr(System.String,System.Int32,System.String)">
            <summary>
            功能：区分中英文截取字符串。
            </summary>
            <param name="Str">欲截取字串</param>
            <param name="iLength">截取字数</param>
            <param name="sAnd">截取后跟随字串，例：".."也可为空""</param>
            <returns>返回截取后的字符串</returns>
        </member>
        <member name="M:System.StringExtension.SplitParam(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            切割字符串
            </summary>
            <param name="source"></param>
            <param name="options"></param>
            <param name="separators"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.SplitParam(System.String,System.String[])">
            <summary>
            切割字符串，默认删除空白项
            </summary>
            <param name="source"></param>
            <param name="separators">分隔符</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:System.StringExtension.SplitToIntList(System.String,System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:System.StringExtension.SplitToIntList(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            将字符串切割，成Int类型列表
            </summary>
            <param name="source"></param>
            <param name="options">切割选项</param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.GetParamString(System.String,System.String)">
            <summary>
            获得url字符串中指定值
            </summary>
            <param name="paramStr"></param>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.GetParamInt(System.String,System.String)">
            <summary>
            获得url字符串中指定值 整型
            </summary>
            <param name="paramStr"></param>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.ParamStringSplit(System.String)">
            <summary>
            url字符串拆分
            </summary>
            <param name="paramStr"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.RepaceStr(System.String)">
            <summary>
            替换树节点前面的0字符（000001.000001 =》1.1）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtension.Reverse(System.String)">
            <summary>
            反转字符串
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageRlue">
            <summary>
            存储规则,定义级联操作中的数据存储
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Type">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Data">
            <summary>
            操作数据
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.StorageRlue.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.StorageRlue.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.StorageRlue.SetStorageRlue(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应插入规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.XHMobileSynchronization">
            <summary>
            旭辉手机同步
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.AssemblyHelper">
            <summary>
            插件处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetDirAssemblies(System.String)">
            <summary>
            获取目录下的所有程序集
            </summary>
            <param name="dirPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetAllAssemblies">
            <summary>
            获取包含插件目录的所有程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.AssemblyHelper.GetPluginAssemblies">
            <summary>
            获取所有插件程序集
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DLLComparer">
            <summary>
            DLL比较器
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.RoleRightEntity">
            <summary>
            角色权限实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.RoleRightEntity._DataObjectCode">
            <summary>
            数据对象代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.OperatingId">
            <summary>
            权限项Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataObjId">
            <summary>
            资源Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataId">
            <summary>
            数据对象实例数据Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.Code">
            <summary>
            模块权限项唯一代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.RoleRightEntity.DataObjectCode">
            <summary>
            资源模块代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll">
            <summary>
            决策模板处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll.GetTemplateDirs(System.String)">
            <summary>
            获取模板的目录信息
            </summary>
            <param name="dept"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyTemplateBll.GetDeptDirDict(System.String)">
            <summary>
            获取部门目录字典
            </summary>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll">
            <summary>
            现金流处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.InitCashFlowInfo(System.String,System.String)">
            <summary>
            初始化现金流的相关信息
            </summary>
            <param name="projId">项目Id</param>
            <param name="versionId">版本Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.GetCostDirList(System.String,System.String)">
            <summary>
            获取所有科目
            </summary>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcNodePay(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            计算成本科目每个月份要支付的额度
            </summary>
            <param name="costAccounts">成本科目</param>
            <param name="months">所有月份</param>
            <param name="yearNodes">每个月份所对应的项目节点字典</param>
            <param name="costRates">科目对应节点支付比例</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcParentMonthCost(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{System.String})">
            <summary>
            计算父节点每个月份要支付的成本
            </summary>
            <param name="costAccounts"></param>
            <param name="months"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcSeasonPay(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},Yinhe.ProcessingCenter.Season,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument}},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            计算成本科目每个季度要支付的额度
            </summary>
            <param name="costAccounts">成本科目</param>
            <param name="months">所有月份</param>
            <param name="yearNodes">每个月份所对应的项目节点字典</param>
            <param name="costRates">科目对应节点支付比例</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcParentSeasonCost(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},Yinhe.ProcessingCenter.Season)">
            <summary>
            计算父节点每个季度份要支付的成本
            </summary>
            <param name="costAccounts"></param>
            <param name="months"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcMarketData(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument})">
            <summary>
            销售权重决策
            </summary>
            <param name="marketDatas"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.Collections.Generic.List{System.String},System.String@,System.String@,System.String@,System.String@,System.String@,System.Decimal@,System.Decimal@)">
            <summary>
            月份现金流图表信息
            </summary>
            <param name="costList"></param>
            <param name="yearNodes"></param>
            <param name="costRates"></param>
            <param name="versionId"></param>
            <param name="months"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.Collections.Generic.List{System.String},MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            计算现金流信息
            </summary>
            <param name="costList">成本科目列表</param>
            <param name="versionId">版本Id</param>
            <param name="months">月份信息</param>
            <param name="cashPure">净现金流</param>
            <param name="cashOut">现金流出</param>
            <param name="cashIn">现金流入</param>
            <param name="cashAddup">累计现金流</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcSeasonCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,Yinhe.ProcessingCenter.Season,System.String@,System.String@,System.String@,System.String@,System.String@,System.Decimal@,System.Decimal@)">
            <summary>
            季度现金流图形报表信息
            </summary>
            <param name="costList"></param>
            <param name="versionId"></param>
            <param name="season">季度</param>
            <param name="cashOut"></param>
            <param name="cashIn"></param>
            <param name="cashPure"></param>
            <param name="cashAddup"></param>
            <param name="seasonKey">季度的key值</param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcSeasonCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,Yinhe.ProcessingCenter.Season,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            计算季度现金流信息
            </summary>
            <param name="costList"></param>
            <param name="versionId"></param>
            <param name="season"></param>
            <param name="cashPure"></param>
            <param name="cashOut"></param>
            <param name="cashIn"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.Max(System.Decimal[])">
            <summary>
            求最大值
            </summary>
            <param name="nums"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.Min(System.Decimal[])">
            <summary>
            求最小值
            </summary>
            <param name="nums"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.SeasonKey(System.Text.StringBuilder,System.String,System.Int32,System.Int32)">
            <summary>
            获取季度的key值
            </summary>
            <param name="sb"></param>
            <param name="index"></param>
            <param name="year"></param>
            <param name="seasonId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.MonthKey(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            获取月份的key值
            </summary>
            <param name="sb"></param>
            <param name="index"></param>
            <param name="month"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.isInSeason(System.Collections.Generic.List{System.DateTime},System.DateTime)">
            <summary>
            判断某个时间是否在季度中
            </summary>
            <param name="dts"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcTotalInterest(System.String)">
            <summary>
            计算总利息
            </summary>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcTotalExpenses(System.String)">
            <summary>
            计算中的支出：
            </summary>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcTotalIncom(System.String)">
            <summary>
            计算中收入
            </summary>
            <param name="versonId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcSeasonCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,Yinhe.ProcessingCenter.Season,System.String@,System.String@,System.String@,System.String@,System.String@,System.Decimal@,System.Decimal@,System.Int32)">
            <summary>
            季度现金流图形报表信息
            </summary>
            <param name="costList"></param>
            <param name="versionId"></param>
            <param name="season">季度</param>
            <param name="cashOut"></param>
            <param name="cashIn"></param>
            <param name="cashPure"></param>
            <param name="cashAddup"></param>
            <param name="seasonKey">季度的key值</param>
            <param name="max"></param>
            <param name="min"></param>
             <param name="type">类型1：乐观 2 悲观 3 客观</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CashFlowBll.CalcCashFlowInfo(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.Collections.Generic.List{System.String},System.String@,System.String@,System.String@,System.String@,System.String@,System.Decimal@,System.Decimal@,System.Int32)">
            <summary>
            月份现金流图表信息
            </summary>
            <param name="costList"></param>
            <param name="yearNodes"></param>
            <param name="costRates"></param>
            <param name="versionId"></param>
            <param name="months"></param>
            <param name="type">类型1：乐观 2 悲观 3 客观</param>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll">
            <summary>
            分项任务书关联处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.ProjectBookTaskBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PolicyFormInfo">
            <summary>
             现金流管理基类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PageReq">
            <summary>
             页面请求参数处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParam(System.String)">
            <summary>
            获取url参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToInt(System.String)">
            <summary>
            将字符串转换为int类型，转换失败返回0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToFloat(System.String)">
            <summary>
            将字符串转换为float类型，转换失败返回0.0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToBoolean(System.String)">
            <summary>
            将字符串转换为bool类型，转换失败返回false
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.ToDecimal(System.String)">
            <summary>
            将字符串转换为decimal类型，转换失败返回0m
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamDecimal(System.String)">
            <summary>
            获取url浮点型参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamBoolean(System.String)">
            <summary>
            获取布尔型的参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamInt(System.String)">
            <summary>
            获取url整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamList(System.String)">
            <summary>
            获取url参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamDecimalList(System.String)">
            <summary>
            获取url浮点型参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetParamIntList(System.String)">
            <summary>
            获取url整型参数列表,参数值以逗号分隔
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetForm(System.String)">
            <summary>
            获取Post提交的参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormDecimal(System.String)">
            <summary>
            获取Post提交的浮点型参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormInt(System.String)">
            <summary>
            获取Post提交的整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormBoolean(System.String)">
            <summary>
            获取Post提交的整型参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormList(System.String)">
            <summary>
            获取Post提交的参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormDecimalList(System.String)">
            <summary>
            获取Post提交的浮点型参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetFormIntList(System.String)">
            <summary>
            获取Post提交的整型参数列表,参数以逗号隔开
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetSession(System.String)">
            <summary>
            获取对应关键字,Session的值,无此关键字,返回空
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetSession(System.String,System.String)">
            <summary>
            将值保存到Session中去
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetObjSession(System.String)">
            <summary>
            获取对应关键字,Session的值,无此关键字,返回null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetObjSession(System.String,System.Object)">
            <summary>
            将值保存到Session中去
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetPhyPath(System.String)">
            <summary>
            以文件相对路径获取其绝对路径
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.DownLoadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="clientFileName">保存到客户端的文件名称</param>
            <param name="filePath">下载的文件物理路径</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetCookieValue(System.String)">
            <summary>
            读取 cookie值
            </summary>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.GetCookieValueInt(System.String)">
            <summary>
            读取 cookie值
            </summary>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PageReq.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            设置cookie
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
            <param name="expiresDt"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.IGetDataList">
            <summary>
            同步数据获取接口
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EnumCollection">
            <summary>
            枚举相关
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectProfessionType">
            <summary>
            分项专业的类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectProfessionType.Minor">
            <summary>
            辅助专业
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectProfessionType.Main">
            <summary>
            主专业
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectPlanStatus">
            <summary>
            分项计划的状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Unconfirmed">
            <summary>
            未确认
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjectPlanStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjRoleType">
            <summary>
            角色类型,主要用于ProjRoleManager表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.PlanOwner">
            <summary>
            负责计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.PlanSpliter">
            <summary>
            分解计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskOwner">
            <summary>
            负责任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskOperator">
            <summary>
            操作任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TaskJoiner">
            <summary>
            参与任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ProjRoleType.TodoChecker">
            <summary>
            检查工作者
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskManagerType">
            <summary>
            任务负责人类型,主要用于任务负责人表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.PlanSpliter">
            <summary>
            分解计划者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskOwner">
            <summary>
            负责任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskOperator">
            <summary>
            操作任务者
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskManagerType.TaskJoiner">
            <summary>
            参与任务者
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskStatus">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.ToSplit">
            <summary>
            待分解
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.SplitCompleted">
            <summary>
            分解完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskNodeType">
            <summary>
            月计划任务节点的类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.SelfDefinedTask">
            <summary>
            自定义任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.DesignTask">
            <summary>
            项目计划任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.SystemTask">
            <summary>
            系统领导任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskNodeType.LastMonthUnfinishedTask">
            <summary>
            上月度未完成任务
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskDelayStatus">
            <summary>
            月计划中任务延迟状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskDelayStatus.NotDelayed">
            <summary>
            未延迟
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskDelayStatus.Delayed">
            <summary>
            项目计划任务
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskValidStatus">
            <summary>
            有计划中任务是否有效状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskValidStatus.Valid">
            <summary>
            有效
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskValidStatus.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DecisionPointType">
            <summary>
            决策点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointType.RoundRect">
            <summary>
            圆角矩形
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DecisionPointStatus">
            <summary>
            决策点状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.NotStatus">
            <summary>
            无状态，未挂接任何任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DecisionPointStatus.Delayed">
            <summary>
            已延迟
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskType">
            <summary>
            任务节点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Facade">
            <summary>
            外立面
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Landscape">
            <summary>
            景观
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Decoration">
            <summary>
            精装修
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.Equipment">
            <summary>
            设备技术
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.ProductPlan">
            <summary>
            产品初步策划
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.TaskType.CostConfig">
            <summary>
            成本配置
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ConcernNodeType">
            <summary>
            任务业务节点类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.FeePayment">
            <summary>
            费用支付节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.ContractNode">
            <summary>
            合同节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.Supplier">
            <summary>
            供应商
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.TaskPage">
            <summary>
            任务书
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.LevelRelate">
            <summary>
            一二级联动
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.StageResult">
            <summary>
            阶段成果
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.MultiApproval">
            <summary>
            多审批任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.StartWorkTask">
            <summary>
            开工节点
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ConcernNodeType.OpenTask">
            <summary>
            开放节点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ExemptSkipType">
            <summary>
            金地任务
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Verify">
            <summary>
            外立面
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Passed">
            <summary>
            景观
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.ExemptSkipType.Refused">
            <summary>
            精装修
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.StageType">
            <summary>
             脉络图阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.Investment">
            <summary>
            投资决策阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.ProductPlan">
            <summary>
            产品策划及方案设计阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.ExtendedDesign">
            <summary>
            扩初设计及施工图阶段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.StageType.Construct">
            <summary>
            工程建造阶段
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowActionType">
            <summary>
            流程动作类型 发起 会签 审核 批准
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Launch">
            <summary>
            发起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Countersign">
            <summary>
            会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionType.Approve">
            <summary>
            批准
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowActionExecType">
            <summary>
            流程动作类型 发起 会签 审核 批准
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Launch">
            <summary>
            发起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Countersign">
            <summary>
            会签确认
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Approve">
            <summary>
            通过
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.Refuse">
            <summary>
            驳回
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.FlowActionExecType.GroupRefuse">
            <summary>
            驳回
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SupplierType">
            <summary>
            供应商审批状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.Verify">
             <summary>
            入库待审
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.accept">
            <summary>
            会签
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SupplierType.Refused">
            <summary>
            审核
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysLogType">
            <summary>
            系统日志操作类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.General">
            <summary>
            普通操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Login">
            <summary>
            登陆
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Insert">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Update">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysLogType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MonthlyTaskStatus">
            <summary>
            月度计划任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyTaskStatus.Delayed">
            <summary>
            延期
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysTaskStatus">
            <summary>
            月度计划任务状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Processing">
            <summary>
            已指派
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Feedbacked">
            <summary>
            已反馈
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SysTaskStatus.Completed">
             <summary>
            已完成
             </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MonthlyPlanStatus">
            <summary>
            月计划状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.NotPublished">
            <summary>
            未发布
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.Published">
            <summary>
            已发布
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.MonthlyPlanStatus.Filed">
            <summary>
            已归档
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CommonTaskStatus">
            <summary>
            通用任务状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.NotStarted">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Processing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Completed">
             <summary>
            已完成
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Delayed">
             <summary>
            延期
             </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.ToSplit">
            <summary>
            待分解
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.SplitCompleted">
            <summary>
            分解完成
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.CommonTaskStatus.Feedbacked">
            <summary>
            已反馈
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SegmentFeatureType">
            <summary>
            产品系列客群特征类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.Age">
            <summary>
            客户年龄
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.Area">
            <summary>
            客户区域
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.OldClient">
            <summary>
            旧客户
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.PayType">
            <summary>
            付款方式
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.YearCount">
            <summary>
            按揭年限
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SegmentFeatureType.LoanAmount">
            <summary>
            按揭额
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignChangeCmdStatus">
            <summary>
            设计变更指令单状态
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotLaunch">
            <summary>
            发起人未提交
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotIssue">
            <summary>
            未签发(签发人未选择签收人进行签发)
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.NotSee">
            <summary>
            未阅(签收人未阅读)
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignChangeCmdStatus.Seen">
            <summary>
            已阅(所有?签收人已阅读)
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.IRightScope">
            <summary>
            角色数据范围接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.GetDataScopes(System.Int32)">
            <summary>
            获取角色可访问的数据范围列表
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.Save(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity},System.Int32)">
            <summary>
            保存角色数据范围数据
            </summary>
            <param name="dataScopes">角色范围数据</param>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.IRightScope.GetUserDataScopeRight(System.Int32)">
            <summary>
            获取用户客户访问的数据权限
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            数据类型重载
            </summary>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_Z(System.Decimal)">
            <summary>
            金额的格式展示,去除小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney(System.Decimal)">
            <summary>
            金额的格式展示，保留两位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_O(System.Decimal)">
            <summary>
            金额的格式展示，保留一位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.ToMoney_T(System.Decimal)">
            <summary>
            金额的格式展示，保留两位小数
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FlowInstanceInfo">
            <summary>
            流程实例相关信息处理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasOperateRight">
            <summary>
            是否拥有按钮操作权限，同意驳回等按钮
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasEditRight">
            <summary>
            是否拥有编辑流程对象的权限，如编辑设计变更，添加合同，上传文件，
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.canForceCompleteAssign">
            <summary>
            是否拥有直接结束会签的权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curAvaiableUserName">
            <summary>
            当前可操作的用户名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curUserId">
            <summary>
            当前可操作的用户Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curUserIds">
            <summary>
            当前可操作的用户Id列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curStep">
            <summary>
            当前步骤对象，此处可分为，真正可执行的步骤对象，否则为流程实例当前的流程步骤对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.stepId">
            <summary>
            当前步骤Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curFlowInstance">
            <summary>
            当前流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.flowInstanceId">
            <summary>
            当前流程实例对象Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.turnRightList">
            <summary>
            当前步骤的转办列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.actionList">
            <summary>
            当前步骤的动作列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.curActionNameList">
            <summary>
            获取动作别名列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.referFiledList">
            <summary>
            获取可更改的字段列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.allInstanceActionUser">
            <summary>
            当前流程实例对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitEnslavedStepOrder">
            <summary>
            当前步骤可控制会签的列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitResetCSignStepOrder">
            <summary>
            获取二次会签可控制的会签步骤列表
            </summary>
        </member>
        <!-- 对于成员“P:Yinhe.ProcessingCenter.FlowInstanceInfo.hitRefuseStepObj”忽略有格式错误的 XML 注释 -->
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.isOrginalUser">
            <summary>
            是否初始用户，转办之后非初始用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.submitUserId">
            <summary>
            提交用户Id，既谁转办给我
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.grantRemark">
            <summary>
            转办备注
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.canImComplete">
            <summary>
            是否可以强制结束
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.FlowInstanceInfo.hasTurnRightBtn">
            <summary>
            是否有转办按钮，后台控制是否有转办的权限
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Item">
            <summary>
            系统Item返回类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.IsFlag">
            <summary>
            用于标识属性处理
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.otherParam">
            <summary>
            其他参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.userId">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Item.isUse">
            <summary>
            标志使用状态
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ModulOper">
            <summary>
            模块操作业务对象实体
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.ModulId">
            <summary>
            模块id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.OperId">
            <summary>
            操作id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.dataObjId">
            <summary>
            业务对象id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.ModulOper.code">
            <summary>
            权限代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.TaskIdClass">
            <summary>
            任务分项工程名称实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll">
            <summary>
            模板目录处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.CopyTable(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[])">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.CopyTable(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.CopyTreeTable(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            复制树形结构目录
            </summary>
            <param name="tableName">树形结构的表名称</param>
            <param name="dataList">被复制的树型结构列表</param>
            <param name="fields">要复制的字段</param>
            <param name="keyValueDict">固定加入的值：比如树形目录挂在项目下可能就要加入项目的主键Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.CopyGeneralDir(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument,System.Int32,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            从模板复制目录
            </summary>
            <param name="newDirList"></param>
            <param name="oldDirList"></param>
            <param name="nodePid"></param>
            <param name="parent"></param>
            <param name="projId"></param>
            <param name="tableName"></param>
            <param name="dirIfno"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.CopyGeneralDir(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            从模板复制目录
            </summary>
            <param name="newDirList"></param>
            <param name="oldDirList"></param>
            <param name="nodePid"></param>
            <param name="parent"></param>
            <param name="tableName"></param>
            <param name="dirIfno"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.TemplateDirBll.SaveVerDir(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument,System.String,MongoDB.Bson.BsonDocument,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            保存版本目录
            </summary>
            <param name="newDirList"></param>
            <param name="oldDirList"></param>
            <param name="nodePid"></param>
            <param name="parent"></param>
            <param name="tableName"></param>
            <param name="dirIfno"></param>
            <param name="sourceDirTb"></param>
            <param name="filed"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll">
            <summary>
            月度计划处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll.GetTaskStatusByBson(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            赋值辅助计划
            </summary>
            <param name="copyId">对应对象Id</param>
            <param name="srcId">需要初始化的对象</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.MonthlyPlanBll.GetTaskNodeStatus(MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            获取任务状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.ITaskFormula">
            <summary>
            公式计算接口
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.ITaskFormula.AnalysisFormula(System.Int32,System.String)">
            <summary>
            公式计算接口
            </summary>
            <param name="plItemId"></param>
            <param name="responseTitl"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaFactory">
            <summary>
            公式工厂
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaFactory.Create(System.String)">
            <summary>
            创建具体公式解析类
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.TaskFormulaFactory.Instance">
            <summary>
            返回工厂实例
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.DesignPayBll">
            <summary>
            设计费处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignPayBll.GetTotalPrice(System.Int32)">
            <summary>
            获取项目批复总设计费用
            ZHHY
            </summary>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.VarRule">
            <summary>
            变量规则,定义级联操作中的变量
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Name">
            <summary>
            变量名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Value">
            <summary>
            变量值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.VarRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.VarRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.VarRule.SetVarRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的变量规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH">
            <summary>
            旭辉路径解析
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetDepCode(System.String)">
            <summary>
            部门标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetDepParentName(System.String)">
            <summary>
            获取父级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetDepLevel(System.String)">
            <summary>
            获取部门级别
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetUserCode(System.String)">
            <summary>
            获取用户标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetDepPathCut(System.String)">
            <summary>
            LDAP://192.168.8.33/OU=永升大厦工程部,OU=NQZA.永升大厦管理处,OU=NQ.永升物业上海区域,OU=N.上海永升物业管理有限公司,OU=旭辉集团股份有限公司,DC=cifi,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseXH.GetUserPathCut(System.String)">
            <summary>
            LDAP://192.168.8.33/CN=任文立,OU=FF.工程部,OU=F.嘉兴旭辉,OU=旭辉集团股份有限公司,DC=cifi,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CacheHelper">
            <summary>
            缓存处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.SetCache(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime)">
            <summary>
            添加缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="cachedep"></param>
            <param name="overDueTime"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CacheHelper.RemoveCache(System.String)">
            <summary>
            清除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.UserRight">
            <summary>
            用户角色实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.UserRight._DataObjectCode">
            <summary>
            数据对象代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.UserId">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.OperatingId">
            <summary>
            权限项Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataObjId">
            <summary>
            资源Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataId">
            <summary>
            数据对象实例数据Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.RoleRightArea">
            <summary>
            权限区域范围
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.isDataRight">
            <summary>
            是否有数据权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.Code">
            <summary>
            模块权限项唯一代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.ModuleCode">
            <summary>
            模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.OperatingCode">
            <summary>
            操作项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.DataObjectCode">
            <summary>
            资源模块代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.UserRight.LastUpDate">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.UserTypeEnum">
            <summary>
            用户类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.UserTypeEnum.SystemUser">
            <summary>
             系统用户
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.UserTypeEnum.DebugUser">
            <summary>
            调试用户，系统内置
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeNode">
            <summary>
            树节点操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Id">
            <summary>
            当前节点ID
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Name">
            <summary>
            当前节点显示的名称
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Lv">
            <summary>
            当前节点所在的层级数.
            </summary>
            <value>The lv.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Pid">
            <summary>
            当前节点的父节点id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Order">
            <summary>
            同一父节点序号
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.underTable">
            <summary>
            当前节点所属表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.TreeType">
            <summary>
            树类型，主要用于组合树
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.Param">
            <summary>
            当前节点带的参数（用|分割）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.SubNodes">
            <summary>
            当前节点的子节点集合
            </summary>
            <value>The sub node.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.IsLeaf">
            <summary>
            是否是叶子节点 0 --非叶子节点,即有子节点，1--叶子节点,无子节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.LeafCount">
            <summary>
            叶子节点个数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.TreeNode.childCount">
            <summary>
            当前节点下所有子节点(包含本节点)的统计个数
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.Tree">
            <summary>
            树状操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.Type">
            <summary>
            节点类型（0-主表节点，1-从表节点）
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.IsRoot">
            <summary>
            是否为根节点
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Common.Tree.NodeAction">
            <summary>
            节点的操作动作（节点旁边的html代码）
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CommonLog">
            <summary>
            通用日志处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.#ctor(System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Trace(System.String)">
            <summary>
            最常见的记录信息，一般用于普通输出
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Debug(System.String)">
            <summary>
            调试程序
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Info(System.String)">
            <summary>
            信息类型的消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Warn(System.String)">
            <summary>
            警告信息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Error(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog.Fatal(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CommonLog._">
            <summary>
            Gets the log warpper.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyDept">
            <summary>
            决策版本处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll">
            <summary>
            决策版本管理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CalcStartEnd(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.DateTime@,System.DateTime@)">
            <summary>
            获取项目的最早最迟时间
            </summary>
            <param name="projNodeList"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.GetStartEndDate(System.String,System.DateTime@,System.DateTime@)">
            <summary>
            获取项目的开始结束时间
            </summary>
            <param name="versionId"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CreateVersion(System.String,System.String,System.Int32)">
            <summary>
            创建决策版本
            </summary>
            <param name="projId"></param>
            <param name="type">1:引用模板创建新版本 0或2：从旧数据中创建新模板</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.DeletePolicy(System.String)">
            <summary>
            删除项目下的产品决策信息
            </summary>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.Rollback(System.String)">
            <summary>
            创建新的决策版本失败，回滚数据，删除5个部门的目录数据，成本部门的科目比例,融资渠道
            </summary>
            <param name="projId">项目Id</param>
            <param name="versionId">版本Id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.DeleteCostRate(System.String)">
            <summary>
            删除成本科目比率
            </summary>
            <param name="projId"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.DeleteFinanceMode(System.String)">
            <summary>
            删除融资渠道
            </summary>
            <param name="projId"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.DeletePolicyDeptDate(System.String,System.String)">
            <summary>
            删除部门目录数据
            </summary>
            <param name="tbName"></param>
            <param name="projId"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.GetLatestVersionId(System.String)">
            <summary>
            获取最新的决策版本Id
            </summary>
            <param name="projId">项目Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.GetPreVersionId(System.String)">
            <summary>
            获取输入版本的上一个版本号
            </summary>
            <param name="projIdStr">项目Id</param>
            <param name="curVersionIdStr">版本Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.IsChange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String[])">
            <summary>
            判断产品决策数据是否产生变化
            </summary>
            <param name="curList">当前列表</param>
            <param name="preList">对应的上一个版本列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.IsDetailChange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String[])">
            <summary>
            销售计划，还款计划，变更判断
            </summary>
            <param name="curList"></param>
            <param name="preList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyRepayDetails(System.String,System.String)">
            <summary>
            复制还款计划信息
            </summary>
            <param name="preVersionId">上一个版本Id</param>
            <param name="curVersionId">当前版本Id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopySellDetails(System.String,System.String)">
            <summary>
            复制销售回款信息
            </summary>
            <param name="preVersionId">上一个版本Id</param>
            <param name="curVersionId">当前版本Id</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CreateFinance(System.String,System.String)">
            <summary>
            创建财务数据
            </summary>
            <param name="projId"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyFinance(System.String,System.String,System.String)">
            <summary>
            复制财务数据以及融资渠道
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyCostRate(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            复制节点支付科目的支付比例
            </summary>
            <param name="projId"></param>
            <param name="preVersionId"></param>
            <param name="versionId"></param>
            <param name="compareKey"></param>
            <param name="isFromTemplate">是否从模板拷贝</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CreateOriginalVersion(System.String,System.String,System.String)">
            <summary>
            创建决策初始的版本，从模板中拷贝信息
            </summary>
            <param name="projId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CreateVersionFromPre(System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            从上一个版本拷贝数据
            </summary>
            <param name="tableName"></param>
            <param name="name"></param>
            <param name="projId"></param>
            <param name="preVersionId"></param>
            <param name="versionId"></param>
            <param name="fields"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyPolicyDateFromTemplate(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            从模板中拷贝目录结构
            </summary>
            <param name="tableName"></param>
            <param name="name"></param>
            <param name="versionId"></param>
            <param name="fields"></param>
            <param name="keyValueDict"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyCostRateFromTemplate">
            <summary>
            从模板中复制科目节点支付比例
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyTreeTable(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String[],System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            复制树形结构目录
            </summary>
            <param name="tableName">树形结构的表名称</param>
            <param name="dataList">被复制的树型结构列表</param>
            <param name="fields">要复制的字段</param>
            <param name="keyValueDict">固定加入的值：比如树形目录挂在项目下可能就要加入项目的主键Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.GetTableDirs(System.String,System.String,System.String)">
            <summary>
            通过表名，项目id，版本id获取对应表的目录信息,
            </summary>
            <param name="tbName">表名</param>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.GetTableDirsByVersionId(System.String,System.String)">
            <summary>
            通过表名，项目id，版本id获取对应表的目录信息,
            </summary>
            <param name="tbName">表名</param>
            <param name="projId"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.CopyDataFromOldVersion(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            从上一个版本拷贝数据到新版本（从模板复制的新版本）
            </summary>
            <param name="tableName"></param>
            <param name="projId"></param>
            <param name="oldVersionId"></param>
            <param name="preVersionId"></param>
            <param name="fields"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.ConfirmPolicyData(System.String,System.String)">
            <summary>
            决策数据确认
            </summary>
            <param name="tbName"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.ConfirmCommonData(System.String,System.String,System.Int32)">
            <summary>
            确认总办，市场，设计数据
            </summary>
            <param name="tbName"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.ConfirmFinanceData(System.String,System.String)">
            <summary>
            确认财务数据
            </summary>
            <param name="tbName"></param>
            <param name="versionId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.ConfirmDetail(System.String,System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String[])">
            <summary>
            确认还款计划，销售回款计划
            </summary>
            <param name="tbName"></param>
            <param name="versionId"></param>
            <param name="details"></param>
            <param name="keys"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyVersionBll.ConfirmData(Yinhe.ProcessingCenter.DataRule.TableRule,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            确认决策数据
            </summary>
            <param name="rule"></param>
            <param name="dirList"></param>
            <param name="keys"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll">
            <summary>
            设备属性类型处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll.#ctor(System.String)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.AttrTypeBll.GetIdNameDic">
            <summary>
            获取品牌或者属性类型字典  key:Id value:名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll">
            <summary>
            流程传阅人员处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.FindById(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.FindByFlowInstanceId(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.HasTurnRightQuery(System.Int32,System.Int32)">
            <summary>
            获取当前是否被传阅,没过滤status 应为可能被过滤多次
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.FindByFlowInstanceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前当前用户被给予的权限列表
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.HasExistObj(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="flowInstanceId"></param>
            <param name="grantUserId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.FindAll">
            <summary>
            查找出所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.Insert(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.Insert(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowCirculationBll.CirculateComplete(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewUserControlBase">
            <summary>
            用户控件基类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.auth">
            <summary>
            权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.sysAuth">
            <summary>
            系统权限判断，不包括分项权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewUserControlBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MvcFilters.CommonSearch">
            <summary>
            通用搜索处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String,System.String)">
            <summary>
            优先级最高
            </summary>
            <param name="table"></param>
            <param name="query"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            第二优先级
            </summary>
            <param name="table"></param>
            <param name="query"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.#ctor(System.String)">
            <summary>
             第三优先级
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,MongoDB.Driver.MongoCursor{MongoDB.Bson.BsonDocument})">
            <summary>
            对列表进行分页搜索
            </summary>
            <param name="bsonDocQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32,System.Int32@,MongoDB.Driver.MongoCursor{MongoDB.Bson.BsonDocument})">
            <summary>
            对列表进行过滤搜索
            </summary>
            <param name="bsonDocQuery">集合</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,System.String,System.String,System.String)">
            <summary>
            单值查询
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageCount">当前总页数</param>
            <param name="tableName">表名</param>
            <param name="key">字段</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.Search(System.Int32,System.Int32@,System.String,System.String)">
            <summary>
            单值查询 
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageCount">当前总页数</param>
            <param name="tableName">表名</param>
            <param name="key">字段</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@)">
            <summary>
            查询字符串,该方法必须先构造非默认构造函数，即必须至少传入表名
            public CommonSearch(string table, IMongoQuery  query)或者
            public CommonSearch(string table, IMongoQuery  query)
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.String,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearchForFile(System.Int32,System.Int32@,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.QuickSearch(System.Int32,System.Int32@,System.String)">
            <summary>
            查询字符串，返回name 字段匹配keyWord的集合
            </summary>
            <param name="pageIndex">当前页数</param>
            <param name="pageCount"></param>
            <param name="keyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.GetBsonDocument">
            <summary>
            获取当前可以返回的数据列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MvcFilters.CommonSearch.GetPageCount(System.Int64,System.Int64)">
            <summary>
            获取分页数
            </summary>
            <param name="pageSize"></param>
            <param name="recordCount"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll">
            <summary>
            页面书签处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.FindByPageId(System.Int32,System.String)">
            <summary>
            通过页面ID查找书签
            </summary>
            <param name="id"></param>
            <param name="keyWord"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.FindByBookId(System.Int32,System.String)">
            <summary>
            通过任务书ID查找书签
            </summary>
            <param name="id"></param>
            <param name="keyWord"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.Update(MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageMarkBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll">
            <summary>
            页面内容版本处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.Update(MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyVersionBll.RecoveryBodyVersion(System.Int32,System.Int32)">
            <summary>
            更新页面版本
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll">
            <summary>
            设备通用处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetIdNameDic(System.String)">
            <summary>
            获取品牌或者属性类型字典  key:Id value:名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.CountBrandOrType(System.String,System.String)">
            <summary>
            统计品牌或者设备类型
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.InitBrandDic">
            <summary>
            初始化品牌类型字典key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.InitAttrValueDic">
            <summary>
            初始化属性类型值字典 key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.SortDicById(System.Collections.Generic.Dictionary{System.String,System.Int32},System.String)">
            <summary>
            根据名称对应ID对字典排序
            </summary>
            <param name="dic"></param>
            <param name="type"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetExistDic">
            <summary>
            获取有，无，不详字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.CountExist(System.String)">
            <summary>
            统计某设备有无不详信息
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetMax(System.Int32,System.Int32[])">
            <summary>
            获取最大值
            </summary>
            <param name="n1"></param>
            <param name="numbers"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetProjectDevices">
            <summary>
            获取在Device_attribute中有记录的设备类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetProjectAreas">
            <summary>
            获取所有的项目地区
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetProjectBuildingTypes">
            <summary>
            获取所有楼房类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetProjectList(System.String,System.String)">
            <summary>
            根据地区和房型或取项目列表
            </summary>
            <param name="area"></param>
            <param name="bType"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetWordsAvgLength(System.String[])">
            <summary>
            获取字符数组字符的平均长度
            </summary>
            <param name="strArr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.DeviceCommonBll.GetStrLength(System.String)">
            <summary>
            计算字符串的实际长度
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.SerieHelper">
            <summary>
            报表serie处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper">
            <summary>
            流程步骤岗位人员获取处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetFixStepUser(System.Int32,System.Int32)">
            <summary>
            获取当前步骤设定固定的人员
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetFixStepUsersDic(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取每个步骤对应设定固定的人员字典
            </summary>
            <param name="flowId"></param>
            <param name="stepIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepProjRoleUser(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤设定项目角色人员
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepProjRoleUsersDic(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取每个步骤对应设定项目角色人员字典
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="stepIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepProjRoleUserByFlowPostId(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤设定项目角色人员
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepProjRoleUser(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取当前步骤设定项目角色人员
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepPostUser(System.Int32,System.Int32)">
            <summary>
            获取当前岗位下人员
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowUserHelper.GetStepPostUsersDic(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取每个步骤对应岗位下人员字典
            </summary>
            <param name="flowId"></param>
            <param name="stepIds"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewPageBase">
            <summary>
            通用页面基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewPageBase.OnLoad(System.EventArgs)">
            <summary>
            重写加载方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.auth">
            <summary>
            分项权限控制对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.sysAuth">
            <summary>
            系统权限判断，不包括分项权限
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewPageBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.StorageData">
            <summary>
            数据存储类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Name">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Type">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Query">
            <summary>
            定位关键字
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.StorageData.Document">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.FormStatus">
            <summary>
            枚举相关
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.DataScopeEntity">
            <summary>
            角色数据权限实体
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.DataScopeEntity._RoleRightEntities">
            <summary>
            数据范围权限列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.ScopeId">
            <summary>
            数据范围Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleCategoryId">
            <summary>
            角色数据权限类别Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataTableName">
            <summary>
            数据对应表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataFeildName">
            <summary>
            数据对应表主键字段
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.DataId">
            <summary>
            数据实体主键Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.CreateUserId">
            <summary>
            创建用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.UpdateUserId">
            <summary>
            更新用户
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.UpdateDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.DataScopeEntity.RoleRightEntities">
            <summary>
            数据范围权限列表
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CalculateHelper">
            <summary>
            计算处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetCalculateResult(System.String)">
            <summary>
            获取计算值
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.InsertBlank(System.String)">
            <summary>
            为表达式插入空格
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.ConvertToRPN(System.String)">
            <summary>
            转化为逆波兰表达式
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetResult(System.String)">
            <summary>
            根据逆波兰表达式获取结构
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CalculateHelper.GetValue(System.Double,System.Double,System.Char)">
            <summary>
            简单四则运算
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="_operator"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.CalculateHelper.OperatorLevel">
            <summary>
            运算符优先级
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingData">
            <summary>
            定制报表出来处理基类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.groupById">
            <summary>
            分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.groupByName">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingData.statistics">
            <summary>
            分组统计值
            </summary>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.BookPageBll">
            <summary>
            任务书页面处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.BookPageBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindAllByBookId(System.Int32)">
            <summary>
            通过任务书ID或模板ID获取Page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByRootDim(System.String)">
            <summary>
            通过nodeKey获取节点下的所有子节点
            </summary>
            <param name="nodeKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindById(System.Int32)">
            <summary>
            通过主键获取Page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindAllRef(System.Int32)">
            <summary>
            查找所有引用的任务书
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByNodeKey(System.String)">
            <summary>
            通过nodeKey获取节点下的所有子节点
            </summary>
            <param name="nodeKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindAllChildNode(System.Int32)">
            <summary>
            获取所有子节点
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByNodeLevel(System.Int32,System.Int32)">
            <summary>
            通过层级获取Page
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByNodePid(System.Int32)">
            <summary>
            通过父节点id获取页面
            </summary>
            <param name="nodePid"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindParentNode(MongoDB.Bson.BsonDocument)">
            <summary>
            获取子页面的所有父页面
            </summary>
            <param name="childCat"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByLevelScope(System.Int32,System.Int32)">
            <summary>
            获取层级以内的页面
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindByLevelKey(System.Int32,System.String,System.Int32)">
            <summary>
            获取层级内的子页面
            </summary>
            <param name="level"></param>
            <param name="nodeKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindParentByNodekey(System.String)">
            <summary>
            获取页面的所有父页面
            </summary>
            <param name="nodeKey"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindChind(System.Int32)">
            <summary>
            根据id获取子页面
            </summary>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.HasDraft(System.Int32,System.Int32)">
            <summary>
            是否有草稿，并返回草稿
            </summary>
            <param name="pageBookId"></param>
            <param name="currUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GetLastestPageBody(MongoDB.Bson.BsonDocument)">
            <summary>
            获取最新版本的页面内容
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Search(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            查找
            </summary>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="keyWord"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindSubList(System.Int32)">
            <summary>
            获取节点下的子节点集
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.CalPrefixNum(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            获取节点编号
            </summary>
            <param name="pageList"></param>
            <param name="currPage"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindProjIdByPageId(System.Int32)">
            <summary>
            通过PageId,获取对应的分项
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Create(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            批量添加同一父页面的子页面
            </summary>
            <param name="matCatList"></param>
            <param name="nodePid"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Create(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            批量添加同一父页面的子页面
            </summary>
            <param name="matCatList"></param>
            <param name="matCatParent"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            更新页面
            </summary>
            <param name="matCat"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Delete(MongoDB.Bson.BsonDocument)">
            <summary>
            删除页面
            </summary>
            <param name="matCat"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.Delete(System.Int32)">
            <summary>
            删除页面
            </summary>
            <param name="matCatId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.MoveBookPage(System.Int32,System.Int32,System.String)">
            <summary>
            移动页面
            </summary>
            <param name="moveId"></param>
            <param name="toMoveId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GetChildNodeCount(System.Int32)">
            <summary>
            统计指定类目下的子类目个数
            </summary>
            <param name="matCatId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.ExsistName(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            判断同一父节点下是否有同名的类目
            </summary>
            <param name="nodePid"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.ExsistName(System.Int32,System.String,System.Int32)">
            <summary>
            判断同一父节点下是否有同名的类目
            </summary>
            <param name="nodePid"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.ExsistName(System.Int32,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String@,System.Int32)">
            <summary>
             判断同一父节点下是否有同名的类目
            </summary>
            <param name="nodePid"></param>
            <param name="matCatList"></param>
            <param name="existNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.CopyBookPage(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            复制页面
            </summary>
            <param name="originalId"></param>
            <param name="toCopyId"></param>
            <param name="type"></param>
            <param name="currentUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.CopyRootNode(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String,System.Int32,System.Int32)">
            <summary>
            复制根页面
            </summary>
            <param name="toCopy"></param>
            <param name="original"></param>
            <param name="copy"></param>
            <param name="type"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.CopyChildNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            复制子页面
            </summary>
            <param name="orginalChildList"></param>
            <param name="parent"></param>
            <param name="newParent"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.FindTemplateByPage(System.Int32,System.Int32,System.Int32@,System.String,System.String,System.String)">
            <summary>
            分页获取page模板
            </summary>
            <param name="currPage"></param>
            <param name="pageSize"></param>
            <param name="count"></param>
            <param name="orderBy"></param>
            <param name="order"></param>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.LoadPageTemplate(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            载入模板
             </summary>
             <param name="pageId"></param>
             <param name="type"></param>
             <param name="refPageId"></param>
             <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GenerateSnapshot(System.Int32)">
            <summary>
            生成页面快照
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GeneratePdf(System.Int32,System.String@,System.String)">
            <summary>
            生成任务书的pdf文档,单页面加载
            </summary>
            <param name="bookTaskId"></param>
            <param name="path"></param>
            <param name="addYinhooTag"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GeneratePdf(System.Int32,System.String,System.String@,System.String,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            任务书导出方法2:全页面加载
            </summary>
            <param name="bookTaskId"></param>
            <param name="path"></param>
            <param name="addYinhooTag"></param>
            <param name="offsets"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GeneratePdf2(System.Int32,System.String@,System.String)">
            <summary>
            按一级目录生成pdf
            </summary>
            <param name="bookTaskId"></param>
            <param name="path"></param>
            <param name="customerName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GetBookPageSnapshot(System.Int32,System.String@)">
            <summary>
            page快照路径
            </summary>
            <param name="pageId"></param>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GetBookPageOrgionImg(System.Int32,System.String@)">
            <summary>
            page页面原始大小图像路径
            </summary>
            <param name="pageId"></param>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.BookPageBll.GetBookPagePdf(System.Int32,System.String@)">
            <summary>
            任务书pdf文件存放路径
            </summary>
            <param name="bookId"></param>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelWriter">
            <summary>
            excel处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.#ctor(System.String)">
            <summary>
             构造函数
            </summary>
            <param name="sheetName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.SaveAsFile(System.String,System.String)">
            <summary>
            保存到文件中
            </summary>
            <param name="filePath"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.WithinMergeArea(System.Int32,System.Int32)">
            <summary>
            判断某一个单元格是否在合并的单元格内
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.AddCellData(System.String)">
            <summary>
            添加单元格数据
            </summary>
            <param name="data">数据值</param>
            <param name="mergeInfo">单元格合并信息</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.WriteData(System.String)">
            <summary>
            将html写入excel文件中
            </summary>
            <param name="htmlCode"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.AdjustColumnWidth">
            <summary>
            调整表格各列的宽度
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetCellStyle(System.Boolean)">
            <summary>
             获取单元格的格式
            </summary>
            <param name="isBold">isBold是否粗体</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetMaxColumnWidth(System.UInt16)">
            <summary>
            获取表格某一列的最大宽度
            </summary>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetMergeInfo(System.String)">
            <summary>
            获取单元格合并的额外信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.FilterTable(System.String)">
            <summary>
            将html的table标签内的加工成有效数据
            </summary>
            <param name="srcStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.GetStrLength(System.String)">
            <summary>
            获取字符串的长度,中文字符占两个字节
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Common.ExcelWriter.SetCellStyleByCellData(System.String)">
            <summary>
            设置单元格的样式
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.ExcelWriter.MergeInfo">
            <summary>
            合并单元格的信息，目前只支持行合并或者列合并，尚不支持同时合并行和列
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect">
            <summary>
            事务金额自动跳转步骤
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            事务金额自动跳转步骤
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.GetApprovedAmount(MongoDB.Bson.BsonDocument)">
            <summary>
            获取流程审批金额
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.CheckProperty(System.String[],MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            其他属性匹配
            </summary>
            <param name="checkPropertyArray"></param>
            <param name="instance"></param>
            <param name="tranStore"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.GetInstanceObjProperty(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取流程审批对象属性
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.canJumpStep(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            条件判断是否满足跳转条件
            </summary>
            <param name="approvedAmount">审批金额</param>
            <param name="stepTran"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.ApprovaedAmountReDirect.CheckExpressionCondition(System.Object,System.String,System.Object)">
            <summary>
            表达式过滤
            </summary>
            <param name="hitFeild"></param>
            <param name="conditionExp"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Identity">
            <summary>
            用户信息标识
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.Name">
            <summary>
                                Gets the name of the current user.
            </summary>
            <returns>
                                The name of the user on whose behalf the code is running.
            </returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.AuthenticationType">
            <summary>
                                Gets the type of authentication used.
            </summary>
            <returns>
                                The type of authentication used to identify the user.
            </returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Identity.IsAuthenticated">
            <summary>
                                Gets a value that indicates whether the user has been authenticated.
            </summary>
            <returns>
            true if the user was authenticated; otherwise, false.
            </returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ColumnRule">
            <summary>
            字段规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Name">
            <summary>
            字段间的唯一标示
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Type">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.IsPrimary">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.IsIdentity">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.SourceTable">
            <summary>
            外键源表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.SourceColumn">
            <summary>
            外键源字段
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Value">
            <summary>
            值,字段有的默认值或设置值
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ColumnRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ColumnRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ColumnRule.SetColumnRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应字段实体
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataOperation">
            <summary>
            mongo交互操作处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="nameStr"></param>
            <param name="querStr"></param>
            <param name="dataStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationDataBase(System.String)">
            <summary>
            设置操作数据库
            </summary>
            <param name="connStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationTable(System.String)">
            <summary>
            设置操作表
            </summary>
            <param name="tbName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetOperationData(System.String,System.String,System.String)">
            <summary>
            设置要进行数据库操作的数据
            </summary>
            <param name="nameStr"></param>
            <param name="queryStr"></param>
            <param name="dataStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetCurrentUserId">
            <summary>
            返回当前用户Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetCurrentUserName">
            <summary>
            返回当前用户名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetUserIPAddress">
            <summary>
            获取用户Id地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNativeQueryFindOne(System.String,System.String)">
            <summary>
            获取findeOne原生查询
            </summary>
            <param name="tbName"></param>
            <param name="queryInfo">包含大括号的查询信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNativeQueryDistinct(System.String,System.String)">
            <summary>
            获取distinct原生查询
            </summary>
            <param name="tbName"></param>
            <param name="queryInfo">包含大括号的查询信息</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchSaveStorageData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.StorageData})">
            <summary>
            保存级联数据
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchUpdateByPrimaryKey(System.String,System.Collections.Generic.List{System.String},MongoDB.Bson.BsonDocument)">
            <summary>
            通过主键批量更新
            </summary>
            <param name="tbName"></param>
            <param name="idList"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.BatchDeleteByPrimaryKey(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            通过主键批量删除
            </summary>
            <param name="tbName"></param>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.LogSystemData(Yinhe.ProcessingCenter.DataRule.TableRule,Yinhe.ProcessingCenter.SysLogType,System.String,System.String)">
            <summary>
            保存数据操作日志
            </summary>
            <param name="tbName">操作表</param>
            <param name="type">操作类型</param>
            <param name="beforeBson">操作前数据</param>
            <param name="afterBson">操作后数据</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.LogSysBehavior(Yinhe.ProcessingCenter.SysLogType,System.Web.HttpContextBase)">
            <summary>
            保存系统行为日志
            </summary>
            <param name="logType"></param>
            <param name="curUrl"></param>
            <param name="browser"></param>
            <param name="param"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOne">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOne(System.String)">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByKeyVal(System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByKeyVal(System.String,System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQueryStr(System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.FindOneByQueryStr(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindOneByQuery(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="tbName"></param>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAll">
            <summary>
            查找集合中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAll(System.String)">
            <summary>
            查找集合中所有记录
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyVal(System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyVal(System.String,System.String,System.String)">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyValList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据单个条件查找
            </summary>
            <param name="key"></param>
            <param name="valList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByKeyValList(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据单个条件查找
            </summary>
            <param name="tbName"></param>
            <param name="key"></param>
            <param name="valList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQueryStr(System.String)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQueryStr(System.String,System.String)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindAllByQuery(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindChildNodes(System.String)">
            <summary>
            查找当前节点的所有子,孙子节点(不包含当前节点)
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindChildNodes(System.String,System.String)">
            <summary>
            查找当前节点的所有子,孙子节点(不包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindTreeByRootId(System.String,System.String,System.Boolean)">
            <summary>
            查找当前节点的所有子,孙子节点(包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindParentNodeList(System.String)">
            <summary>
            查找当前节点的所有父,祖父节点(不包含当前节点)
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.FindParentNodeList(System.String,System.String)">
            <summary>
            查找当前节点的所有父,祖父节点(不包含当前节点)
            </summary>
            <param name="tbName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save">
            <summary>
            保存操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save(System.String,System.String,System.String)">
            <summary>
            保存操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Save(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            保存操作
            </summary>
            <param name="tbName"></param>
            <param name="query"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert">
            <summary>
            插入操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String)">
            <summary>
            插入操作
            </summary>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            插入操作
            </summary>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            插入操作
            </summary>
            <param name="valueDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,System.String)">
            <summary>
            插入操作
            </summary>
            <param name="tbName"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            插入操作
            </summary>
            <param name="tbName"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Insert(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            插入数据
            </summary>
            <param name="tbName"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update">
            <summary>
            更新操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String)">
            <summary>
            更新
            </summary>
            <param name="queryStr"></param>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新操作
            </summary>
            <param name="query"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String,System.String)">
            <summary>
            更新操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            更新操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr">格式如db.Organization.distinct('_id',{'guid':'" + subnode.Guid + "'})</param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Update(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <param name="tbData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete">
            <summary>
            删除操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(MongoDB.Driver.IMongoQuery)">
            <summary>
            删除
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String,System.String)">
            <summary>
            删除操作
            </summary>
            <param name="tbName"></param>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Delete(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            删除数据
            </summary>
            <param name="tbName"></param>
            <param name="queryData"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Move(System.String,System.String,System.String)">
            <summary>
            移动操作
            </summary>
            <param name="moveId"></param>
            <param name="moveToId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.Move(System.String,System.String,System.String,System.String)">
            <summary>
            节点的移动
            </summary>
            <param name="tbName"></param>
            <param name="moveId"></param>
            <param name="moveToId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.NoTreeMove(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            非树形节点移动
            </summary>
            <param name="tableEntity"></param>
            <param name="moveEntity"></param>
            <param name="toMoveEntity"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.TreeMove(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            树形节点的移动
            </summary>
            <param name="tableEntity"></param>
            <param name="moveEntity"></param>
            <param name="toMoveEntity"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.ProcessCascadeData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.CascadeRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            处理级联数据
            </summary>
            <param name="ruleList"></param>
            <param name="thisEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SaveStorageData(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.StorageData})">
            <summary>
            保存存储数据
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.CalculateValue(System.String,System.String,System.String)">
            <summary>
            计算值
            </summary>
            <param name="leftStr">左边值</param>
            <param name="rightStr">右边值</param>
            <param name="operatorStr">运算符</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.HasExistOperator(System.String)">
            <summary>
            判断是否具有运算符
            </summary>
            <param name="valStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetNewTreeNodeKeyAttr(Yinhe.ProcessingCenter.DataRule.TableRule,MongoDB.Bson.BsonDocument)">
            <summary>
            获取新树节点的4个关键属性
            </summary>
            <param name="tableEntity"></param>
            <param name="parentEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.SetCurrentUser">
            <summary>
            获取当前操作用户
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.String,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,MongoDB.Bson.BsonDocument,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickUpdate(System.String,System.Collections.Generic.Dictionary{MongoDB.Bson.BsonDocument,System.String})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Yinhe.ProcessingCenter.DataOperation.QuickDelete(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})”忽略有格式错误的 XML 注释 -->
        <member name="M:Yinhe.ProcessingCenter.DataOperation.QuickInsert(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            插入数据
            </summary>
            <param name="tbName"></param>
            <param name="dataBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.QuickDelete(System.String,System.String,System.String)">
            <summary>
            删除操作
            </summary>
            <param name="tbName"></param>
            <param name="keyFiled">主键</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataOperation.GetFindOneQueryStr(System.String,System.String,System.String)">
            <summary>
            返回单个查询字符串
            </summary>
            <param name="tbName"></param>
            <param name="keyFiled"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MutualData">
            <summary>
            mongo表名查询参数实体
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.tbName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.queryStr">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.MutualData.dataStr">
            <summary>
            定位关键字
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.PathAnalyseZHHY">
            <summary>
            中海弘扬AD路径解析
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileOperationHelper">
            <summary>
            文件处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.FindFileListByStructId(System.Int32)">
            <summary>
            获得目录下的文件列表
            </summary>
            <param name="structId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadSingleFile(Yinhe.ProcessingCenter.Document.FileUploadObject)">
            <summary>
            上传单文件
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFiles(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            上传多文件
            </summary>
            <param name="objList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadNewVersion(Yinhe.ProcessingCenter.Document.FileUploadVersionObject)">
            <summary>
            上传新版本
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SaveSingleFile(Yinhe.ProcessingCenter.Document.FileUploadObject)">
            <summary>
            文件保存方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFilesTree(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            上传多文件
            </summary>
            <param name="objList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.FolderTreeInsert(Yinhe.ProcessingCenter.Document.TreeNode,Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            将树形结构插入数据库 并对主键赋值  
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UploadMultipleFilesPackage(System.Collections.Generic.List{Yinhe.ProcessingCenter.Document.FileUploadObject},Yinhe.ProcessingCenter.Document.UploadType)">
            <summary>
            文件包上传
            </summary>
            <param name="objList">文件列表</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByRelId(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileId(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFileByFileVerId(System.Int32)">
            <summary>
            删除文件文件版本
            </summary>
            <param name="fileRelId">关联表ID</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFile(System.String,System.String,System.String)">
            <summary>
            文件删除
            </summary>
            <param name="tableName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.DeleteFolder(System.Int32)">
            <summary>
            删除该文件夹下的所有子节点及其文件
            </summary>
            <param name="structId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SetCoverImageNew(System.String,System.String,System.String,System.String)">
            <summary>
            未实时保存时设置封面图
            </summary>
            <param name="fileObjId"></param>
            <param name="tableName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.SetFileDescription(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            文档描述
            </summary>
            <param name="propDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.UpdateFileDescription(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            更新文件描述
            </summary>
            <param name="fileId"></param>
            <param name="propDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.ResultConver(System.Collections.Generic.List{Yinhe.ProcessingCenter.InvokeResult{Yinhe.ProcessingCenter.Document.FileUploadSaveResult}})">
            <summary>
            对象转换 将文件上传结果对象转成字符串 
            参数格式 param 前置参数@关联表id fileRetId-文件id fileId-版本id fileVerId 
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileOperationHelper.GetImgPath(System.String)">
            <summary>
            获取默认缩略图路径
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.UploadType">
            <summary>
            文件上传类型枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.File">
            <summary>
            普通文件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.Package">
            <summary>
            文件包
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Document.UploadType.Folder">
            <summary>
            文件夹
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileParam">
            <summary>
            A2系统文件参数对象 新旧系统能够同一 避免接口修改
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadObject">
            <summary>
            文件上传对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileTypeId">
            <summary>
            所属类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileObjId">
            <summary>
            所属对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.tableName">
            <summary>
            关联表名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.keyName">
            <summary>
            关联表主键名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.keyValue">
            <summary>
            关联表主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.uploadType">
            <summary>
            是否文件夹
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.isPreDefine">
            <summary>
            是否预定义文档
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.isCover">
            <summary>
            是否封面图
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.propvalueDic">
            <summary>
            文档属性字典
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.rootDir">
            <summary>
            根目录
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.structId">
            <summary>
            所属目录
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.subMapParam">
            <summary>
            文件子图参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.guid2d">
            <summary>
            二维码字符串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_profId">
            <summary>
            文档关联表专业属性值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_stageId">
            <summary>
            文档关联表阶段属性值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadObject.fileRel_fileCatId">
            <summary>
             文档关联表类别属性值
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadSaveResult">
            <summary>
            文件保存结果
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.param">
            <summary>
            前置参数
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileRelId">
            <summary>
            关联表ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileId">
            <summary>
            文件id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.fileVerId">
            <summary>
            文件版本
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadSaveResult.ext">
            <summary>
             扩展名
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileUploadVersionObject">
            <summary>
            版本上传对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.fileId">
            <summary>
            主键值
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.localPath">
            <summary>
            本地路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Document.FileUploadVersionObject.propvalueDic">
            <summary>
            文档属性字典
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.StdLibInfo">
            <summary>
            标准库内置数据处理类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.HtmlToImg">
            <summary>
            将html页面生成图片
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.HtmlToImg.WIDTH">
            <summary>
            默认宽度
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.HtmlToImg.HEIGHT">
            <summary>
            默认高度
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            根据页面Url地址生成网页快照
            </summary>
            <param name="url">页面地址</param>
            <param name="originPath">生成的原始大小的图片路径</param>
            <param name="thumbPath">生成的缩略图路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            根据HTML代码生成页面内容快照
            </summary>
            <param name="htmlText">HTML代码</param>
            <param name="originPath">生成的原始大小的图片路径</param>
            <param name="thumbPath">生成的缩略图路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="noUse">此参数暂时没有使用</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlToImg.ReplaceSrc(System.String)">
            <summary>
            在src属性前加上域名
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Width">
            <summary>
            缩略图宽度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Height">
            <summary>
            缩略图高度
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.Url">
            <summary>
            将被生成图片的页面Url地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.HtmlText">
            <summary>
            将被生成图片的HTML代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.OriginPath">
            <summary>
            生成的原始大小的图片路径
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.HtmlToImg.ThumbPath">
            <summary>
            生成的缩略图路径
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.HtmlHelper">
            <summary>
            Html处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.RemoveHTML(System.String)">
            <summary>
            去除HTML标记
            </summary>
            <param name="Htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.Html2Img(System.String,System.String)">
            <summary>
            将html页面生成pdf文档，异步方式
            </summary>
            <param name="url"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.Html2PDFSynch(System.String,System.String,System.String)">
            <summary>
            将html页面生成pdf文档，同步方式
            </summary>
            <param name="url"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String)">
            <summary>
            根据页面url，按节点目录生成pdf和对应书签(空页面不生成)
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf2(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String)">
            <summary>
            根据页面url，按节点目录生成pdf和对应书签(生成所有页面)
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf3(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            整个任务书展示页面生成pdf，同时计算页码，生成书签(此方法不完善，书签定位不正确)
            </summary>
            <param name="docList"></param>
            <param name="url"></param>
            <param name="savePath"></param>
            <param name="customName"></param>
            <param name="tops"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.MergePdf4(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.String,System.String,System.String)">
            <summary>
            按一级目录请求页面,二级和以后的目录全部不生成，书签只能定位到一级目录
            </summary>
            <param name="docList"></param>
            <param name="savePath"></param>
            <param name="customerName"></param>
            <param name="bookTaskUrl">为a标签包含的链接</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.AddHeader(WebSupergoo.ABCpdf7.Doc@,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String,System.String)">
            <summary>
            添加页眉和页脚
            </summary>
            <param name="doc"></param>
            <param name="titleDic"></param>
            <param name="customName"></param>
            <param name="bookTaskUrl"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.GetPath(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},Yinhe.ProcessingCenter.PdfDoc)">
            <summary>
            获取abcpdf的bookmark层级目录的路径，需要查看ABCpdf的Api文档
            </summary>
            <param name="pageList"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.HtmlHelper.GetPath(System.Collections.Generic.List{Yinhe.ProcessingCenter.PdfDoc},System.Int32)">
            <summary>
            递归方法，获取当前页面的路径
            </summary>
            <param name="pageList"></param>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PdfDoc">
            <summary>
            辅助实体类，将被生成PDF页面的对象
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.PdfDoc.Expended">
            <summary>
            是否展开节点
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.LogError">
            <summary>
            记录日志
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll">
            <summary>
            地块处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll.LandDirCreate(System.String,System.Int32,System.Int32)">
            <summary>
            创建地块目录
            </summary>
            <param name="tbName"></param>
            <param name="landId"></param>
            <param name="templateId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll.LandInfoInit(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            初始化地块信息
            </summary>
            <param name="landId"></param>
            <param name="?"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.LandProjectDirBll.ProjectInfoInit(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            初始化项目信息
            </summary>
            <param name="projId"></param>
            <param name="templateDC">传入表名和对应的模板Id</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper">
            <summary>
            流程实例相关处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.ExistedActvedInstance(System.String,System.String,System.String,System.String)">
            <summary>
            是否存在相同的流程实例
            </summary>
            <param name="tableName"></param>
            <param name="referFieldName"></param>
            <param name="referFieldValue"></param>
            <param name="flowId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.CanExecute(System.String,System.String,System.Int32)">
            <summary>
            判断当前流程实例当前人是否可以操作
            </summary>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.InitialExecuteCondition(System.String,System.String,System.Int32,System.Boolean@,System.String@)">
            <summary>
            初始化流程执行情况，用户与流程实例详细页面展示
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <param name="hasOperateRight"></param>
            <param name="curAvaiableUserName"></param>
            <param name="curStep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.InitialExecuteCondition(System.String,System.String,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            初始化流程执行情况，用户与流程实例详细页面展示，新增侨鑫转办功能，被转办人不能进行成功跳往下步操作
            </summary>
            <param name="flowId">流程Id</param>
            <param name="flowInstanceId"></param>
            <param name="userId"></param>
            <param name="hasEditRight">是否有编辑的权限</param>
            <param name="hasOperateRight">是否有所有的权限</param>
            <param name="hasOperateRight">是否可以强制结束会签</param>
            <param name="curAvaiableUserName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetCurOrginalActionUser(System.String,System.Int32)">
            <summary>
            获取当前用户对应流程实例的步骤
            </summary>
            <param name="flowInstanceId"></param>
            <param name="curUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetLastUserGrant(System.String,System.Int32)">
            <summary>
            获取转办操作上步骤的操作记录
            </summary>
            <param name="flowInstanceId"></param>
            <param name="curUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.InitialUserGrantCondition(System.String,System.Int32,System.Int32,System.Boolean@,System.Int32@)">
            <summary>
            获取流程步骤转办情况
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.CreateInstance(MongoDB.Bson.BsonDocument)">
            <summary>
            创建流程实例
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.SaveInstance(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            创建流程实例并制定操作人  步骤2|H|1,2,3,4|Y|步骤2|H|1,2,3,4
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.UpdateInstance(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            更新流程实例并制定操作人  步骤2|Y|1,2,3,4|H|步骤2|Y|1,2,3,4，主要用来发起流程并设定流程操作人
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.ExecAction(MongoDB.Bson.BsonDocument,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            执行流程动作
            1.更新当前流程实例的当前步骤，当前状态
            2.添加跟踪数据
            </summary>
            <param name="instance">当前流程</param>
            <param name="actionId">要执行的动作</param>
            <param name="userId">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.ExecAction(MongoDB.Bson.BsonDocument,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32)">
            <summary>
            执行流程动作,自由跳转
            1.更新当前流程实例的当前步骤，当前状态
            2.添加跟踪数据
            </summary>
            <param name="instance">当前流程</param>
            <param name="actionId">要执行的动作</param>
            <param name="userId">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.SaveFormAndExecAction(MongoDB.Bson.BsonDocument,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            保存表单并执行动作
            </summary>
            <param name="instance"></param>
            <param name="actionId"></param>
            <param name="content"></param>
            <param name="jumpStepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.ExecStepTranSysAction(MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            执行系统事务直接自动跳转动作
            </summary>
            <param name="instance"></param>
            <param name="jumpStepId"></param>
            <param name="jumpStepId">是否直接结束</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetCurStepUser(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取当前步骤涉及的人员, 三种情况，一种指定岗位，指定人，2.指定人 3 指定岗位 4.项目角色
            可以有可能返回多个用户列表，可用于启动流程的时候再度筛选人员，没通过转办人员过滤
            </summary>
            <param name="flowId"></param>
             <param name="flowInstanceId">可传0</param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetCurStepUser(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤涉及的人员, 三种情况，一种指定岗位，指定人，2.指定人 3 指定岗位 4.项目角色
            可以有可能返回多个用户列表，可用于启动流程的时候再度筛选人员,转办人员过滤
            </summary>
            <param name="flowId"></param>
             <param name="flowInstanceId">可传0</param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetStepUserIdsDic(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取每个步骤对应的人员Id字典
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="stepIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.TurnRightUserList(System.Int32,System.Int32)">
            <summary>
            进行转办过滤
            </summary>
            <param name="instanceActionUserId"></param>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.TurnRightUserList(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            进行转办过滤,当前人转办成什么人
            </summary>
            <param name="instanceActionUser"></param>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetFlowInstanceAvaiableStepUserForFlowMap(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤真正被允许可执行的一个用户,用于流程图展示
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetFlowInstanceAvaiableStepUser(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取当前步骤真正被允许可执行的一个用户，一般为一个，有可能为多个，当为一个部门多个人审核的时候,
            用于流程启动中判断当前步骤真正可执行的人员,可用于判断是否需要在流程启动的时候过滤人员
            </summary>
            <param name="flowId"></param>
             <param name="flowInstanceId">可传0</param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetUserAssociatedFlowInstance(System.Int32)">
            <summary>
            获取用户涉及的流程实例列表，一般用于个人工作台
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetUserAssociatedFlowInstance(System.Int32,System.Int32)">
            <summary>
            取出涉及到我的所有流程  statue==0 进行中的  1 所有的
            </summary>
            <param name="userId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetUserApprovaledFlowInstance(System.Int32)">
            <summary>
            获取我审批过后的流程实例
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetUserWaitForApprovaleFlow(System.Int32)">
            <summary>
            获取轮到当前人审批的流程实例，有实例
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GeneralUserWaitForApprovaleFlow(System.Int32)">
            <summary>
            通用获取轮到当前人审批的流程实例，有实例，2014.1.14更新项目计划模板后最新获取等待用户审批的流程，2014.1.14最新版本发布后更新才可用
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetUserWaitForStartFlow(System.Int32)">
            <summary>
            获取发起人是当前用户的流程，并且已经与用户关联的流程，没有实例
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetDesignChangeWaitForStartFlow(System.Int32)">
            <summary>
            获取发起人是当前用户的流程，并且已经与用户关联的流程，没有实例
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetFlowInstanceAssociateUser(System.Int32,System.Int32)">
            <summary>
            获取流程实例中涉及的所有人
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.DoJumpInTransaction(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            执行进入事务
            </summary>
            <param name="nextStep"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.DoWaitTransaction(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            执行等待事务
            </summary>
            <param name="preStep"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.DoImmediatelyTransaction(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            立即执行跳出事务
            </summary>
            <param name="preStep"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetCanLaunchUserIds(System.Int32)">
            <summary>
            获取流程实例可发起人
            </summary>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.ZHHYGetLaunchUserIds(System.Int32)">
            <summary>
            ZHHY判断流程的可发起人
            </summary>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetFlowInstanceSignUser(System.Int32,System.Int32)">
            <summary>
            获取流程实例签发人
            </summary>
            <param name="flowId"></param>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetLatestReplyConent(System.String)">
            <summary>
            获取当前人最近回复的内容
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.CopyFlowStepProperty(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            将步骤额外属性值复制为当前流程模板对象
            </summary>
            <param name="actionUser"></param>
            <param name="curStepObj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetInstancePossibleSteps(System.Int32)">
            <summary>
            获取流程实例实际可能执行的步骤列表
            </summary>
            <param name="flowInstanceId">流程实例id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetInstancePossibleSteps(System.Int32,System.Double)">
            <summary>
            获取流程实例实际可能执行的步骤列表
            </summary>
            <param name="flowInstanceId"></param>
            <param name="money"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.FlowInstanceHelper.GetInstancePossibleSteps(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Double})">
            <summary>
            获取流程实例实际可能执行的步骤列表
            </summary>
            <param name="flowId">指定流程模板id</param>
            <param name="flowInstanceId">流程实例id</param>
            <param name="startStepIds">指定起始步骤id</param>
            <param name="money">指定判断金额，为null则由事务自行获取</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Principal">
            <summary>
            用户凭证处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Principal.IsInRole(System.String)">
            <summary>
                                Determines whether the current principal belongs to the specified role.
            </summary>
            <returns>
            true if the current principal is a member of the specified role; otherwise, false.
            </returns>
            <param name="role">
                                The name of the role for which to check membership. 
                            </param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Principal.Identity">
            <summary>
                                Gets the identity of the current principal.
            </summary>
            <returns>
                                The <see cref="T:System.Security.Principal.IIdentity" /> object associated with the current principal.
            </returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ReportReq">
            <summary>
            报表参数处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ReportReq.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ReportReq.GetDesignParam">
            <summary>
            获取设计报表的相关参数
            </summary>
            <param name="report">报表实体</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.SQLGetDataList">
            <summary>
            AD数据获取处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.GetBsonDocumentDataList(System.String,System.String)">
            <summary>
            获取bson数据列表
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.DeleteData(System.String,System.String)">
            <summary>
            清空数据库
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.SQLGetDataList.InsertData(System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="connStr"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.FileCommonOperation">
            <summary>
            文件通用处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetThumbImg(System.Int32,System.String)">
            <summary>
             获取缩略图
            </summary>
            <param name="doc"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetThumbImg(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取缩略图
            </summary>
            <param name="doc"></param>
            <param name="spec"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.StringReplace(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            字符串替换
            </summary>
            <param name="fileId">文件ID</param>
            <param name="sourSring">原字符串</param>
            <param name="replaceString">替换字符串</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientOnlineRead(System.Int32)">
            <summary>
            在线查看方法
            </summary>
            <param name="fileId"></param>
            <returns></returns>r
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientOnlineRead(MongoDB.Bson.BsonDocument)">
            <summary>
            在线查看方法
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientDownLoad(System.Int32)">
            <summary>
            下载方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.FileCommonOperation.GetClientDownLoad(MongoDB.Bson.BsonDocument)">
            <summary>
            下载方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeHandle">
            <summary>
            树形结构操作基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些事叶子节点，每个节点需要占据的行数、列数
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.CalcLeafNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            计算叶子节点，如果为叶子节点则isLeaf为1
            </summary>
            <param name="treeNodes"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHandle.InitTableNode(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            对传入的数据结构进行计算，哪些是叶子节点，每个节点需要占据的行数、列数,剩余列数放在第几级
            </summary>
            <param name="treeNodes">树形结构数据</param>
            <param name="maxLevel">传入结构的最大深度</param>
            <param name="colLevel">剩余列数所在级</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeExtensions">
            <summary>
            树形借款扩展方法
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeExtensions.LeafNode(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument})">
            <summary>
            获取叶子节点
            </summary>
            <param name="treeList"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyLogBll">
            <summary>
            决策日志处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.PolicyLogBll.HasLogs(System.String,System.String,System.String)">
            <summary>
            是否有日志
            </summary>
            <param name="tbName"></param>
            <param name="tbKey"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll">
            <summary>
            页面临时内容处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageTempBodyBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll">
            <summary>
            任务书页面引用对象处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.Update(MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageRefObjectBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll">
            <summary>
            文件签入签出处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.FileCheckManageBll.UpdateCheckOutTime(System.Int32,System.Int32)">
            <summary>
            判断是否可签入签出
            </summary>
            <param name="pageId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll">
            <summary>
            豪宅相关处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll.GetStatistics(System.String,System.Linq.IGrouping{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取统计数据值
            </summary>
            <param name="tabName"></param>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.LuxuriousHouse.LuxuriousHouseBll.GetFirstSaleDateByProjId(System.String)">
            <summary>
            根据项目ID获取最早销售记录中的销售年月
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll">
            <summary>
            项目计划处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.FindGroupExpLib">
            <summary>
            获取项目模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopySecPlan(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            赋值辅助计划
            </summary>
            <param name="copyId">对应对象Id</param>
            <param name="srcId">需要初始化的对象</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopyObject(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            赋值计划信息
            </summary>
            <param name="copyObj"></param>
            <param name="srcObj"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.Update(MongoDB.Bson.BsonDocument,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            更新计划任务
            </summary>
            <param name="secPlan"></param>
            <param name="managerUserId"></param>
            <param name="managerProfId"></param>
            <param name="currUserId"></param>
            <param name="currUserProfId"></param>
            <param name="checkMe"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            更新计划任务
            </summary>
            <param name="secPlan"></param>
            <param name="managerUserId"></param>
            <param name="managerProfId"></param>
            <param name="currUserId"></param>
            <param name="currUserProfId"></param>
            <param name="checkMe"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            主要用于载入模板设置
            </summary>
            <param name="secPlan"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.InititalDiagramTask(MongoDB.Bson.BsonDocument)">
            <summary>
            用户初始化对应脉络图节点
            </summary>
            <param name="addList"></param>
            <param name="updateList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CreatePlanTaskFromExpLib(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据公司经验创建任务
            </summary>
            <param name="copyObj">经验库对应辅助计划</param>
            <param name="srcObj">需要初始化,被复制的辅助计划</param>
            <param name="UserId">用户Id</param>
            <param name="ForeignKey">传入基础数据参数</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopyPlanRelateion(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            批量复制任务关联
            </summary>
            <param name="copyObj"></param>
            <param name="srcObj"></param>
            <param name="UserId"></param>
            <param name="projFileLibId"></param>
            <param name="ObjIdsList"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopyOperatingPointList(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            复制运营点
            </summary>
            <param name="copyObj"></param>
            <param name="srcObj"></param>
            <param name="UserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopyTaskGroupList(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            复制分组
            </summary>
            <param name="copyObj"></param>
            <param name="srcObj"></param>
            <param name="UserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.CopyTaskFormulaList(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            公式复制
            </summary>
            <param name="copyObj"></param>
            <param name="srcObj"></param>
            <param name="userId"></param>
            <param name="ObjIdsList"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.IsIgnorePeople">
            <summary>
            是否载入人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.IsIgnoreDate">
            <summary>
            是否载入人员
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.IsIgnorePassed">
            <summary>
            是否忽略跳过任务
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.OffSetDay">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.OffSetMonth">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.DesignManage_PlanBll.OffSetYear">
            <summary>
            任务时间偏移量
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.CopyBsonHandle">
            <summary>
            bson复制处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.CopyBsonHandle._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBson(System.String,MongoDB.Bson.BsonDocument,System.String,System.String[])">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBson(System.String,MongoDB.Bson.BsonDocument,System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBsons(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[])">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.CopyBsonHandle.CopyBsons(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拷贝列表信息
            </summary>
            <param name="tableName"></param>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.TranFactory">
            <summary>
            事务对象工厂
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.TranFactory.Create(System.String)">
            <summary>
            创建具体事务对象
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.TranFactory.ExecuteTran(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument)">
            <summary>
            新建线程，批量执行事务
            </summary>
            <param name="tranList"></param>
            <param name="userId"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.TranFactory.ExecuteTranImmediately(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,MongoDB.Bson.BsonDocument)">
            <summary>
             立即批量执行事务
            </summary>
            <param name="tranList"></param>
            <param name="userId"></param>
            <param name="instance"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.BusinessFlow.TranFactory.Instance">
            <summary>
            返回工厂实例
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AuthManage">
            <summary>
            角色验证处理
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage.CHECKRIGHTAG">
            <summary>
            用于设置Html按钮的标签属性
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetUserFunctionRight(System.Int32)">
            <summary>
            获取用户所有系统功能权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.NewGetUserFunctionRight(System.Int32)">
            <summary>
            重写获取用户所有系统功能权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.FindUserFunctionRight(System.Int32)">
            <summary>
            获取用户的所有功能权限
            </summary>
            <param name="userId">用户id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckRight(System.String)">
             <summary>
             检查是否拥有响应权限
             </summary>
             <param name="rightCode">
             多个权限 MODULECODE_RIGHTCODE|1|数据对象Id_数据实例Id,MODULECODE_RIGHTCODE
            MODULECODE_RIGHTCODE|userId_1
            MODULECODE_RIGHTCODE|数据对象Id_数据实例Id
            MODULECODE_RIGHTCODE|userId_1|数据对象Id_数据实例Id
             MODULECODE_RIGHTCODE --权限代码
            userId_1 --标示具有指定权限代码并且数据的创建人是本人
            数据对象Id_数据实例Id --指定该权限项验证的是指定数据对象，数据实例的权限（比如某个项目的权限）
             </param>
             <returns></returns>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage._DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AuthManage._AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.CheckDataRight(System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            检查数据权限代码
            </summary>
            <param name="dataObjId"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCode(System.Int32,Yinhe.ProcessingCenter.Common.RightCodeEnum,System.Nullable{System.Int32})">
            <summary>
            获取标准成果库权限代码
            </summary>
            <param name="libId">库Id</param>
            <param name="code"></param>
            <param name="createUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCodeTag(System.String[])">
            <summary>
            获取标准成果库权限代码标签
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthManage.GetCode(Yinhe.ProcessingCenter.Common.StandarLibEnum,Yinhe.ProcessingCenter.Common.RightCodeEnum,System.Nullable{System.Int32})">
            <summary>
            获取标准成果库权限代码
            </summary>
            <param name="libId">库Id</param>
            <param name="code"></param>
            <param name="createUserId"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.AuthManage.AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll">
            <summary>
            设备管理Excel涉及处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.CheckFileExt(System.String,System.String)">
            <summary>
            判断文件后缀的合法性
            </summary>
            <param name="fileName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetSummarySheetName(System.Collections.Generic.List{System.String})">
            <summary>
            获取汇总表的sheetName
            </summary>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetDataTable(System.String)">
            <summary>
            获取要插入数据库的dataTable 
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetPassedMiliSecond(System.DateTime)">
            <summary>
            获取时间间隔，毫秒为单位
            </summary>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetRowCount(System.Data.DataTable)">
            <summary>
            获取有效行数
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.InitBrandDic">
            <summary>
            初始化品牌类型字典key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.InitAttrValueDic">
            <summary>
            初始化属性类型值字典 key:名称 value:Id
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.InitTable(System.String)">
            <summary>
            初始化数据库中品牌表
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.WriteProjectAtt(System.Data.DataTable,System.String)">
            <summary>
            写入项目属性
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetAttCatPosition(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.Int32,System.Int32)">
            <summary>
            获取某一行属性对应的设备类型Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetCatRowIndex(System.Int32,System.Int32)">
            <summary>
            根据position获取在表格中的行索引
            </summary>
            <param name="catId"></param>
            <param name="rowCount"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetPosition(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算某一单元格对应的Position值
            </summary>
            <param name="rowCount"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetParentPosition(System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取某个节点的父节点position
            </summary>
            <param name="dt"></param>
            <param name="rowCount"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetIdNameDic(System.String)">
            <summary>
            获取品牌或者属性类型字典  key:Id value:名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.CountBrandOrType(System.String,System.String)">
            <summary>
            统计品牌或者设备类型
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.SortDicById(System.Collections.Generic.Dictionary{System.String,System.Int32},System.String)">
            <summary>
            根据名称对应ID对字典排序
            </summary>
            <param name="dic"></param>
            <param name="type"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetExistDic">
            <summary>
            获取有，无，不详字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.CountExist(System.String)">
            <summary>
            统计某设备有无不详信息
            </summary>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetMax(System.Int32,System.Int32[])">
            <summary>
            获取最大值
            </summary>
            <param name="n1"></param>
            <param name="numbers"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetProjectDevices">
            <summary>
            获取在Device_attribute中有记录的设备类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetProjectAreas">
            <summary>
            获取所有的项目地区
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetProjectBuildingTypes">
            <summary>
            获取所有楼房类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.DeviceBll.GetProjectList(System.String,System.String)">
            <summary>
            根据地区和房型或取项目列表
            </summary>
            <param name="area"></param>
            <param name="bType"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.CEOPolicyDesignBll">
            <summary>
            CEO决策设计
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.CEOPolicyDesignBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CEOPolicyDesignBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CEOPolicyDesignBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.CEOPolicyDesignBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll">
            <summary>
            设计变更处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllChangeCmd">
            <summary>
            获取所有已通过审批的变更单的指令单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllChangeCmdLogs(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取指令单所有的操作记录
            </summary>
            <param name="cmdIdList">指令单id列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllSignOutChangeCmd(System.Int32)">
            <summary>
            获取所有需要指定人员签发的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetNotSignOutChangeCmd(System.Int32)">
            <summary>
            获取未签发的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllSignInChangeCmd(System.Int32)">
            <summary>
            获取所有需要指定人员签收的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetNotSignInChangeCmd(System.Int32)">
            <summary>
            获取未签发的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllReportChangeCmd(System.Int32)">
            <summary>
            获取所有抄报给指定人员的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetReportReadChangeCmd(System.Int32)">
            <summary>
            获取所有抄报给指定人员且已经阅读的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetNotReportReadChangeCmd(System.Int32)">
            <summary>
            获取所有抄报给指定人员且已经阅读的指令单
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllSignOutCmdHistory(System.Int32)">
            <summary>
            获取指定人员所有签发历史对应指令单,返回DesignChangeCommand实例
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.GetAllReadCmdHistory(System.Int32)">
            <summary>
            获取指定人员所有签收历史对应指令单,返回DesignChangeCommand实例
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.DesignChangeBll.AddReportReadChangeCmdLog(System.Int32,System.Int32)">
            <summary>
            新增抄报人阅读记录
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.UpdateTaskStatus">
            <summary>
            更新计划状态为进行中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.UpdateTaskStatus.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改计划状态为进行中
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll">
            <summary>
            流程步骤处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetNextStep(System.Int32,System.Int32,MongoDB.Bson.BsonDocument)">
            <summary>
            获取该步骤的下一个步骤
            </summary>
            <param name="flowId"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetNextStep(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取该步骤的下一个步骤
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetStartStep(System.Int32)">
            <summary>
            获取该发起步骤
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetActionRefuseStep(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取该发起步骤
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetGroupRefuseStep(System.Int32,System.Int32)">
            <summary>
            获取该驳回动作后，应该执行的步骤,当执行的步骤是领导集团步骤时候需要退回集团领导的第一个步骤
            </summary>
            <param name="flowId"></param>
            <param name="preStepId">当前步骤</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.GetSignStep(System.Int32)">
            <summary>
            获取流程模板签发步骤
            </summary>
            <param name="flowId"></param>
            <param name="stepId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            添加实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowStepBll.SaveStepTran(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            保存步骤编辑
            </summary>
            <param name="stepId"></param>
            <param name="inTranIdArray"></param>
            <param name="waitTranIdArray"></param>
            <param name="outTranIdArray"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ConditionRule">
            <summary>
            规则条件处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ConditionRule.ConditionStr">
            <summary>
            条件字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ConditionRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.#ctor(System.String)">
            <summary>
            带条件字符串的构造函数
            </summary>
            <param name="conditionStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.SetConditionRule(System.String)">
            <summary>
            设置对象值
            </summary>
            <param name="conditionStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ConditionRule.GetResult(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取条件判断结构
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.CascadeRule">
            <summary>
            级联规则,继承基础操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Event">
            <summary>
            级联触发事件类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Time">
            <summary>
            级联触发时间时间
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Condition">
            <summary>
            触发条件
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.CascadeRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.CascadeRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.CascadeRule.SetCascadeRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应级联规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN">
            <summary>
            苏宁AD路径解析
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetDepPath(System.String)">
            <summary>
            获取部门path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetDepCode(System.String)">
            <summary>
            部门标识
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetDepParentName(System.String)">
            <summary>
            获取父级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetGrandParentName(System.String)">
            <summary>
            获取爷级部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetDepLevel(System.String)">
            <summary>
            获取部门级别
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetUserPath(System.String)">
            <summary>
            获取用户Path
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetUserCode(System.String)">
            <summary>
            获取用户标识 LDAP://10.0.0.1/CN=王鸿斌,OU=财务管理中心,OU=苏宁环球股份,OU=用户,DC=suning,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetUserDepartment(System.String)">
            <summary>
            获取用户所属部门LDAP://10.0.0.1/CN=李洁,OU=历史用户,OU=用户,DC=suning,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetUserGrandDepartment(System.String)">
            <summary>
            获取用户所属部门的父部门
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetDepPathCut(System.String)">
            <summary>
            LDAP://192.168.8.33/OU=永升大厦工程部,OU=NQZA.永升大厦管理处,OU=NQ.永升物业上海区域,OU=N.上海永升物业管理有限公司,OU=旭辉集团股份有限公司,DC=cifi,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.PathAnalyseSN.GetUserPathCut(System.String)">
            <summary>
            LDAP://192.168.8.33/CN=任文立,OU=FF.工程部,OU=F.嘉兴旭辉,OU=旭辉集团股份有限公司,DC=cifi,DC=com,DC=cn
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.OrganizationAD">
            <summary>
            AD组织部门处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrganizationSave(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="adList"></param>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrgTreeInsert(Yinhe.ProcessingCenter.ADDepartment,Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.OrgTreeInsertSS(Yinhe.ProcessingCenter.ADDepartment,Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            组织架构同步
            </summary>
            <param name="node"></param>
            <param name="pnode"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.SetDepartmentFilter(System.Collections.Generic.List{System.String})">
            <summary>
            部门筛选
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserInsert(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},System.Int32,System.Int32)">
            <summary>
            用户同步  单用户
            </summary>
            <param name="userList"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserInsertByDepType(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            用户同步
            </summary>
            <param name="userList">用户列表</param>
            <param name="type">部门获取方式 0 名字 1 guid</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserAdd(Yinhe.ProcessingCenter.ADUser,System.Int32,System.Int32,System.Int32)">
            <summary>
            单个部门
            </summary>
            <param name="user"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.OrganizationAD.UserAddMulDep(Yinhe.ProcessingCenter.ADUser,System.Int32,System.Int32,System.Int32)">
            <summary>
            多个部门
            </summary>
            <param name="user"></param>
            <param name="type"></param>
            <param name="defaultState"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Season">
            <summary>
            时间处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Season.Init(System.DateTime,System.DateTime)">
            <summary>
            初始化
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Season.CalcSeasonCount(System.DateTime,System.DateTime)">
            <summary>
            计算传入的两个时间存在几个季度
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SeasonMonth">
            <summary>
            节点对应月份信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DateTimeHelper">
            <summary>
            时间操作相关
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetMonths(System.DateTime,System.DateTime)">
            <summary>
            给定开始和结束时间，遍历其所有月份，返回格式为：2013-07
            </summary>
            <param name="start">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.CalcMonthCount(System.DateTime,System.DateTime)">
            <summary>
            计算两个时间月份数
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.GetYears(System.DateTime,System.DateTime)">
            <summary>
            遍历年份
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.CompareYM(System.String,System.String)">
            <summary>
            比较两个时间是否同年同月
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DateTimeHelper.LTE(System.DateTime,System.DateTime)">
            <summary>
            比较start是否小于等于end只比较月份
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Mvc.Html.AuthExtensions">
            <summary>
            权限验证
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll">
            <summary>
            计算冲突决策处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll.CalcConflictData(System.String,System.String)">
            <summary>
            计算冲突决策所需要的值
            </summary>
            <param name="projId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PolicyDecision.ConflictFeedbackBll.CalcDateRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String)">
            <summary>
            计算最大最小时间差距
            </summary>
            <param name="list">列表</param>
            <param name="dateKey">时间</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingSerie">
            <summary>
            定制报表serie基类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Reports.ReportingSerie.displayValueLable">
            <summary>
            是否显示该系列的值标签
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.reportingData">
            <summary>
            分组Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.name">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Reports.ReportingSerie.chartType">
            <summary>
            图表类型
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll">
            <summary>
            客群分析特征处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.ProductDevelop.ProductSegmentFeatureBll.InitSegmentFeatures(System.String,System.String)">
            <summary>
            初始化系列的客群分析特征
            </summary>
            <param name="seriesId"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula">
            <summary>
            同步任务的开始时间和结束时间的公式类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.AnalysisFormula(System.Int32,System.String)">
            <summary>
            解析公式
            </summary>
            <param name="taskId"></param>
            <param name="relTaskId"></param>
            <param name="formulaParam"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.BeginSyncFormulaDate(System.String,System.String)">
            <summary>
            开始批量添加
            </summary>
            <param name="bllFormula"></param>
            <param name="strOperate"></param>
            <param name="projId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.PatchAnalysisFormula(System.Int32,System.String)">
            <summary>
            解析公式
            </summary>
            <param name="taskId"></param>
            <param name="relTaskId"></param>
            <param name="formulaParam"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.ChangeSubmit">
            <summary>
            提交修改更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.IsClosedLoop(Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject)">
            <summary>
            检查是否有闭环
            </summary>
            <param name="formulaObj"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.SEDateSyncFormula.CheckClosedLoop(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            递归检测循环
            </summary>
            <param name="strOperate"></param>
            <param name="strOperateList"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject">
            <summary>
            公式对象
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.ConvertExp">
            <summary>
            转化表达式
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.ConvertOpnd(System.String@,System.Text.StringBuilder@)">
            <summary>
            转换操作数
            </summary>
            <param name="strOpnd"></param>
            <param name="result"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.CalcValue">
            <summary>
            表达式求值
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.IsDouble(System.String)">
            <summary>
            判断是否为整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.IsWright(System.String)">
            <summary>
            检验公式格式是否正确
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.GetRelTaskIdStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            拼接关联任务Id
            </summary>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.ConvertFormulaParam(System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.String@,System.String@)">
            <summary>
            转换表达式（导入模板使用）
            </summary>
            <param name="taskIdDic"></param>
            <param name="formulaParam"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.date">
            <summary>
            关联的日期
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.OperDateType">
            <summary>
            操作的日期类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.ReadDateType">
            <summary>
            获取的日期类型
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.StrRelTaskId">
            <summary>
            被关联的任务Id
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DesignManage.TaskFormula.FormulaObject.ConvertedExpression">
            <summary>
            转化后的表达式
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll">
            <summary>
            分项资料库处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.ProjDocLibBll.CheckName(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            检查重名
            </summary>
            <param name="docLibId"></param>
            <param name="docCatId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.CompleteInstanceStatus">
            <summary>
            更新计划状态为进行中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.CompleteInstanceStatus.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改计划状态为进行中
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="T:MongoDB.Bson.BsonDocumentExtension">
            <summary>
            BsonDoc方法重载
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SourceBson(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字段对应的主表记录
            </summary>
            <param name="bsonDoc"></param>
            <param name="foreignFieldName"> 外键字段名称</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SourceBsonField(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            快捷获取字段对应的主表记录的字段值
            </summary>
            <param name="bsonDoc"></param>
            <param name="foreignFieldName">外键值</param>
            <param name="fieldName">外键表要获取的字段</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ChildBsonList(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字段对应的主表记录
            </summary>
            <param name="bsonDoc"></param>
            <param name="name">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Text(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取文本值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Text(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
             获取文本值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.String(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取字符串值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.TryAdd(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            向对象新增key，如果key已经存在，则修改原先key对应的值
            </summary>
            <param name="bsonDoc"></param>
            <param name="key">key值</param>
            <param name="val">要新增的对象</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.String(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
             获取字符串值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Int(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取整形值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Int(MongoDB.Bson.BsonDocument,System.String,System.Int32)">
            <summary>
            获取整形值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Money(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            货币的格式展示
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Date(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Date(MongoDB.Bson.BsonDocument,System.String,System.DateTime)">
            <summary>
            获取日期值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Double(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Double(MongoDB.Bson.BsonDocument,System.String,System.Double)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Decimal(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.Decimal(MongoDB.Bson.BsonDocument,System.String,System.Decimal)">
            <summary>
            获取浮点值
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ContainsColumn(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取当前记录的是否包含列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ColumnCount(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的是否包含列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.CreateDate(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.UpdateDate(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.CreateUserName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.UpdateUserName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取当前记录的创建人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.DateFormat(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name">字段名</param>
            <param name="formate">例如"yyyy-MM-dd"</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.ShortDate(MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            获取日期值,无值则返回DateTime.MinValue
            </summary>
            <param name="bsonDoc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.KeyField(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段名
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.TableName(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段名
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.KeyValue(MongoDB.Bson.BsonDocument)">
            <summary>
            获取主键字段
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.IsNullOrEmpty(MongoDB.Bson.BsonDocument)">
            <summary>
            判断一个BsonDocument是否为空或为NULL
            </summary>
            <param name="bsonDoc"></param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentExtension.SetValue(MongoDB.Bson.BsonDocument,System.String,System.String)">
            <summary>
            通用设置接口
            </summary>
            <param name="bsonDoc"></param>
            <param name="fieldName"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter">
            <summary>
            响应流过滤去（权限过滤）
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            过滤输出的Html代码
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.CheckDataRight(System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            检查数据权限代码
            </summary>
            <param name="dataObjId"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.AllUserRight">
            <summary>
            用户权限代码列表
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.ResponseAuthFilter.DicDataRigh">
            <summary>
            权限项代码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.QREncodeHelper">
            <summary>
            图片编码处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll.GetRecentProjEngList(System.Int32,System.Int32,System.String)">
            <summary>
            获取最近浏览工程
            </summary>
            <param name="userId"></param>
            <param name="maxLength"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll.GetRecentSupplierList(System.Int32,System.Int32,System.String)">
            <summary>
            获取最近浏览供应商列表
            </summary>
            <param name="userId"></param>
            <param name="maxLength"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.DesignManage.GetRecentBll.SaveRecent(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            保存最近浏览的关键值 
            </summary>
            <param name="keyValue">关键值</param>
            <param name="length"></param>
            <param name="userId"></param>
            <param name="typeName">类别,同一张表的对象也可能分为不同类别，因此不采用tableName进行存储</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll">
            <summary>
            档案编号处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll.HasExist(System.String,System.String,System.String,System.String)">
            <summary>
            判断是否存在
            </summary>
            <param name="tableName"></param>
            <param name="referFieldName"></param>
            <param name="referFieldValue"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll.GetAvaibaleNum(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取档案最后编号
            </summary>
            <param name="flowId"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusFlowFileNumberBll.GenerateFileNum(System.String,System.String,System.String,System.String)">
            <summary>
            生成最新档案编号SJBG-201402-003
            </summary>
            <param name="flowId"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.SendFinishMsg">
            <summary>
            更新计划状态为进行中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendFinishMsg.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            对所有流程人员发送消息
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendFinishMsg.MethodCompleted(System.IAsyncResult)">
            <summary>
            异步回调函数
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendFinishMsg.MethodCompleted1(System.IAsyncResult)">
            <summary>
            异步回调函数
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.SendFinishMsg.MyMethod">
            <summary>
            短信发送
            </summary>
            <param name="phoneNumber"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.SendCirculateMail">
            <summary>
            流程传阅通知事务操作
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendCirculateMail.GetToUserIds(MongoDB.Bson.BsonDocument)">
            <summary>
            获取邮件接收者ids
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendCirculateMail.SendMail(System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Boolean)">
            <summary>
            异步发送邮件
            </summary>
            <param name="idList">收件人id</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="fileName">邮件附件</param>
            <param name="isBodyHtml">邮件内容是否html格式</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendCirculateMail.SendMail(System.Collections.Generic.List{System.Int32},System.String,System.String,System.String,System.Boolean)">
            <summary>
            异步发送邮件
            </summary>
            <param name="idList">收件人id</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="fileName">邮件附件</param>
            <param name="isBodyHtml">邮件内容是否html格式</param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TypeConvert">
            <summary>
            类型转换处理类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToBsonDocument(System.String)">
            <summary>
            将字符串转换为BsonDocument
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.DicToBsonDocument(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            将键值对转换为BsonDocument
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NameValueToBsonDocument(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValue结构转化为BsonDocument
            </summary>
            <param name="sourceNVC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToNameValue(System.String)">
            <summary>
            将字符串数据转化为NameValueCollection结构
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NameValueToQuery(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValue结构转化为Mongo查询类型
            </summary>
            <param name="sourceNVC"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ParamStrToQuery(System.String)">
            <summary>
            将字符串转化为Mongo查询类型
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NativeQueryToQuery(System.String)">
            <summary>
            将原生查询语句转换为Query
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.InvokeResultToPageJson(Yinhe.ProcessingCenter.InvokeResult)">
            <summary>
            将InvokeResult转换为PageJson
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.CNStringToPinYinString(System.String)">
            <summary>
            中文字符串转化为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.NativeQueryToResultValue(System.String)">
            <summary>
            将原生查询语句转换为结果字符串
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.StringListToBsonValueList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            将字符串列表转换为BsonValue列表
            </summary>
            <param name="strList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ToObjectId(System.String)">
            <summary>
            
            </summary>
            <param name="_id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.ToObjectIdList(System.Collections.Generic.List{System.String})">
            <summary>
            将字符串列表转换成ObjectId列表
            </summary>
            <param name="strList">字符串列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.StringToIntEnum(System.String,System.String)">
            <summary>
            将spliter分隔的Id字符串解析
            </summary>
            <param name="Ids"></param>
            <param name="spliter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.BsonDocumentToLogStr(MongoDB.Bson.BsonDocument)">
            <summary>
            将Bosn数据转化为日志格式字符串
            </summary>
            <param name="sourceBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.BsonDocumentToLogStr(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            将Bosn数据转化为日志格式字符串
            </summary>
            <param name="sourceBson"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TypeConvert.MoneyLowerToUpper(System.Double)">
            <summary>
            金额小写转中文大写。
            整数支持到万亿；小数部分支持到分(超过两位将进行Banker舍入法处理)
            </summary>
            <param name="Num">需要转换的双精度浮点数</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PinyinHelper">
            <summary>
            获得汉字的拼音
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.GetPinyin(System.String)">
            <summary>
            获得汉字的拼音，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.ChangeChinesetoPinYin(System.String)">
            <summary>
            将中文转换为拼音
            </summary>
            <param name="cnStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.PinyinHelper.GetShortPinyin(System.String)">
            <summary>
            获得汉字拼音的简写，即每一个汉字的拼音的首字母组成的串，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音简写</returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.CNToPinyin.GetChineseSpell(System.String)">
            <summary>
            获取传入中文的首字母，如果是英文直接返回
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AuthFilter">
            <summary>
            身份验证aop处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="codes">模块权限代码</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.#ctor(System.String[],System.String)">
            <summary>
            构造函数
            </summary>
            <param name="codes">模块权限代码</param>
            <param name="url">验证不通过跳转地址</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.AuthFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            执行Action过滤验证
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectRightAttribute">
            <summary>
            验证分项权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ProjectRightAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>
            分项权限过滤器
            </summary>
            <param name="roleType">权限类型</param>
            <param name="dataKey">数据对象key</param>
            <param name="codes">权限代码</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysRightAttribute">
            <summary>
            验证系统权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SysRightAttribute.#ctor(System.String[])">
            <summary>
            验证系统权限
            </summary>
            <param name="codes">权限码</param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysModuleFunction">
            <summary>
            系统模块类
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.Device.BrandBll">
            <summary>
            设备品牌处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Business.Device.BrandBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.BrandBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.BrandBll.#ctor(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.BrandBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.BrandBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.Device.BrandBll.GetIdNameDic">
            <summary>
            获取品牌或者属性类型字典  key:Id value:名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Administration.SysUserBll">
            <summary>
            系统用户表处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Administration.SysUserBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindUsersByOrgIdByView(System.Int32)">
            <summary>
            获取部门下的用户（通过部门id)2011.2.28郑伯锰优化搜索速度
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindUsersByOrgPostIdByView(System.Int32)">
            <summary>
            获取部门岗位下的用户2011.2.28郑伯锰优化搜索速度
            </summary>
            <param name="orgPostId">部门岗位id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindUsersByCommonPostIdByView(System.Int32)">
            <summary>
            获取通用岗位下的用户)2011.2.28郑伯锰优化搜索速度
            </summary>
            <param name="compostId">通用岗位id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindUsersByGroupIdView(System.Int32)">
            <summary>
            获取群组下的用户.2011.2.28 郑伯锰添加视图 优化查找速度
            </summary>
            <param name="sysgrpId">群组id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindSysRoleUsers(System.Int32)">
            <summary>
            查询出系统角色对应的人员表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Administration.SysUserBll.FindUsersBySearchByView(System.String)">
            <summary>
            通过名称搜索 2011.2.28郑伯锰优化搜索速度
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.MongoOperation">
            <summary>
            Mongos数据连接操作
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.#ctor">
            <summary>
            默认构造函数,读取配置项中的数据库
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.#ctor(System.String)">
            <summary>
            构造函数,串入数据库连接串,进行数据库连接
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.ConnectionDataBase(System.String)">
            <summary>
            连接数据库
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.UseDataBase(System.String)">
            <summary>
            切换使用的数据库
            </summary>
            <param name="dbName">切换的数据库名称</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetServer">
            <summary>
            获取当前服务器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetDataBase">
            <summary>
            获取当前数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.GetCollection(System.String)">
            <summary>
            获取所需集合
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindOne(System.String)">
            <summary>
            查找集合中的默认第一条记录
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindOne(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找一条记录
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindAll(System.String)">
            <summary>
            查找集合中所有记录
            </summary>
            <param name="collName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.FindAll(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            根据搜索条件查找多条记录
            </summary>
            <param name="collName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.EvalNativeQuery(System.String)">
            <summary>
            执行原生查询
            </summary>
            <param name="queryStr"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            插入单条数据
            </summary>
            <param name="collName"></param>
            <param name="saveDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            批量插入数据
            </summary>
            <param name="collName"></param>
            <param name="saveDocList"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Save(System.String,MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonDocument)">
            <summary>
            更新记录
            </summary>
            <param name="collName"></param>
            <param name="searchDoc">可为空,为空为插入</param>
            <param name="saveDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.MongoOperation.Delete(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            删除记录
            </summary>
            <param name="collName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.ForeachRule">
            <summary>
            循环规则,继承基础操作规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Name">
            <summary>
            循环对象的引用名称
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Object">
            <summary>
            循环的对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.ForeachRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ForeachRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.ForeachRule.SetForeachRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应的循环规则
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SysAppConfig">
            <summary>
            系统配置项处理类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsPlugIn">
            <summary>
            是否是插件项目
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.DataBaseConnectionString">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.GlobalCss">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.HostDomain">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.Domain">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PDFDomain">
            <summary>
            PDF站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.WKhtmltopdfUrl">
             <summary>
            WKhtmltopdf.exe的地址
             </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MailHostDomain">
            <summary>
            邮件站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsShowUO">
            <summary>
            是否显示多余用户及组织
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsPublish">
            <summary>
            HOST站点的地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsIgnoreName">
            <summary>
            复制对象时候是否忽略重名判断
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.CustomerCode">
            <summary>
            客户服务代码
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MasterServerAddress">
            <summary>
            主控地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.LoginUrl">
            <summary>
            登陆页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IndexUrl">
            <summary>
            首页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.MenuJS">
            <summary>
            首页地址
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.ADName">
            <summary>
            ADName
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.LDAPName">
            <summary>
            LDAPName
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHaccountID">
            <summary>
            XHaccountID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHenterpriseID">
            <summary>
            XHenterpriseID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.XHPassword">
            <summary>
            XHPassword
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SNADDomain">
            <summary>
            SNADDomain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SenderClass">
            <summary>
            SenderClass
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsSendSms">
            <summary>
            SNADDomain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsBelongOneOrg">
            <summary>
            IsBelongOneOrg
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsFreezeZone">
            <summary>
            是否开启
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeBegHour">
            <summary>
            开始
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeEndHour">
            <summary>
            结束
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezePeriod">
            <summary>
            间隔分钟
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.FreezeDuration">
            <summary>
            持续分钟
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SSSSOValidateUrl">
            <summary>
            SSSSOValidateUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SSSSOLoginOutUrl">
            <summary>
            SSSSOLoginOutUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXOrgUrl">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXUserUrl">
            <summary>
            QXUserUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXOrgXMLPath">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXUserXMLPath">
            <summary>
            QXOrgUrl
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.QXSDDomain">
            <summary>
            侨鑫市调模块domain
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SiteLogoUrl">
            <summary>
            站点logo url
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.SignStepId">
            <summary>
            经办部门签发步骤ID
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SysAppConfig.IsUpdateOAToDo">
            <summary>
            是否自动更新OA待办已办
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.ADSynchronization">
            <summary>
            AD域登录同步处理
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADSynchronization.SearchDepartment(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            搜索部门AD
            </summary>
            <param name="path"></param>
            <param name="objFilter"></param>
            <param name="dicPropertes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADSynchronization.SearchUser(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            搜索用户
            </summary>
            <param name="path"></param>
            <param name="objFilter"></param>
            <param name="dicPropertes"></param>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.Domain">
            <summary>
            AD域名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.UserName">
            <summary>
            登陆AD域的用户名
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.SynAD.ADSynchronization.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADDepartment">
            <summary>
            部门实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ADUser">
            <summary>
            AD同步用户实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.ProjectRightScope">
            <summary>
            项目权限数据范围
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.GetDataScopes(System.Int32)">
            <summary>
            获取角色对应数据范围列表
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.Save(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity},System.Int32)">
            <summary>
            保存角色数据范围数据
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.ConvertToBiz(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            将数据对象转为业务对象
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.ProjectRightScope.ConvertToBson(System.Collections.Generic.List{Yinhe.ProcessingCenter.Permissions.DataScopeEntity})">
            <summary>
            将实体对象转为bsondocument
            </summary>
            <param name="dataScopes"></param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Mvc.Html.HtmlExtensions">
            <summary>
            Html重载
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.ShowSelect(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
            <summary>
            获取下拉列表中的选择项名称
            </summary>
            <param name="htmlHelper"></param>
            <param name="selectList"></param>
            <param name="selectVal"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.BsonSelectList(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.String)">
            <summary>
            bson枚举生成selectList对象
            </summary>
            <param name="htmlHelper"></param>
            <param name="bsonList">bson枚举列表</param>
            <param name="id">下拉列表Id项的key值</param>
            <param name="name">下拉列表name项的key值</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.BsonSelectList(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},System.String,System.String,System.Object)">
            <summary>
            bson枚举生成selectList对象
            </summary>
            <param name="htmlHelper"></param>
            <param name="bsonList">bson枚举列表</param>
            <param name="id">下拉列表Id项的key值</param>
            <param name="name">下拉列表name项的key值</param>
            <param name="selectValue">选择项</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDiv(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为金额
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivDecimal(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为十进制数
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivDate(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            产品决策，正式数据展示。正式数据返回格式为时间
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivStr(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivStr(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DiffDivTextStr(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串textArea格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.FormLogHtml(System.Web.Mvc.HtmlHelper,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            情报库、产品定位，正式数据展示。正式数据字符串textArea格式
            </summary>
            <param name="htmlHelper"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.GenerateDesignChangeFileNum">
            <summary>
            更新计划状态为进行中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.GenerateDesignChangeFileNum.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改计划状态为进行中
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll">
            <summary>
            流程用户授权处理类
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.dataOp">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.FindById(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.FindByFlowInstanceId(System.Int32)">
            <summary>
            根据Id查询
            </summary>
            <param name="flowInstanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.HasTurnRightQuery(System.Int32,System.Int32)">
            <summary>
            获取当前是否被转办,没过滤status 应为可能被过滤多次
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.FindByFlowInstanceId(System.Int32,System.Int32)">
            <summary>
            获取当前当前用户被给予的权限列表
            </summary>
            <param name="flowInstanceId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.LastUserGrant(System.String,System.String,System.Int32)">
            <summary>
            获取上步骤的转办给当前人的记录
            </summary>
            <param name="flowInstanceId"></param>
            <param name="stepId"></param>
            <param name="curUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.FirstUserGrant(System.String,System.String,System.Int32)">
            <summary>
            获取最早上步骤的转办给当前人的记录
            </summary>
            <param name="flowInstanceId"></param>
            <param name="stepId"></param>
            <param name="curUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.HasExistObj(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="flowInstanceId"></param>
            <param name="grantUserId"></param>
            <param name="givenUserId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.FindAll">
            <summary>
            查找出所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.Insert(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.Insert(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,System.Int32)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.BusinessFlowUserGrantBll.Update(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.BusinessFlow.SendNextMsg">
            <summary>
            为下一步流程人员发送消息
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.BusinessFlow.SendNextMsg.ExecuteTran(System.Int32,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            修改计划状态为进行中
            </summary>
            <param name="UserId"></param>
            <param name="instance"></param>
            <param name="stepTran"></param>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ViewFreePageBase">
            <summary>
            免登陆查看页面基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.ViewFreePageBase.OnLoad(System.EventArgs)">
            <summary>
            重写加载方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.dataOp">
            <summary>
            数据操作类
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ViewFreePageBase.CurrentUserName">
            <summary>
            获取当前用户的用户名
            </summary>
            <value>当前用户的用户名</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.TableRule">
            <summary>
            表规则
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.Name">
            <summary>
            名称,表与表间的唯一标示
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.ColumnRules">
            <summary>
            表中的字段列表
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.CascadeRules">
            <summary>
            表中的级联操作
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.TableRule.HasLog">
            <summary>
            是否记录到主表日志中
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.#ctor(System.String)">
            <summary>
            默认构造函数,传入表名,读取数据规则
            </summary>
            <param name="tbName"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.#ctor(System.Xml.Linq.XElement)">
            <summary>
            初始化内容构造
            </summary>
            <param name="entityElement"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.SetTableRule(System.Xml.Linq.XElement)">
            <summary>
            根据XML获取对应表实体
            </summary>
            <param name="entityElement"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetAllTables">
            <summary>
            查找当前站点中的所有表规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetAllForeignTables(System.String)">
            <summary>
            获取当前表的所有子表,即有外键到到当前表的表
            </summary>
            <param name="tbName"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.TableRule.GetPrimaryKey">
            <summary>
            获取主键名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.DataRule.TableRule.PrimaryKey">
            <summary>
            获取主键的名称
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.DataRule.DataObject">
            <summary>
            数据对象
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.QueryStr">
            <summary>
            查询字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.DataStr">
            <summary>
            数据字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.ValueStr">
            <summary>
            普通值字符串
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.Type">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.DataRule.DataObject.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.#ctor(System.String)">
            <summary>
            带对象字符串的构造函数
            </summary>
            <param name="objectStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.SetDataObject(System.String)">
            <summary>
            设置对象值
            </summary>
            <param name="objectStr"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetQuery(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的查询
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetDataBsonDocument(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的数据文档
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.GetValue(System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            获取数据对象中的值
            </summary>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.ReplaceBracket(System.String,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            递归处理级联语句中的中括号
            </summary>
            <param name="sourceStr"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.DataRule.DataObject.ResolveBracket(System.String,System.Collections.Generic.List{Yinhe.ProcessingCenter.DataRule.VarRule},System.Collections.Generic.Dictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            解析级联操作中中括号括号的值
            </summary>
            <param name="sourceStr"></param>
            <param name="varList"></param>
            <param name="sourceDic"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TreeHelper">
            <summary>
            树状操作类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHelper.GetSingleTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            获取单表树列表
            </summary>
            <param name="dataList"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.TreeHelper.GetSingleTreeList(System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            获取子树列表
            </summary>
            <param name="dataList"></param>
            <param name="primaryKey"></param>
            <param name="nodePid"></param>
            <param name="nodeLevel"></param>
            <param name="childCount"></param>
            <param name="leafCount"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.XmlTree">
            <summary>
            将树形列表输出为XML
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode})">
            <summary>
            构造函数
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.#ctor(System.Collections.Generic.List{Yinhe.ProcessingCenter.TreeNode},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">输出数据</param>
            <param name="param">默认参数</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.XmlTree.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context">The context within which the result is executed.</param>
        </member>
        <member name="P:Yinhe.ProcessingCenter.XmlTree.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.XmlTree.TreeParam">
            <summary>
            默认参数
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.SynAD.ADToDB">
            <summary>
            AD数据处理
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.DicDep">
            <summary>
            Ad属性与部门对应字典
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.DicUser">
            <summary>
            ad属性与用户的对应字典
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.HadPathList">
            <summary>
            已经遍历过的部门
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.UserFilter">
            <summary>
            用户过滤器
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.DepFilter">
            <summary>
            部门过滤器
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.adRootPath">
            <summary>
            AD域的根路径
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.SynAD.ADToDB.ADsyn">
            <summary>
            获取AD属性对象
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.GetADTreeHQC(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            获取ＡＤ部门，用户树
            </summary>
            <param name="depList"></param>
            <param name="userList"></param>
            <param name="curDep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.GetADTree(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            获取ＡＤ部门，用户树
            </summary>
            <param name="depList"></param>
            <param name="userList"></param>
            <param name="curDep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.GetADTreeByGuid(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            获取ＡＤ部门，用户树 用户单个部门
            </summary>
            <param name="depList"></param>
            <param name="userList"></param>
            <param name="curDep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.GetADTreeByGuidMultDepZHHY(System.Collections.Generic.List{Yinhe.ProcessingCenter.ADDepartment},System.Collections.Generic.List{Yinhe.ProcessingCenter.ADUser},Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            获取ＡＤ部门，用户树 用户属于多个部门
            </summary>
            <param name="depList"></param>
            <param name="userList"></param>
            <param name="curDep"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.ImportToDBXH">
            <summary>
            旭辉
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.ImportToDBSN">
            <summary>
            苏宁
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.ImportToDBHQC">
            <summary>
            华侨城同步
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.ImportToDBZHTZ">
            <summary>
            中海投资
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.SynAD.ADToDB.UserListFilter(Yinhe.ProcessingCenter.ADDepartment)">
            <summary>
            从组织架构树中取出用户列表
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.InvokeResult">
            <summary>
            业务层调用结果类型.
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Exception">
            <summary>
            获取或设置当期异常
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Status">
            <summary>
            获取或设置当前状态
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Key">
            <summary>
            获取或设置Key名称
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.Message">
            <summary>
            获取或设置消息文本
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.FileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult.BsonInfo">
            <summary>
            获取结果信息
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.InvokeResult`1">
            <summary>
            附带值类型的结果类型
            </summary>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="P:Yinhe.ProcessingCenter.InvokeResult`1.Value">
            <summary>
            返回泛型的结果值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Status">
            <summary>
            结果状态枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Successful">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Failed">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Suspend">
            <summary>
            挂起
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Invaild">
            <summary>
            无效的
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Status.Specific">
            <summary>
            特定的状态,需要参考Message属性.
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeOperation">
            <summary>
            Created By Robin  2012年5月20日 
            1 先将文件列表转化成单节点树
            2 将树集合进行排序  取节点最深的为主树
            3 将其他树与主树合并
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ScanFolder(System.String)">
            <summary>
            文件夹扫描 用于测试
            </summary>
            <param name="rootPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeCombine(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            树合并
            </summary>
            <param name="root"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ListAnalyse(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            列表分析
            </summary>
            <param name="root"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreePrint(Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            树遍历  打印
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayGenerate(System.String,System.String)">
            <summary>
            将地址转化成数组
            </summary>
            <param name="root"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeGenerate(System.String,System.String)">
            <summary>
            将文件路径装换成树形 单节点
            </summary>
            <param name="root">跟目录</param>
            <param name="path">完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayAnalyze(System.String[],System.Int32,System.String)">
            <summary>
            数组分析
            </summary>
            <param name="dirArray"></param>
            <param name="currentIndex"></param>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.ArrayMulAnalyze(System.String[],System.Int32,System.String)">
            <summary>
            数组分析
            </summary>
            <param name="dirArray"></param>
            <param name="currentIndex"></param>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.SetNode(Yinhe.ProcessingCenter.Document.TreeNode,System.Collections.Generic.Dictionary{System.Int32,Yinhe.ProcessingCenter.Document.TreeDic})">
            <summary>
            树合并
            </summary>
            <param name="motherNode">母树</param>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.CreateEmptyTree(System.Int32,System.Int32)">
            <summary>
            创建一棵空树  单节点
            </summary>
            <param name="treeLevel"></param>
            <param name="currentLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeToDic(Yinhe.ProcessingCenter.Document.TreeNode,System.String[])">
            <summary>
            将树转化为字典
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Document.TreeOperation.TreeLevel(Yinhe.ProcessingCenter.Document.TreeNode)">
            <summary>
            计算树深度
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeNode">
            <summary>
            树实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.TreeDic">
            <summary>
            树字典
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Document.IObjectOperation">
            <summary>
            对象处理接口
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.AreaRoleType">
            <summary>
            区域角色枚举
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Area">
            <summary>
            区域
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Land">
            <summary>
            地块
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Permissions.AreaRoleType.Project">
            <summary>
            项目分期
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.Authentication">
            <summary>
            用户权限项验证处理相关
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.#ctor(System.Int32)">
            <summary>
            传入用户Id，获取该用户的所有权限
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.#ctor">
            <summary>
            默认装载当前用户的所有权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.InitSysRight">
            <summary>
            系统角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.InitProjectRoleRight">
            <summary>
            项目角色权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetSysProjectRight">
            <summary>
            获取项目权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetUserOfProjectRight(System.String,System.String,System.String)">
            <summary>
            通过权限码，获取有该项目权限的用户列表
            </summary>
            <param name="roleType"></param>
            <param name="dataId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.FindUserByRoleIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            通过角色Id获取角色用户
            </summary>
            <param name="roleIdList">角色Id列表</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetInitProjectRight">
            <summary>
            获取内置项目权限
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.GetUserRoles(System.Int32)">
            <summary>
            获取用户在系统中的所有角色Id
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.CheckProjectRight(System.String,System.String,System.String[])">
            <summary>
            验证
            </summary>
            <param name="code">权限码组成：模块_操作 e.g. MATERIALLIB_ADD 材料库新增权限</param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.CheckSysRight(System.String[])">
            <summary>
            验证系统权限
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.IsShowProjLibMenu">
            <summary>
            判断当前用户是否可以点击项目资料库按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Permissions.Authentication.IsShowProjMenu">
            <summary>
            判断用户是否有项目库的查看权限
            </summary>
            <returns></returns>
        </member>
        <member name="P:Yinhe.ProcessingCenter.Permissions.Authentication.CurrentUserId">
            <summary>
            获取当前用户的Id
            </summary>
            <value>当前用户的ID</value>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Permissions.Authentication.ScopeComparer">
            <summary>
            区域模块
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Common.RightCodeEnum">
            <summary>
            权限操作项
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.VIEW">
            <summary>
            查看
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.DOWNLOAD">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.ADD">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.UPDATE">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.UPDATEALL">
            <summary>
            更新所有
            </summary>
        </member>
        <member name="F:Yinhe.ProcessingCenter.Common.RightCodeEnum.ADMIN">
            <summary>
            维护
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Reports.ReportingFactory">
            <summary>
            报表工厂映射类
            </summary>
        </member>
        <member name="T:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll">
            <summary>
            页面内容处理类
            </summary>
        </member>
        <member name="F:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll._ctx">
            <summary>
            类私有变量
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.#ctor">
            <summary>
            封闭当前默认构造函数
            </summary>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll._">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll._(Yinhe.ProcessingCenter.DataOperation)">
            <summary>
            构造器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.FindById(System.Int32)">
            <summary>
            通过主键查找
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.FindByPageId(System.Int32)">
            <summary>
            通过pageId查找
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.FindLatestVersionByPageId(System.Int32,System.Int32)">
            <summary>
            获取最新版本的页面内容
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.FindAll">
            <summary>
            查找所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.Update(MongoDB.Bson.BsonDocument)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.Insert(MongoDB.Bson.BsonDocument)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.Save(MongoDB.Bson.BsonDocument,System.Int32,System.Collections.Generic.List{MongoDB.Bson.BsonDocument},System.String,System.Int32[])">
            <summary>
            保存内容
            </summary>
            <param name="entity"></param>
            <param name="refPageId"></param>
            <param name="tagList"></param>
            <param name="strTag"></param>
            <param name="retIds">成果Id</param>
            <returns></returns>
        </member>
        <member name="M:Yinhoo.Autolink.Business.MissionStatement.PageBodyBll.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Business.PushToSeeyon">
            <summary>
            推送消息致远OA基类
            </summary>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PushToSeeyon.PushTodoInfo(System.String[],System.String,System.String)">
            <summary>
            推送消息到致远OA
            </summary>
            <param name="loginNames">用户登录名数组</param>
            <param name="content">推送内容</param>
            <param name="url">推送内容url</param>
        </member>
        <member name="M:Yinhe.ProcessingCenter.Business.PushToSeeyon.GetUrls(System.String[],System.String)">
            <summary>
            获取用户获取的链接
            </summary>
            <param name="loginNames"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:Yinhe.ProcessingCenter.CityModel">
            <summary>
            城市实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EngineerModel">
            <summary>
            工程实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ProjectModel">
            <summary>
            分项实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ApproveLog">
            <summary>
            设计变更日志实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ApprovalModel">
            <summary>
            设计变更实体
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ApprovalModel.startDepartment">
            <summary>
            发起部门
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ApprovalModel.startTime">
            <summary>
            发起时间
            </summary>
        </member>
        <member name="P:Yinhe.ProcessingCenter.ApprovalModel.writeTime">
            <summary>
            发文时间
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.ActionModel">
            <summary>
            动作类型实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.Pedding">
            <summary>
            待办事项实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.EngStructure">
            <summary>
            EPS实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.TaskStructure">
            <summary>
            任务实体
            </summary>
        </member>
        <member name="T:Yinhe.ProcessingCenter.PorjectStructure">
            <summary>
            分项实体
            </summary>
        </member>
    </members>
</doc>
